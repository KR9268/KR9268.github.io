<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Blog</title>
<link>https://kr9268.github.io/</link>
<atom:link href="https://kr9268.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.553</generator>
<lastBuildDate>Sat, 27 Apr 2024 15:00:00 GMT</lastBuildDate>
<item>
  <title>NH증권 직무인터뷰를 읽고(트레이딩&amp;빅데이터)</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/vba-noname-yyyymmdd/</link>
  <description><![CDATA[ 





<section id="참고한-공고-인터뷰-자료" class="level2">
<h2 class="anchored" data-anchor-id="참고한-공고-인터뷰-자료">참고한 공고 &amp;인터뷰 자료</h2>
<p>관심이 생겨서 관련 공고 등을 보고 있는데, 직무이해 겸 모르는 단어를 정리해봅니다.</p>
<div class="callout callout-style-simple callout-none no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
참고한 공고 (클릭해서 펼치기)
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p><a href="https://nhqv-recruit2024.com/NH1.html">NH투자증권 채용공고-Trading</a></p>
<p><a href="https://nhqv-recruit2024.com/interview_u_08.html">NH투자증권 채용공고-빅데이터 분석</a></p>
<p><a href="https://nhqv-recruit2024.com/interview_u_04.html">NH투자증권 직무인터뷰</a></p>
</div>
</div>
</div>
</section>
<section id="트레이딩-직무-단어정리" class="level2">
<h2 class="anchored" data-anchor-id="트레이딩-직무-단어정리">트레이딩 직무 단어정리</h2>
<ul>
<li>프랍 트레이딩(Proprietary Trading) : 고객이 아닌 금융회사의 돈으로 주식이나 파생상품 등 금융상품을 거래하는 것 (=자기계정거래, 자기계좌거래, 고유계정거래, 고유계좌거래)</li>
</ul>
<blockquote class="blockquote">
<p><strong><code>프랍트레이딩</code></strong>은 통상 선물·옵션 등 <code>파생상품 부문</code>, 일반적 주식투자 같은 <code>방향성 매매</code>, 알고리즘에 따라 투자하는 <code>시스템 매매</code>, <code>채권투자</code>, 부동산이나 인프라 등의 <code>대체투자</code> 등으로 나뉜다. 보통 <u>자기매매 비중이 높은 중소형 증권사</u>에는 많게는 50여명에 이르는 프랍트레이더들이 있다. 이 가운데 <u>80% 이상이 파생 트레이더다.</u><br><u>중소형 증권사들의 파생상품투자 비중이 높은 것은 비용이 싸기 때문이다.</u> 증권사의 경우 선물·옵션 거래시 <code>사후 증거금 제도</code>가 적용된다. 장중 거래에는 증거금이 따로 필요 없고 장 마감 후 포지션 규모에 따라 증거금을 마련하면 된다. 따라서 <u>장중에는 활발히 거래하고 장 마감 직전 파생상품을 보유하지 않았으면 증거금 부담은 없다.</u> <u>하루 단위로 청산하는 경우 사실상 금융비용은 없다.</u></p>
<p><a href="https://www.sedaily.com/NewsView/1HLP1AH6UG">상기내용 참고한 서울경제 기사링크</a><br> <a href="https://blog.naver.com/vvvtg/223231778959">거래증거금vs위탁증거금 내용 참고할 수 있는 블로그</a></p>
</blockquote>
<ul>
<li><p>장내거래 vs 장외거래 : 정규시장 외 체결되는 거래</p></li>
<li><p>매크로 지식 : Macro economics지식 (↔︎ Micro economics)</p></li>
<li><p>서킷브레이커(일시매매정지, Trading Curb) : 가격 변동이 지나친 경우 일시적으로 거래를 중단하는 것</p></li>
<li><p>틱 : 체결량에 따른 단위 (5틱 = 체결 5회 기준)</p></li>
<li><p>셀사이드(Sell-side|은행, 증권사 등) : 금융 서비스 등을 제공하여 수익 창출</p></li>
<li><p>바이사이드(Buy-side|자산운용사, 연기금, 보험사, 헤지펀드 등) : 투자를 하여 수익 창출</p></li>
</ul>
<blockquote class="blockquote">
<p><a href="https://brunch.co.kr/@quantdaddy/34">참고글:셀사이드와 바이사이드의 금융공학</a></p>
</blockquote>
<ul>
<li>하우스 : 증권사, 금융사 등 단체를 칭함</li>
</ul>
</section>
<section id="빅데이터-직무-단어정리" class="level2">
<h2 class="anchored" data-anchor-id="빅데이터-직무-단어정리">빅데이터 직무 단어정리</h2>
<ul>
<li>MTS : Mobile Trading System (HTS : Home Trading System)</li>
<li>원장 : 증권사가 고객계좌나 거래내역, 매매 등을 관리하는 프로그램</li>
</ul>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>직무분석</category>
  <guid>https://kr9268.github.io/posts/vba-noname-yyyymmdd/</guid>
  <pubDate>Sat, 27 Apr 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>[버크셔 해서웨이의 재탄생 읽고] 용어 정리</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/bk-BerkshireHathaway-20240423-terms/</link>
  <description><![CDATA[ 





<p><strong>공부할 겸 혼자서 구글링하면서 용어 정리해보는 포스팅입니다</strong></p>
<section id="프롤로그" class="level2">
<h2 class="anchored" data-anchor-id="프롤로그">프롤로그</h2>
<ul>
<li><p><strong>경제적 해자(enonomic moat)</strong> : 성 외곽에서 성을 보호해주는 해자처럼 경쟁우위를 갖게 해주는 요소 (a business’s ability to maintain a competitive edge over its competitors)</p></li>
<li><p><strong>자본배분(capital allocation)</strong> : 경제적 자원들을 효율증대/이익극대화를 위해 분배/투자 하는 것 (distributing and investing a company’s financial resources in ways that will increase its efficiency, and maximize its profits) &gt; 자본배분을 알면 워런버핏 사례의 캐피털시티를 이해할 수 있다</p></li>
<li><p><strong>플로트(float, 책임준비금)</strong> : 보험회사가 보험금을 지급하기 위해 적립시키는 돈(은행과 달리 자산운용준칙에 따라 자율적으로 사용 가능)</p>
<ul>
<li>플로트라는 단어의 다른 뜻 : 일반 대중이 거래할 수 있게 발행한 보통주 (the regular shares a company has issued to the public that are available for investors to trade) &gt; 플로트를 알면 워런버핏 사례의 가이코를 이해할 수 있다 (내셔널 인뎀너티와 블루칩스탬프의 플로트를 활용한 투자법 등)</li>
</ul></li>
<li><p><strong>재보험</strong> : 보험계약상 책임의 전부 또는 일부를 다른 보험자에게 인수시킴 (위험의 분산과 인수능력의 극대화를 위해 필요, 위험 대비 자산이 충분치 않은 경우 재보험으로 보험금액의 전부 인수가능)</p></li>
<li><p><strong>영업이익(operating income/earnings)</strong> : 기업의 핵심사업(영업활동)으로 얻은 이익 (a measure of the amount of profit realized from a business’s core operations)</p></li>
<li><p><strong>연간 영업활동 순이익(operating earnings)</strong> : 영업활동에 필요한 차입금 등 부채의 이자비용도 차감한 이익(영업활동에서 발생한 순이익)</p></li>
<li><dl>
<dt><strong>일반 회계기준(GAAP, Generally Accepted Accounting Principles, GAAP)</strong></dt>
<dd>
일반적으로 인정된 회계원칙. 회계규정 자체 또는 회계실무 지침 등 광범위하게 인정되는 회계기준 &gt; GAAP관련 추가로 알아보기
</dd>
</dl></li>
<li><p>**IFRS(International&nbsp;Financial&nbsp;Reporting&nbsp;Standards) : 국제회계기준위원회에서 공표한 회계기준. IFRS를 공부하면 IFRS를 차용한 국가의 회사 재무제표는 같은 형식으로 이해 가능</p></li>
<li><dl>
<dt><strong>규칙기반의 GAAP vs 원칙기반의 IFRS</strong></dt>
<dd>
IFRS는 원칙에 따라 작성해 형태 차이가 거의 없으나, GAAP는 세부적인 사안에 대해 자세히 기술(IFRS도 주석 부분에 기술)
</dd>
<dd>
내용을 세세하게 다루거나, 공정가치를 계산하지않아 IFRS보다 현재가치를 크게 하고 싶을때 GAAP사용
</dd>
</dl></li>
<li><dl>
<dt><strong>Non-GAAP</strong></dt>
<dd>
반복적으로 발생하지 않는 1회적 비용은 제외하고 회계처리. 비용이 줄어 순수익이 늘어남
</dd>
<dd>
미국의 경우 Non-GAAP로 다양한 비용을 제외시켜 표시하는 것이 불법은 아님(기업에 유리) <a href="https://muroyallife.tistory.com/entry/GAAP%EA%B3%BC-IFRS%EC%9D%98-%EC%B0%A8%EC%9D%B4-%EA%B7%B8%EB%9F%AC%EB%A9%B4-Non-GAAP%EC%9D%80-%EB%AD%90%EC%95%BC">참고한 링크</a>
</dd>
</dl></li>
</ul>
</section>
<section id="장.-섬유공장" class="level2">
<h2 class="anchored" data-anchor-id="장.-섬유공장">1장. 섬유공장</h2>
<blockquote class="blockquote">
<ul>
<li><strong>총자산이익률(ROA, Return on assets)</strong> : 순이익 / 총자산(자기자본 + 타인자본). 얼마나 순이익이 창출되는지 판단할 수 있음. ROA의 높고 낮음에 따라 주가의 높낮이도 따를 가능성이 큼 산업의 성숙기[성장/성숙/사양 등]에 따라 ROA는 달라질 수 있음</li>
<li><strong>자기자본이익률(ROE, Return on equity)</strong> : 순이익 / 자본총계(자산-부채) ROA가 높은 경우 적정 수준으로 부채확대를 통해 총자산 자체를 늘리면 ROE를 높일 수 있음 <a href="https://m.itooza.com/view.php?ud=2011052715374391424">참고한 링크</a> <a href="https://support.stockplus.com/hc/ko/articles/5059590236057-%EA%B8%B0%EC%97%85%EC%9D%B4-%EB%8F%88%EC%9D%84-%EC%9E%98-%EB%B2%8C%EA%B9%8C-ROE-%EA%B8%B0%EC%B4%88">참고한 링크</a></li>
</ul>
</blockquote>
<ul>
<li><p><strong>운전자본(Working Capital, =유동자본?)</strong> : 회사를 운영하는데 들어가는 돈(매출채권, 선급금, 재고자산 등 유동자산과 매입채무, 선수금 등 유동부채가 해당함)</p></li>
<li><p>순운전자본(Net Working Capital, 운전자본-총부채) : ?? (클럽 설명) 벤자민 그레이엄이 ’현명한 투자자’에서 주창한 투자 전략 즉시 현금화할 수 있는 자산과 비교함으로써 보수적인 기준에서 주가의 저(고)평가 여부를 판단하는 척도로 사용</p></li>
<li><p>장부가치</p></li>
<li><p>주가순자산배수(PBR, price to book value)</p></li>
<li><p>주주환원</p></li>
<li><p>자사주 매입</p></li>
<li><p>감가상각비</p></li>
<li><p>자산 대체원가</p></li>
<li><p>무형자산상각비 차감 전 이익(EBITDA)</p></li>
<li><p>투하자본</p></li>
<li><p>투하자본이익률(ROIC, return on invested capital)</p></li>
<li><p>배당의 이중과세 : 연간이익에 대한 기업의 법인세 + 배당금에 대한 주주의 소득세</p></li>
<li><p>자사주 매입을 통한 주주의 세금 이연(은 주주이익에 도움)</p></li>
</ul>
</section>
<section id="장.-투자-1962-1965년" class="level2">
<h2 class="anchored" data-anchor-id="장.-투자-1962-1965년">2장. 투자: 1962-1965년</h2>
<ul>
<li><strong>무한책임 파트너(general partner)</strong> : 펀드 운용에 관한 무한책임을 지는 출자자, 보통 운용자를 말함</li>
<li><strong>헤지펀드</strong> :</li>
<li><strong>환매</strong> :</li>
<li><strong>이월결손금</strong></li>
<li><strong>손익계산서</strong></li>
<li><strong>유동성소요</strong></li>
<li>**내재 사업가치(intrinsic business value)</li>
<li><strong>유한책임조합</strong></li>
</ul>
</section>
<section id="장.-전환-1965-1967년" class="level2">
<h2 class="anchored" data-anchor-id="장.-전환-1965-1967년">3장. 전환: 1965-1967년</h2>
<ul>
<li><strong>자본배분</strong></li>
<li><strong>투하자본이익률</strong></li>
<li><strong>매출원가</strong></li>
<li><strong>특별항목 (’특별항목 반영 전 순이익’에서 사용된 의미, ’1964년 특별항목은 유휴설비비용 22만 달러를 포함했다’와 같이 사용)</strong></li>
<li><strong>유휴설비비용(idle plant expense)</strong>: 비영업용 제조설비의 유지보수 및 감가상각비</li>
<li>**기대손실</li>
<li>손상차손 write-down</li>
<li>유형자산 손상차손</li>
<li>이익잉여금</li>
<li>총포괄손익</li>
<li>총창출자본(total capital generated)</li>
</ul>
</section>
<section id="장.-인수-1967-1969년" class="level2">
<h2 class="anchored" data-anchor-id="장.-인수-1967-1969년">4장. 인수: 1967-1969년</h2>
<ul>
<li>완전 소유 기업(wholly-owned-subsidiary) : 1개 기업이 단독 투자하여 100% 소유 지문을 가지는것</li>
<li>상환청구권 :</li>
</ul>
<blockquote class="blockquote">
<p>플로트(책임준비금) : + 지급준비금(lost reserve) + 손해사정비 준비금(lost adjustment expense reserve) + 미경과보험료 적립금(unearned premium reserve) - 대리점 미수금(agents’ balance) - 선급 신계약비(prepaid acquisition cost) - 출재보험 준비금(deferred charges applicable to assumed reinsurance) * 플로트 계산법은 분석대상 기업과 애널리스트에 따라 다름 * 기타자산과 기타부채를 처리하는 방법에서 차이가 발생함 * 정확한 플로트 값이 중요하지 않음(소수점 마지막까지 계산X) *</p>
</blockquote>
<ul>
<li><p>합산비율(combined ratio) : 손해율 + 사업비율. 100%를 기준으로 높으면 손해 낮으면 이익</p></li>
<li><p>손해율(loss ratio) : 보험료 수입 대비 보험금 지급 비율</p></li>
<li><p>사업비율(expense ratio) : 보험료 수입 중 인건비, 마케팅비, 모집수수료, 중개비 등 비중</p></li>
<li><p>경과보험료(earned premiums) : 1년단위/일시납이 기본인 손해보험업에서 더 유의미한 기준. 보험사의 회계연도 말을 기준으로 가입자의 전체 보험기간을 경과/미경과 기간으로 구분, 받은 보험료를 경과/미경과 보험료로 구분함</p></li>
<li><p>레버리지 :</p></li>
<li><p>영업 레버리지(operating leverage)</p></li>
<li><p>재무 레버리지(financial leverage)</p></li>
<li><p>유형순자산(tangible net worth)</p></li>
<li><p>영업권(goodwill)</p></li>
<li><p>원수보험료</p></li>
<li><p>순원수보험료(net premiums written) : 원수보험료에서 수/출재보험료와 환급보험료를 가감한 값</p></li>
<li><p>비연결자회사</p></li>
<li><p>연결납세제도(consolidated tax return) : 모회사의 자회사 지분율이 80%이상이고 경제적으로 결합되어있을 때 하나의 과세단위로 해석함. 이에 따라 모회사-자회사간 배당을 과세하지 않을때가 있음. 한국에도 도입되어있지만 연결 요건이 엄격함</p></li>
<li><p>예수부채</p></li>
<li><p>요구불예금</p></li>
<li><p>스핀오프 : 자회사 주식을 모회사 주주에게 배당(인적분할) + 기존 회사의 자회사화</p></li>
<li><p>투자 영업이익 : 이자 및 배당수익 + 유가증권 추분이익</p></li>
</ul>
</section>
<section id="장.-확장-1970년대" class="level2">
<h2 class="anchored" data-anchor-id="장.-확장-1970년대">5장. 확장: 1970년대</h2>
<ul>
<li><p>투하자본</p></li>
<li><p>매출채권</p></li>
<li><p>부채자기자본비율(debt to equity)</p></li>
<li><p>표면이자율</p></li>
<li><p>일반사채(debenture:무담보회사채)</p></li>
<li><p>이자비용 및 법인세 차감 전 이익(EBIT)</p></li>
<li><p>주가매출액배수(price to sales, PSR) : 기업의 주가와 매출을 비교하는 가치평가 지표</p></li>
<li><p>예상손해율(loss expectancy)</p></li>
<li><p>보험영업 손실/이익</p></li>
<li><p>듀레이션(duration, 듀레이션이 긴 재보험에서의 용례)</p></li>
</ul>
</section>
<section id="장.-다른-기업들" class="level2">
<h2 class="anchored" data-anchor-id="장.-다른-기업들">6장. 다른 기업들</h2>
<ul>
<li>공모채 : 불특정다수에게 발행하는 채권</li>
<li>사용자본이익률(ROCE)</li>
<li>최초 이익수익률(initial earnings yield)</li>
<li>모기지(mortgate) : 주택 구매 등을 위해 돈을 빌리고, 갚지 못하는 경우 해당 주택을 대출 업체가 소유</li>
<li>예대마진(spread) : 예금이자와 대출이자간 차이</li>
<li>예수부채 : 불특정 다수를 상대로 조달한 자금</li>
<li>차입인수(LBO, leverage buyout) : 인수할 회사의 자본 등을 담보로 자금을 확보하여 기업을 인수</li>
</ul>
</section>
<section id="장.-복합기업" class="level2">
<h2 class="anchored" data-anchor-id="장.-복합기업">7장. 복합기업</h2>
<ul>
<li>자본잉여금(paid-in surplus) : 주식 발행 등으로 발생하는 잉여금. 돈을 받고 주식을 발행하는 유상증자시 늘어나게 됨</li>
</ul>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>경제/금융공부</category>
  <guid>https://kr9268.github.io/posts/bk-BerkshireHathaway-20240423-terms/</guid>
  <pubDate>Mon, 22 Apr 2024 15:00:00 GMT</pubDate>
  <media:content url="https://kr9268.github.io/posts/bk-BerkshireHathaway-20240423-terms/image.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>[Scikit-learn] Kaggle 집값예측 실습</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/coach-ml-kaggle-20230506/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>Kaggle Korea - House price prediction 실습 기록용으로 남깁니다.</p>
<p><a href="https://www.kaggle.com/c/2019-2nd-ml-month-with-kakr">Kaggle 원문 링크</a></p>
</section>
<section id="개념" class="level2">
<h2 class="anchored" data-anchor-id="개념">개념</h2>
<p><strong>RMSE(Root Mean Squeare Error)</strong></p>
<pre><code>Root    (4)
Mean    (3)
Square  (2)
Error   (1)
(1) 실제값에서 예측값을 뺀 '오차'를
(2) 합했을 때 음수의 영향을 제거하기 위해 '제곱'하고
(3) '평균'오차로 만든 후
(4) '루트'를 씌워 값의 크기를 작게 한다 (값을 작게하여 연산속도에 이점이 있다)</code></pre>
</section>
<section id="파일-다운로드-및-알아보기" class="level2">
<h2 class="anchored" data-anchor-id="파일-다운로드-및-알아보기">파일 다운로드 및 알아보기</h2>
<p><strong>File descriptions</strong></p>
<pre><code>train.csv - 예측 모델을 만들기 위해 사용하는 학습 데이터입니다. 
    집의 정보와 예측할 변수인 가격(Price) 변수를 가지고 있습니다.
test.csv - 학습셋으로 만든 모델을 가지고 예측할 가격(Price) 변수를 제외한 집의 정보가
    담긴 테스트 데이터 입니다.
sample_submission.csv - 제출시 사용할 수 있는 예시 submission.csv 파일입니다.</code></pre>
<p><strong>Data fields</strong></p>
<pre><code>ID : 집을 구분하는 번호
date : 집을 구매한 날짜
price : 집의 가격(Target variable)
bedrooms : 침실의 수
bathrooms : 화장실의 수
sqft_living : 주거 공간의 평방 피트(면적)
sqft_lot : 부지의 평방 피트(면적)
floors : 집의 층 수
waterfront : 집의 전방에 강이 흐르는지 유무 (a.k.a. 리버뷰)
view : 집이 얼마나 좋아 보이는지의 정도
condition : 집의 전반적인 상태
grade : King County grading 시스템 기준으로 매긴 집의 등급
sqft_above : 지하실을 제외한 평방 피트(면적)
sqft_basement : 지하실의 평방 피트(면적)
yr_built : 지어진 년도
yr_renovated : 집을 재건축한 년도
zipcode : 우편번호
lat : 위도
long : 경도
sqft_living15 : 2015년 기준 주거 공간의 평방 피트(면적, 집을 재건축했다면, 변화가 있을 수 있음)
sqft_lot15 : 2015년 기준 부지의 평방 피트(면적, 집을 재건축했다면, 변화가 있을 수 있음)</code></pre>
</section>
<section id="패키지-및-데이터-불러오기" class="level2">
<h2 class="anchored" data-anchor-id="패키지-및-데이터-불러오기">패키지 및 데이터 불러오기</h2>
<div id="7e7d960b" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb4-5"></span>
<span id="cb4-6">train_data_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./data/train.csv'</span></span>
<span id="cb4-7">test_data_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./data/test.csv'</span></span>
<span id="cb4-8"></span>
<span id="cb4-9">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(train_data_path)</span>
<span id="cb4-10">test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(test_data_path)</span>
<span id="cb4-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'train data : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(data.shape))</span>
<span id="cb4-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'test data : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(test.shape))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>train data : (15035, 21)
test data : (6555, 20)</code></pre>
</div>
</div>
</section>
<section id="데이터-전처리" class="level2">
<h2 class="anchored" data-anchor-id="데이터-전처리">데이터 전처리</h2>
<section id="정답컬럼-분리" class="level3">
<h3 class="anchored" data-anchor-id="정답컬럼-분리">정답컬럼 분리</h3>
<ul>
<li>test데이터와 달리 train data에는 컬럼이 1개 더 있음 (정답컬럼인 price)</li>
<li>별도의 정답 데이터(y)로 분리</li>
</ul>
<div id="374ca92e" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'컬럼 분리 전'</span>)</span>
<span id="cb6-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data.columns)</span>
<span id="cb6-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(test.columns)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>컬럼 분리 전
Index(['id', 'date', 'price', 'bedrooms', 'bathrooms', 'sqft_living',
       'sqft_lot', 'floors', 'waterfront', 'view', 'condition', 'grade',
       'sqft_above', 'sqft_basement', 'yr_built', 'yr_renovated', 'zipcode',
       'lat', 'long', 'sqft_living15', 'sqft_lot15'],
      dtype='object')
Index(['id', 'date', 'bedrooms', 'bathrooms', 'sqft_living', 'sqft_lot',
       'floors', 'waterfront', 'view', 'condition', 'grade', 'sqft_above',
       'sqft_basement', 'yr_built', 'yr_renovated', 'zipcode', 'lat', 'long',
       'sqft_living15', 'sqft_lot15'],
      dtype='object')</code></pre>
</div>
</div>
<div id="56fa7e98" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># y라는 변수에 price(정답)을 옮기고, 전체데이터를 백업(data_backup에 할당)하고 price컬럼 삭제</span></span>
<span id="cb8-2">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'price'</span>] </span>
<span id="cb8-3">data_backup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.copy()</span>
<span id="cb8-4">data.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'price'</span>,axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</div>
<div id="090eda7a" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'컬럼 분리 후'</span>)</span>
<span id="cb9-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data.columns)</span>
<span id="cb9-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(test.columns)</span>
<span id="cb9-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(y.name)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>컬럼 분리 후
Index(['id', 'date', 'bedrooms', 'bathrooms', 'sqft_living', 'sqft_lot',
       'floors', 'waterfront', 'view', 'condition', 'grade', 'sqft_above',
       'sqft_basement', 'yr_built', 'yr_renovated', 'zipcode', 'lat', 'long',
       'sqft_living15', 'sqft_lot15'],
      dtype='object')
Index(['id', 'date', 'bedrooms', 'bathrooms', 'sqft_living', 'sqft_lot',
       'floors', 'waterfront', 'view', 'condition', 'grade', 'sqft_above',
       'sqft_basement', 'yr_built', 'yr_renovated', 'zipcode', 'lat', 'long',
       'sqft_living15', 'sqft_lot15'],
      dtype='object')
price</code></pre>
</div>
</div>
</section>
<section id="결측치-확인-및-제거" class="level3">
<h3 class="anchored" data-anchor-id="결측치-확인-및-제거">결측치 확인 및 제거</h3>
<ul>
<li>train, test 데이터를 합쳐서 한번에 확인</li>
</ul>
<div id="26ca0d11" class="cell" data-execution_count="43">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 합치기</span></span>
<span id="cb11-2">df_chk_missing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat((data, test), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 향후 분할을 대비한 행 수 저장</span></span>
<span id="cb11-5">train_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(data)</span>
<span id="cb11-6">test_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(test)</span>
<span id="cb11-7"></span>
<span id="cb11-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(train_length, test_length)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>15035 6555</code></pre>
</div>
</div>
<section id="결측치-확인방법1pandas" class="level4">
<h4 class="anchored" data-anchor-id="결측치-확인방법1pandas">결측치 확인방법1(pandas)</h4>
<ul>
<li>isna()로 결측치를 확인</li>
</ul>
<div id="d7834677" class="cell" data-execution_count="44">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df_chk_missing.isna().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>id               0
date             0
bedrooms         0
bathrooms        0
sqft_living      0
sqft_lot         0
floors           0
waterfront       0
view             0
condition        0
grade            0
sqft_above       0
sqft_basement    0
yr_built         0
yr_renovated     0
zipcode          0
lat              0
long             0
sqft_living15    0
sqft_lot15       0
dtype: int64</code></pre>
</div>
</div>
</section>
<section id="결측치-확인방법2missingno" class="level4">
<h4 class="anchored" data-anchor-id="결측치-확인방법2missingno">결측치 확인방법2(missingno)</h4>
<ul>
<li>missingno 패키지로 컬럼별 결측치 시각화</li>
</ul>
<div id="704c8e19" class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> missingno</span>
<span id="cb15-2"></span>
<span id="cb15-3">missingno.matrix(df_chk_missing)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/coach-ml-kaggle-20230506/index_files/figure-html/cell-8-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="결측치-확인방법3ydata_profiling" class="level4">
<h4 class="anchored" data-anchor-id="결측치-확인방법3ydata_profiling">결측치 확인방법3(ydata_profiling)</h4>
<ul>
<li>ydata_profiling 패키지로 결측치 및 다양한 값 확인 가능</li>
<li>렌더링 용량 문제로 실행결과는 이미지로 대체(RangeError: Maximum call stack size exceeded)</li>
</ul>
<div id="48fc58f2" class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ydata_profiling <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ProfileReport</span>
<span id="cb16-2"></span>
<span id="cb16-3">profile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ProfileReport(df_chk_missing, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Profiling Report"</span>)</span>
<span id="cb16-4">profile</span></code></pre></div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/coach-ml-kaggle-20230506/index_files/figure-html/f815fcd4-1-y_data_profileing_sample.png" class="img-fluid figure-img"></p>
<figcaption>실행결과 샘플</figcaption>
</figure>
</div>
<ul>
<li>결측치가 없으므로 다음 과정을 진행</li>
</ul>
</section>
</section>
<section id="불필요한-변수-제거-데이터-변환-등" class="level3">
<h3 class="anchored" data-anchor-id="불필요한-변수-제거-데이터-변환-등">불필요한 변수 제거, 데이터 변환 등</h3>
<section id="단순식별용-데이터-삭제" class="level4">
<h4 class="anchored" data-anchor-id="단순식별용-데이터-삭제">단순식별용 데이터 삭제</h4>
<ul>
<li>가격과 관계없는 단순식별용 데이터인 id 삭제</li>
</ul>
<div id="1172ccf8" class="cell" data-execution_count="45">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">main_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_chk_missing[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>][:train_length]</span>
<span id="cb17-2">test_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_chk_missing[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>][train_length:]</span>
<span id="cb17-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">del</span> df_chk_missing[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>]</span></code></pre></div>
</div>
</section>
<section id="불필요한-데이터-삭제" class="level4">
<h4 class="anchored" data-anchor-id="불필요한-데이터-삭제">불필요한 데이터 삭제</h4>
<ul>
<li>날짜 뒤에 T00000과 같이 시간데이터(로 추정됨)가 있는데, 모두 T00000으로만 되어있으므로 삭제</li>
</ul>
<div id="d8004c60" class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># T000000으로 되어있는 값 세기</span></span>
<span id="cb18-2">df_chk_missing[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T000000'</span>).value_counts()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="46">
<pre><code>date
True    21590
Name: count, dtype: int64</code></pre>
</div>
</div>
<div id="49494527" class="cell" data-execution_count="47">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># apply로 lambda함수를 사용하여, date컬럼의 앞자리만 저장</span></span>
<span id="cb20-2">df_chk_missing[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_chk_missing[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x : <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(x[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]))</span>
<span id="cb20-3">df_chk_missing.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="47">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">date</th>
<th data-quarto-table-cell-role="th">bedrooms</th>
<th data-quarto-table-cell-role="th">bathrooms</th>
<th data-quarto-table-cell-role="th">sqft_living</th>
<th data-quarto-table-cell-role="th">sqft_lot</th>
<th data-quarto-table-cell-role="th">floors</th>
<th data-quarto-table-cell-role="th">waterfront</th>
<th data-quarto-table-cell-role="th">view</th>
<th data-quarto-table-cell-role="th">condition</th>
<th data-quarto-table-cell-role="th">grade</th>
<th data-quarto-table-cell-role="th">sqft_above</th>
<th data-quarto-table-cell-role="th">sqft_basement</th>
<th data-quarto-table-cell-role="th">yr_built</th>
<th data-quarto-table-cell-role="th">yr_renovated</th>
<th data-quarto-table-cell-role="th">zipcode</th>
<th data-quarto-table-cell-role="th">lat</th>
<th data-quarto-table-cell-role="th">long</th>
<th data-quarto-table-cell-role="th">sqft_living15</th>
<th data-quarto-table-cell-role="th">sqft_lot15</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>201410</td>
<td>3</td>
<td>1.00</td>
<td>1180</td>
<td>5650</td>
<td>1.0</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>7</td>
<td>1180</td>
<td>0</td>
<td>1955</td>
<td>0</td>
<td>98178</td>
<td>47.5112</td>
<td>-122.257</td>
<td>1340</td>
<td>5650</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>201502</td>
<td>2</td>
<td>1.00</td>
<td>770</td>
<td>10000</td>
<td>1.0</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>6</td>
<td>770</td>
<td>0</td>
<td>1933</td>
<td>0</td>
<td>98028</td>
<td>47.7379</td>
<td>-122.233</td>
<td>2720</td>
<td>8062</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>201502</td>
<td>3</td>
<td>2.00</td>
<td>1680</td>
<td>8080</td>
<td>1.0</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>8</td>
<td>1680</td>
<td>0</td>
<td>1987</td>
<td>0</td>
<td>98074</td>
<td>47.6168</td>
<td>-122.045</td>
<td>1800</td>
<td>7503</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>201406</td>
<td>3</td>
<td>2.25</td>
<td>1715</td>
<td>6819</td>
<td>2.0</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>7</td>
<td>1715</td>
<td>0</td>
<td>1995</td>
<td>0</td>
<td>98003</td>
<td>47.3097</td>
<td>-122.327</td>
<td>2238</td>
<td>6819</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>201501</td>
<td>3</td>
<td>1.50</td>
<td>1060</td>
<td>9711</td>
<td>1.0</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>7</td>
<td>1060</td>
<td>0</td>
<td>1963</td>
<td>0</td>
<td>98198</td>
<td>47.4095</td>
<td>-122.315</td>
<td>1650</td>
<td>9711</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</div>
</section>
<section id="로그변환" class="level4">
<h4 class="anchored" data-anchor-id="로그변환">로그변환</h4>
<ul>
<li>치우친 분포를 정규분포에 가깝게 만들기</li>
</ul>
<section id="분포가-치우쳐져-있는-항목-찾기시각화" class="level5">
<h5 class="anchored" data-anchor-id="분포가-치우쳐져-있는-항목-찾기시각화">분포가 치우쳐져 있는 항목 찾기(시각화)</h5>
<div id="9cd20f17" class="cell" data-execution_count="49">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">row_plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb21-2">col_plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb21-3">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(row_plot, col_plot, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>)) </span>
<span id="cb21-4"></span>
<span id="cb21-5">columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_chk_missing.columns</span>
<span id="cb21-6">columns_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 첫 컬럼인 date(날짜)는 제외하기 위해 0이 아닌 1부터 시작</span></span>
<span id="cb21-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(row_plot):</span>
<span id="cb21-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(col_plot):</span>
<span id="cb21-9">        sns.kdeplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_chk_missing[columns[columns_idx]], ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax[row][col])</span>
<span id="cb21-10">        ax[row][col].set_title(columns[columns_idx])</span>
<span id="cb21-11">        columns_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb21-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> columns_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(columns) :</span>
<span id="cb21-13">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/coach-ml-kaggle-20230506/index_files/figure-html/cell-13-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>아래의 항목들이 치우쳐져 있음
<ul>
<li>sqft_living</li>
<li>sqft_lot</li>
<li>waterfront (→유/무 지표로 0,1만 있는게 정상이므로 제외)</li>
<li>sqft_above</li>
<li>sqft_basement</li>
<li>sqft_living15</li>
<li>sqft_lot15</li>
</ul></li>
</ul>
<div id="74772982" class="cell" data-execution_count="50">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환대상 리스트에 저장</span></span>
<span id="cb22-2">skewed_columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sqft_living'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sqft_lot'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sqft_above'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sqft_basement'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sqft_living15'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sqft_lot15'</span>]</span>
<span id="cb22-3"></span>
<span id="cb22-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프로 그리기 (변환 전/후 그래프를 함께 그릴 예정이므로 plot의 수는 두배)</span></span>
<span id="cb22-5">row_plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb22-6">col_plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb22-7">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(row_plot, col_plot, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>)) </span>
<span id="cb22-8"></span>
<span id="cb22-9">columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> skewed_columns</span>
<span id="cb22-10">columns_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb22-11"></span>
<span id="cb22-12"></span>
<span id="cb22-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(row_plot):</span>
<span id="cb22-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로그변환 대상만 식별 후 진행</span></span>
<span id="cb22-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> columns[row] <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> skewed_columns:</span>
<span id="cb22-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기존 그래프 그리기</span></span>
<span id="cb22-17">        sns.kdeplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_chk_missing[columns[row]], ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax[row][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb22-18">        ax[row][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(columns[row])</span>
<span id="cb22-19"></span>
<span id="cb22-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로그변환</span></span>
<span id="cb22-21">        df_chk_missing[columns[row]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.log1p(df_chk_missing[columns[row]])</span>
<span id="cb22-22"></span>
<span id="cb22-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환된 그래프 그리기</span></span>
<span id="cb22-24">        sns.kdeplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_chk_missing[columns[row]], ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax[row][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb22-25">        ax[row][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(columns[row]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_log'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/coach-ml-kaggle-20230506/index_files/figure-html/cell-14-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="train-test-데이터로-정리" class="level4">
<h4 class="anchored" data-anchor-id="train-test-데이터로-정리">train, test 데이터로 정리</h4>
<div id="72bcf9f1" class="cell" data-execution_count="81">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">preprocessed_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_chk_missing[:train_length].copy()</span>
<span id="cb23-2">preprocessed_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_chk_missing[train_length:].copy()</span>
<span id="cb23-3">price_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y.copy()</span>
<span id="cb23-4"></span>
<span id="cb23-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># date(날짜)의 타입을 int로 변경 (변경하지 않는 경우 object타입으로 인한 오류 발생)</span></span>
<span id="cb23-6">preprocessed_train[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocessed_train[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb23-7">preprocessed_test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocessed_test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb23-8"></span>
<span id="cb23-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(preprocessed_train.shape)</span>
<span id="cb23-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(preprocessed_test.shape)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(15035, 19)
(6555, 19)</code></pre>
</div>
</div>
</section>
</section>
</section>
<section id="scikit-learn-등-관련-패키지-불러오기" class="level2">
<h2 class="anchored" data-anchor-id="scikit-learn-등-관련-패키지-불러오기">Scikit-learn 등 관련 패키지 불러오기</h2>
<ul>
<li>본래 사용하는 패키지는 모두 최상단에서 불러오는게 맞음!</li>
</ul>
<div id="17630aef" class="cell" data-execution_count="51">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.ensemble <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GradientBoostingRegressor</span>
<span id="cb25-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KFold, cross_val_score</span>
<span id="cb25-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> xgboost <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> xgb</span>
<span id="cb25-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> lightgbm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> lgb</span></code></pre></div>
</div>
<section id="모델-불러오고-cross-validation으로-모델성능-측청" class="level3">
<h3 class="anchored" data-anchor-id="모델-불러오고-cross-validation으로-모델성능-측청">모델 불러오고 Cross Validation으로 모델성능 측청</h3>
<div id="5fa4f06c" class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">gboost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GradientBoostingRegressor(random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1210</span>)</span>
<span id="cb26-2">xgboost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xgb.XGBRegressor(random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1210</span>)</span>
<span id="cb26-3">lightgbm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lgb.LGBMRegressor(random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1210</span>)</span>
<span id="cb26-4"></span>
<span id="cb26-5">model_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GradientBoosting'</span>:gboost,</span>
<span id="cb26-6">              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'XGBoost'</span>:xgboost,</span>
<span id="cb26-7">              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LigntGBM'</span>:lightgbm}</span>
<span id="cb26-8"></span>
<span id="cb26-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LightGBM의 메시지가 나오지 않도록 별도로 저장 후 출력</span></span>
<span id="cb26-10">model_cv_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb26-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> model <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> model_dict.keys():</span>
<span id="cb26-12">    model_cv_score[model] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(cross_val_score(model_dict[model], X<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>preprocessed_train, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>price_train))</span></code></pre></div>
</div>
<div id="f2d2cc36" class="cell" data-execution_count="86">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> model <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> model_dict.keys():</span>
<span id="cb27-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>model_cv_score[model]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>GradientBoosting : 0.8613647608814923
XGBoost : 0.8762617283884332
LigntGBM : 0.8818569800403846</code></pre>
</div>
</div>
</section>
<section id="모델학습-및-예측" class="level3">
<h3 class="anchored" data-anchor-id="모델학습-및-예측">모델학습 및 예측</h3>
<ul>
<li>Score가 가장 높았던 lightGBM으로 진행해보기</li>
</ul>
<div id="7d1a0715" class="cell" data-execution_count="87">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">model_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LigntGBM'</span>].fit(preprocessed_train.values, y)</span>
<span id="cb29-2">prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LigntGBM'</span>].predict(preprocessed_test.values)</span>
<span id="cb29-3">prediction</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000583 seconds.
You can set `force_col_wise=true` to remove the overhead.
[LightGBM] [Info] Total Bins 2338
[LightGBM] [Info] Number of data points in the train set: 15035, number of used features: 19
[LightGBM] [Info] Start training from score 540682.653143</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="87">
<pre><code>array([1296687.09405506,  311847.90404507,  806735.28228208, ...,
       1726006.82963994,  395020.94053356,  333594.29000994])</code></pre>
</div>
</div>
</section>
<section id="제출용-dataframe-및-csv파일-생성" class="level3">
<h3 class="anchored" data-anchor-id="제출용-dataframe-및-csv파일-생성">제출용 DataFrame 및 csv파일 생성</h3>
<div id="92579a95" class="cell" data-execution_count="88">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">df_submission <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span> : test_id, </span>
<span id="cb32-2">                              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'price'</span> : prediction})</span>
<span id="cb32-3">df_submission</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="88">
<div>
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">id</th>
<th data-quarto-table-cell-role="th">price</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>15208</td>
<td>1.296687e+06</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>15209</td>
<td>3.118479e+05</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>15210</td>
<td>8.067353e+05</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>15211</td>
<td>2.098083e+05</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>15212</td>
<td>4.343237e+05</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6550</td>
<td>21758</td>
<td>4.230647e+05</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">6551</td>
<td>21759</td>
<td>5.111171e+05</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6552</td>
<td>21760</td>
<td>1.726007e+06</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">6553</td>
<td>21761</td>
<td>3.950209e+05</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6554</td>
<td>21762</td>
<td>3.335943e+05</td>
</tr>
</tbody>
</table>

<p>6555 rows × 2 columns</p>
</div>
</div>
</div>
</div>
<div id="bff541a2" class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">df_submission.to_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'submission.csv'</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
</div>


</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>파이썬</category>
  <category>머신러닝</category>
  <guid>https://kr9268.github.io/posts/coach-ml-kaggle-20230506/</guid>
  <pubDate>Fri, 05 May 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>[Pytorch] MNIST 실습</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/coach-ml-20240505/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>파이토치로 MNIST 머신러닝 실습해본 코드 기록용으로 남깁니다.</p>
</section>
<section id="pytorch활용한-mnist-데이터셋-로딩" class="level2">
<h2 class="anchored" data-anchor-id="pytorch활용한-mnist-데이터셋-로딩">Pytorch활용한 MNIST 데이터셋 로딩</h2>
<div id="fig-polar" class="cell quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="sourceCode cell-code" id="fig-polar" style="background: #f1f3f5;"><pre class="sourceCode python cell code-with-copy"><code class="sourceCode python"><span id="fig-polar-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="fig-polar-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch.nn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nn</span>
<span id="fig-polar-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.utils.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DataLoader</span>
<span id="fig-polar-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision</span>
<span id="fig-polar-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dset</span>
<span id="fig-polar-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision.transforms <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> transforms</span>
<span id="fig-polar-7"></span>
<span id="fig-polar-8">root <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./data'</span></span>
<span id="fig-polar-9">mnist_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dset.MNIST (root<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>root, train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>transforms.ToTensor(), download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span> )</span>
<span id="fig-polar-10">mnist_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dset.MNIST (root<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>root, train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>transforms.ToTensor(), download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="fig-polar-11"></span>
<span id="fig-polar-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train용 / Test용 데이터셋</span></span>
<span id="fig-polar-13">train_loader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(mnist_train, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="fig-polar-14">test_loader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(mnist_test, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
</section>
<section id="학습준비가중치-초기화-등" class="level2">
<h2 class="anchored" data-anchor-id="학습준비가중치-초기화-등">학습준비(가중치 초기화 등)</h2>
<ul>
<li>MNIST의 크기 : 28 * 28</li>
<li>Loss : Cross Entropy</li>
<li>Optimizer - SGD(Stochastic Gradient Descent)</li>
<li>Learning rate = 0.1</li>
</ul>
<div id="db135b1a" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> torch.cuda.is_available() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 구현 (28*28 = 784 / 0~9라서 10개 / 가중치 사용하므로 bias)</span></span>
<span id="cb1-4">linear <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.nn.Linear(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">784</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, bias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).to(device) </span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># weight init 가중치 초기화</span></span>
<span id="cb1-7">torch.nn.init.normal_(linear.weight)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loss fn - Cross Entropy Loss</span></span>
<span id="cb1-10">criterion <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.nn.CrossEntropyLoss().to(device)</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># optimizer - SGD</span></span>
<span id="cb1-13">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.SGD(linear.parameters(), lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span></code></pre></div>
</div>
</section>
<section id="모델-학습" class="level2">
<h2 class="anchored" data-anchor-id="모델-학습">모델 학습</h2>
<div id="683a020b" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">training_epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># training 반복 횟수</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> epoch <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(training_epochs):</span>
<span id="cb2-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, (imgs, labels) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(train_loader):</span>
<span id="cb2-5">    labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> labels.to(device)</span>
<span id="cb2-6">    imgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> imgs.view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>).to(device)</span>
<span id="cb2-7"></span>
<span id="cb2-8">    outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> linear(imgs) </span>
<span id="cb2-9">    loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> criterion(outputs, labels) </span>
<span id="cb2-10"></span>
<span id="cb2-11">    optimizer.zero_grad()<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># optimzier zero grad</span></span>
<span id="cb2-12"></span>
<span id="cb2-13">    loss.backward() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loss backward</span></span>
<span id="cb2-14">    optimizer.step() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># optimzier step</span></span>
<span id="cb2-15"></span>
<span id="cb2-16">    _,argmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(outputs, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-17">    accuracy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> argmax).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>().mean()</span>
<span id="cb2-18"></span>
<span id="cb2-19">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb2-20">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Epoch [</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">], Step [</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">], Loss: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{: .4f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, Accuracy: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{: .2f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">%'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(</span>
<span id="cb2-21">    epoch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, training_epochs, i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(train_loader), loss.item(), accuracy.item()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Epoch [1/20], Step [6000/6000], Loss:  0.0273, Accuracy:  100.00%
Epoch [2/20], Step [6000/6000], Loss:  0.0762, Accuracy:  100.00%
Epoch [3/20], Step [6000/6000], Loss:  0.5928, Accuracy:  80.00%
Epoch [4/20], Step [6000/6000], Loss:  0.2854, Accuracy:  90.00%
Epoch [5/20], Step [6000/6000], Loss:  0.1373, Accuracy:  90.00%
Epoch [6/20], Step [6000/6000], Loss:  0.0668, Accuracy:  100.00%
Epoch [7/20], Step [6000/6000], Loss:  0.0253, Accuracy:  100.00%
Epoch [8/20], Step [6000/6000], Loss:  0.0542, Accuracy:  100.00%
Epoch [9/20], Step [6000/6000], Loss:  0.9203, Accuracy:  80.00%
Epoch [10/20], Step [6000/6000], Loss:  0.1244, Accuracy:  90.00%
Epoch [11/20], Step [6000/6000], Loss:  0.6108, Accuracy:  90.00%
Epoch [12/20], Step [6000/6000], Loss:  0.1312, Accuracy:  100.00%
Epoch [13/20], Step [6000/6000], Loss:  0.0705, Accuracy:  100.00%
Epoch [14/20], Step [6000/6000], Loss:  1.6259, Accuracy:  70.00%
Epoch [15/20], Step [6000/6000], Loss:  0.0538, Accuracy:  100.00%
Epoch [16/20], Step [6000/6000], Loss:  0.2435, Accuracy:  80.00%
Epoch [17/20], Step [6000/6000], Loss:  0.0061, Accuracy:  100.00%
Epoch [18/20], Step [6000/6000], Loss:  0.1091, Accuracy:  100.00%
Epoch [19/20], Step [6000/6000], Loss:  0.0157, Accuracy:  100.00%
Epoch [20/20], Step [6000/6000], Loss:  0.1413, Accuracy:  90.00%</code></pre>
</div>
</div>
</section>
<section id="학습된-모델-테스트" class="level2">
<h2 class="anchored" data-anchor-id="학습된-모델-테스트">학습된 모델 테스트</h2>
<div id="1d05ac8c" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">linear.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()</span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb4-3">    correct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-4">    total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, (imgs, labels) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(test_loader):</span>
<span id="cb4-6">        imgs, labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> imgs.to(device), labels.to(device)</span>
<span id="cb4-7">        imgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> imgs.view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>)</span>
<span id="cb4-8"></span>
<span id="cb4-9">        outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> linear(imgs) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 구현</span></span>
<span id="cb4-10"></span>
<span id="cb4-11">        _, argmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(outputs, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># max()를 통해 최종 출력이 가장 높은 class 선택</span></span>
<span id="cb4-12">        total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> imgs.size(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-13">        correct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> (labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> argmax). <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>().item()</span>
<span id="cb4-14"></span>
<span id="cb4-15">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Test accuracy for </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> images: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{: .2f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">%'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(total, correct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Test accuracy for 10000 images:  91.99%</code></pre>
</div>
</div>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>파이썬</category>
  <category>머신러닝</category>
  <guid>https://kr9268.github.io/posts/coach-ml-20240505/</guid>
  <pubDate>Sat, 18 Feb 2023 15:00:00 GMT</pubDate>
</item>
</channel>
</rss>
