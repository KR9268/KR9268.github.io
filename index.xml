<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Blog</title>
<link>https://kr9268.github.io/</link>
<atom:link href="https://kr9268.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.5.54</generator>
<lastBuildDate>Sun, 30 Jun 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>[M_Study_6주차] 자연어처리 및 RNN관련 기초내용</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/meta-dl-creditcard-20240630/</link>
  <description><![CDATA[ 





<section id="개요" class="level1">
<h1>개요</h1>
<p>참여중인 딥러닝 스터디 6주차 기록입니다.</p>
</section>
<section id="주차-과제-설명" class="level1">
<h1>5주차 과제 설명</h1>
<ul>
<li><p>Optimizer 비교 : SGD vs adam</p>
<ul>
<li><p>adam이 1 epoch만에 SGD의 accuracy보다 높게 나옴</p>
<pre><code>  # SGD
  Epoch 1/5
  1875/1875 [==========] - 6s 3ms/step - loss: 0.6548 - accuracy: 0.8358
  ...
  Epoch 5/5
  1875/1875 [==========] - 5s 2ms/step - loss: 0.2346 - accuracy: 0.9352

  # adam
  Epoch 1/5
  1875/1875 [==========] - 11s 6ms/step - loss: 0.2605 - accuracy: 0.9256
  ...
  Epoch 5/5
  1875/1875 [==========] - 7s 4ms/step - loss: 0.0456 - accuracy: 0.9863</code></pre></li>
</ul></li>
<li><p>Overfitting 케이스</p>
<ul>
<li>Test accuracy가 97.75%로 Train accuracy 98.63%보다 낮게 나옴</li>
<li>간단한 데이터이므로 overfitting으로 판단했지만, 실제로 1%의 차이는 거의 일어나지 않은 것 (실제로 일어나면 5%가까이 떨어지는 경우도 많음)</li>
</ul></li>
<li><p>Overfitting 케이스 방지 : Dropout 추가</p>
<ul>
<li><p>Dropout을 통해 여러 특징을 학습시킬 수 있도록 함 (뉴런을 적게쓰므로 1 epoch에서는 좀 더 낮음)</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">  model2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.models.Sequential([</span>
<span id="cb2-2">      tf.keras.layers.Flatten(input_shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>)),</span>
<span id="cb2-3">      tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb2-4">      tf.keras.layers.Dropout(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dropout : 20%정도 Layer를 끈다</span></span>
<span id="cb2-5">      tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'softmax'</span>)</span>
<span id="cb2-6">  ])</span>
<span id="cb2-7"></span>
<span id="cb2-8">  ...</span>
<span id="cb2-9"></span>
<span id="cb2-10">  Epoch <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-11">  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==========</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">s</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">ms</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> loss: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2939</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> accuracy: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9154</span></span>
<span id="cb2-12">  ...</span>
<span id="cb2-13">  Epoch <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-14">  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==========</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">s</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">ms</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> loss: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0725</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> accuracy: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9772</span></span></code></pre></div></li>
<li><p>Test accuracy가 97.85%, Train accuracy 97.72% 로 Overfitting 줄어듦</p></li>
</ul></li>
<li><p>Overfitting 케이스 방지 : Regularization</p>
<ul>
<li>파라미터에 패널티를 부여해 Overfitting을 방지. 딥러닝에서는 잘 쓰이지 않음
<ul>
<li><code>tf.keras.regularizers.l2(0.01)</code> : <img src="https://latex.codecogs.com/png.latex?%5Clambda">값으로 0.01부여, 커질수록 강한 패널티</li>
</ul>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">  model2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.models.Sequential([</span>
<span id="cb3-2">      tf.keras.layers.Flatten(input_shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>)),</span>
<span id="cb3-3">      tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb3-4">      tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, kernel_regularizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.regularizers.l2(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>), activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb3-5">      tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'softmax'</span>)</span>
<span id="cb3-6">  ])</span></code></pre></div>
<ul>
<li>Test accuracy가 96.70%, Train accuracy 97.81% 로 오히려 Underfitting 발생</li>
</ul></li>
</ul></li>
<li><p>Overfitting 케이스 방지 : Early stopping</p>
<ul>
<li><p><code>Early stopping 미적용</code></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">  model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.Sequential([</span>
<span id="cb4-2">      tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>, input_dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb4-3">      tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sigmoid'</span>)</span>
<span id="cb4-4">  ])</span>
<span id="cb4-5"></span>
<span id="cb4-6">  model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(loss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'binary_crossentropy'</span>,</span>
<span id="cb4-7">                optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'adam'</span>,</span>
<span id="cb4-8">                metrics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>])</span>
<span id="cb4-9"></span>
<span id="cb4-10">  history <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit(trainX, trainy, validation_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (trainX_2, trainy_2), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># test데이터를 validation에 넣지 않는다</span></span>
<span id="cb4-11">                  epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span>, verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-12"></span>
<span id="cb4-13">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> Train acc: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, Test acc: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9142857193946838</span></span></code></pre></div></li>
<li><p><code>Early stopping without patience</code></p>
<ul>
<li><strong>EarlyStopping(monitor=‘val_loss’, mode=‘min’, verbose=1)</strong>
<ul>
<li>Validation loss를 모니터링(accuracy가 떨어지면 멈추도록도 설정가능, 단 mode=max로), 가장 작은 min을 찾는다</li>
<li><code>fit</code> 할 때, <code>callbacks=[es]</code>를 추가로 설정</li>
</ul>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.callbacks <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EarlyStopping</span>
<span id="cb5-2"></span>
<span id="cb5-3">model1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.Sequential([</span>
<span id="cb5-4">    tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>, input_dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb5-5">    tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sigmoid'</span>)</span>
<span id="cb5-6">])</span>
<span id="cb5-7"></span>
<span id="cb5-8">model1.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(loss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'binary_crossentropy'</span>,</span>
<span id="cb5-9">              optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'adam'</span>,</span>
<span id="cb5-10">              metrics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>])</span>
<span id="cb5-11"></span>
<span id="cb5-12">es <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EarlyStopping(monitor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'val_loss'</span>, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'min'</span>, verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-13"></span>
<span id="cb5-14">history <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model1.fit(trainX, trainy, validation_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (trainX_2, trainy_2),</span>
<span id="cb5-15">              epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span>, verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, callbacks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[es])</span>
<span id="cb5-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> Epoch <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">227</span>: early stopping</span>
<span id="cb5-17">Train acc: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9666666388511658</span>, Test acc: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8142856955528259</span></span></code></pre></div></li>
<li>Test accuracy가 81%로 낮아진 이유 : without patience옵션으로 underfitting이 발생
<ul>
<li>하단 그래프에서 x축 250정도 잠시 loss증가한 지점에서 멈춰버림<br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240630/index_files/figure-html/89205607-1-image.png" class="img-fluid" alt="image.png"></li>
</ul></li>
</ul></li>
<li><p><code>Early stopping with patience</code></p>
<ul>
<li><strong>EarlyStopping(monitor=‘val_loss’, mode=‘min’, verbose=1, patience=200)</strong>
<ul>
<li>patience=200 옵션을 추가하여 200 epoch 동안 <code>연속으로 loss증가</code>하면 학습을 멈춤</li>
<li>나머지 코드 동일</li>
</ul>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> Epoch <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">922</span>: early stopping</span>
<span id="cb6-2">    Train acc: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, Test acc: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9428571462631226</span></span></code></pre></div></li>
<li>기존의 227 epoch보다 늦은 922 epoch에서 멈춰, 훨씬 높은 94%의 Test accuracy</li>
</ul></li>
</ul></li>
<li><p>train_test_split : 데이터를 나눌 때 무작위로 섞어서 나눌 수 있게 함</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">  <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb7-2"></span>
<span id="cb7-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># train, test 나누기</span></span>
<span id="cb7-4">  x_train, x_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb7-5">  y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(y, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb7-6"></span>
<span id="cb7-7">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x_train.shape, x_test.shape)</span>
<span id="cb7-8">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x_train.shape, y_test.shape)</span>
<span id="cb7-9">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb7-10">      (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>,)</span>
<span id="cb7-11"></span>
<span id="cb7-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># train, validation 나누기</span></span>
<span id="cb7-13">  x_train, x_validate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(x_train, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb7-14">  y_train, y_validate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(y_train, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb7-15"></span>
<span id="cb7-16">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x_train.shape, x_validate.shape, x_test.shape)</span>
<span id="cb7-17">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(y_train.shape, y_validate.shape, y_test.shape)</span>
<span id="cb7-18">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb7-19">      (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span>,) (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>,) (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>,)</span></code></pre></div></li>
<li><p>Data Preprocessing(전처리)</p>
<ul>
<li><strong>StandardScaler, MinMaxScaler의 약점 : outlier에 약하다</strong>
<ul>
<li>극단적인 데이터가 많지 않다면 적용해도 좋으며, 많다면 <strong>robustscaler</strong>도 고려</li>
</ul>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StandardScaler, MinMaxScaler</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MinMaxScaler 적용 전 x</span></span>
<span id="cb8-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x)</span>
<span id="cb8-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> [[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">236.37372138</span>  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">67.4728654</span>  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">889.1062823</span>  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">561.1353035</span>  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">191.38532351</span>]</span>
<span id="cb8-6">    [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">746.36250159</span>  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">92.35363502</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">128.54322612</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">108.49157384</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">353.10048148</span>]</span>
<span id="cb8-7">    [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">673.3844796</span>  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">734.7410641</span>  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">760.98411268</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">983.26464345</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">202.82746593</span>]</span>
<span id="cb8-8">    [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">803.57916563</span>  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">79.26219033</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">691.56641875</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">860.20938727</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">637.68924843</span>]</span>
<span id="cb8-9">    [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">961.59849032</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">646.66721861</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">610.07133782</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">190.98379101</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">392.23091957</span>]]</span>
<span id="cb8-10"></span>
<span id="cb8-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MinMaxScaler 적용 후 x : (x - min) / (max - min)</span></span>
<span id="cb8-12">scaler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MinMaxScaler()</span>
<span id="cb8-13">x_scaled <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.fit_transform(x)</span>
<span id="cb8-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x_scaled)</span>
<span id="cb8-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> [[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.51744132</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>        ]</span>
<span id="cb8-16">    [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.70321479</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.03728751</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.36234312</span>]</span>
<span id="cb8-17">    [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.60258664</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.831543</span>   <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02563756</span>]</span>
<span id="cb8-18">    [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.78210986</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01766805</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.74027155</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.85932894</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>        ]</span>
<span id="cb8-19">    [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>         <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.86800833</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.63312056</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.09430128</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45001978</span>]]</span>
<span id="cb8-20"></span>
<span id="cb8-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># StandardScaler : (x - mean) / std</span></span></code></pre></div></li>
</ul></li>
</ul>
</section>
<section id="주차-수업정리" class="level1">
<h1>6주차 수업정리</h1>
<section id="자연어처리-관련-기초적인-내용" class="level2">
<h2 class="anchored" data-anchor-id="자연어처리-관련-기초적인-내용">자연어처리 관련 기초적인 내용</h2>
<section id="시계열데이터sequential-data" class="level3">
<h3 class="anchored" data-anchor-id="시계열데이터sequential-data">시계열데이터(Sequential Data)</h3>
<ul>
<li><p>시계열데이터(Sequential Data) : 문장(순서를 가진 단어들), 영상, 주가, 태풍의 이동경로 등 <br> (자연어처리도 시계열데이터의 하위분야 중 하나)</p></li>
<li><p>기본적으로 <code>Input - Output - 그 사이의 function</code> 을 파악하면 좋으며, 아래는 예시임</p>
<ul>
<li>태풍으로 인한 날짜별 피해액을 알고자 할 때 : Input도 Output도 시계열</li>
<li>태풍의 소멸시기 예측 : Input은 시계열이지만 Output은 single output</li>
<li>단어가 문법적으로 맞는지 : 시계열 문제</li>
<li>문장의 주제가 어떤 것인지(과학? 문학?) : single output</li>
<li>그림을 묘사하는 문장 생성 : 시계열이 아닌 Input과 시계열인 Output</li>
</ul></li>
</ul>
</section>
<section id="problem-types-예시" class="level3">
<h3 class="anchored" data-anchor-id="problem-types-예시">Problem types 예시</h3>
<ul>
<li>One-to-one : (Image classification) 숫자 이미지를 input으로 받아 정답 숫자를 output</li>
<li>Many-to-one : (Frame → Class) 태풍의 이동경로, 속도를 input으로 하여 언제사라질지 output</li>
<li>Many-to-many : (Frames → Classes) 태풍의 이동경로, 속도를 input으로 하여 날짜별 피해액 output</li>
<li>One-to-many : (Image → Words. Image captioning) 고양이 사진을 input으로, 이에 대한 묘사 문장을 output</li>
<li>Many-to-many : (Video → words. Video captioning) 5개 단어의 영어문장을 input으로, 3개 단어의 한글문장으로 output</li>
</ul>
</section>
<section id="word-embedding" class="level3">
<h3 class="anchored" data-anchor-id="word-embedding">Word Embedding</h3>
<ul>
<li>단어를 모델에 인식시키려면 숫자로 매핑하는 과정이 필요 (알파벳은 유니코드 등으로 표현이 되지만, 단어는 그렇지 못함)</li>
<li>숫자로 매핑하며 단어의 다양한 관계를 나타낼 수 있도록 벡터로 표현. 이를 <code>Word Embedding</code>이라고 함
<ul>
<li>임의의 정수로 매핑할 때, 비슷한 단어일수록 숫자의 차이가 적게 만듦 (baby 12, boy 13, child 14와 같이)</li>
<li>다만 girl이라는 단어가 나온다면 문제가 생길 수 있음 (boy 옆에 이미 baby가 있음)</li>
<li>해결방법 : 벡터로 만든다. 자릿수를 늘려 표현할 수 있는 관계가 많아짐 (boy[13,14], girl[14,13]과 같이 정의하면 벡터간 거리가 같다)</li>
<li>다양한 관계로 나타낼 수 있도록 벡터로 표현하게 됨 (<code>Word Embedding</code>) (참고로 GPT는 512차원이나 768차원정도 됨)</li>
</ul></li>
<li>처음엔 랜덤한 벡터였지만, 학습할수록 벡터가 변경되어 단어간의 관계를 표현</li>
</ul>
</section>
<section id="word2vec" class="level3">
<h3 class="anchored" data-anchor-id="word2vec">Word2vec</h3>
<ul>
<li>가지고 있는 단어(토큰)를, 문장에 빈 칸을 두어 맞추게 함
<ul>
<li>예를 들어 5만 개의 단어 중 정답인 into가 들어오지 않으면 감점 후 다시 학습(5만가지의 Classification)</li>
</ul></li>
<li>Word2vec이 아닌, 단어(토큰)를 주고 주변의 단어를 맞추게 하는 방법도 있지만 요즘은 많이 쓰지 않는 추세</li>
<li>언어모델의 학습은, 예를 들면 위키피디아의 문장을 가져와, 문장에 빈칸을 만들고 빈칸의 단어를 정답으로 만든 뒤, cross entropy 측정 등 진행</li>
<li>Word2vec학습을 마치면 단어의 관계를 묘사하게 됨<br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240630/index_files/figure-html/38d392d2-1-image.png" class="img-fluid" alt="image.png"></li>
</ul>
</section>
</section>
<section id="rnn" class="level2">
<h2 class="anchored" data-anchor-id="rnn">RNN</h2>
<section id="rnn을-활용한-감정분석-사례many-to-one" class="level3">
<h3 class="anchored" data-anchor-id="rnn을-활용한-감정분석-사례many-to-one">RNN을 활용한 감정분석 사례(Many-to-one)</h3>
<ul>
<li><code>RNN(Recurrent Neural Networks)</code>이라는 딥러닝으로 시계열을 처리하는 기초적인 architecture 적용 (이미지와 달리 문장은 길이가 항상 바뀐다)</li>
<li>랜덤한 <img src="https://latex.codecogs.com/png.latex?h_0">을 시작으로, 현재의 단어 <img src="https://latex.codecogs.com/png.latex?x_1">부터 더해가면 최종적으로 <img src="https://latex.codecogs.com/png.latex?h_t">에 모든 문장의 정보가 들어있음 <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240630/index_files/figure-html/001a5741-5-image.png" class="img-fluid" alt="image.png"></li>
<li>현재의 단어 <img src="https://latex.codecogs.com/png.latex?x_t">와, 이전까지의 단어들 <img src="https://latex.codecogs.com/png.latex?h_%7Bt-1%7D"> 중 어떤 것을 더 많이 반영할지를 정하는 파라미터 <img src="https://latex.codecogs.com/png.latex?W_hh">, <img src="https://latex.codecogs.com/png.latex?W_xh"> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240630/index_files/figure-html/001a5741-1-image-2.png" class="img-fluid" alt="image-2.png"></li>
<li>각 부분의 <img src="https://latex.codecogs.com/png.latex?W_hh">, <img src="https://latex.codecogs.com/png.latex?W_xh">는 동일한 값 (<code>Shared parameter</code>) 예를 들어 <img src="https://latex.codecogs.com/png.latex?W_hh">값이 다르다면 단어의 수만큼 <img src="https://latex.codecogs.com/png.latex?W_hh">가 필요하며, 문장길이가 바뀔 때마다 학습을 다르게 해야함 <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240630/index_files/figure-html/001a5741-2-image-3.png" class="img-fluid" alt="image-3.png"></li>
<li>Sigmoid함수를 통과하여 0.5를 기준으로 긍정/부정 등을 평가하여 감정분석하는 방식 적용</li>
<li>Backpropagation(Chain rule)을 사용해 학습</li>
</ul>
</section>
<section id="rnn을-활용한-many-to-many-적용케이스-태풍의-날짜별-피해액-등" class="level3">
<h3 class="anchored" data-anchor-id="rnn을-활용한-many-to-many-적용케이스-태풍의-날짜별-피해액-등">RNN을 활용한 Many-to-many 적용케이스 (태풍의 날짜별 피해액 등)</h3>
<ul>
<li>hidden state(<img src="https://latex.codecogs.com/png.latex?h_1">)마다 예측(<img src="https://latex.codecogs.com/png.latex?%5Chat%7By%7D">)을 하고, 예측에 대해 실제값과 cross entropy비교 및 Backpropagation <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240630/index_files/figure-html/001a5741-3-image-4.png" class="img-fluid" alt="image-4.png"><br></li>
<li>Multi-layer RNN<br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240630/index_files/figure-html/001a5741-4-image-5.png" class="img-fluid" alt="image-5.png"><br></li>
<li>RNN의 장단점
<ul>
<li>장점
<ul>
<li>Input(문장의 길이 등)이 다른 문제에 대해 대처가 가능</li>
<li>Parameter share로 모델의 크기가 커지지 않게 됨</li>
<li>(이론적으로) 마지막 step에는 모든 정보가 들어있게 됨</li>
</ul></li>
<li>단점
<ul>
<li>느리다</li>
<li><code>Vanishing gradient</code>(학습이 안됨) : 미분값이 0에 수렴하여 학습이 일어나지 않음 (↔︎ Exploding gradient)</li>
<li><code>long-range dependency</code>(장기기억 소실, 학습은 되지만 초반부는 잊음) : 문장 초반부의 단어는 0에 수렴하며 잊게되고, 후반부의 내용만 잘 전달됨</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="lstmlong-short-term-memory" class="level3">
<h3 class="anchored" data-anchor-id="lstmlong-short-term-memory">LSTM(Long Short Term Memory)</h3>
<ul>
<li>장기기억을 잊는 문제를 해결하기 위해, 보존할 수 있는 (장기기억만을 담당하는)cell gate 추가 (RNN의 핵심적 아이디어를 조금 발전시킨 것)</li>
<li>문제
<ul>
<li>여전히 <code>Vanishing gradient</code>는 존재함</li>
<li><code>long-range dependency</code>도 문장이 너무 길어지면 다시 발생</li>
</ul></li>
<li><code>Transformer가 등장하며 잘 안쓰이게 되었음</code></li>
</ul>
</section>
<section id="grugated-recurrent-units" class="level3">
<h3 class="anchored" data-anchor-id="grugated-recurrent-units">GRU(Gated Recurrent Units)</h3>
<ul>
<li>LSTM보다 간소화되었음</li>
<li><code>Transformer가 등장하며 잘 안쓰이게 되었음</code></li>
<li>다만 LSTM이나 GRU 모두 선박이나 태풍의 이동경로 등의 작은 규모는 적용할만 함 (Transformer는 상당히 큰 모델임)
<ul>
<li>자연어는 Transformer 사용(위의 사례도 Transformer사용시 더 좋아짐)</li>
</ul></li>
</ul>


</section>
</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>파이썬</category>
  <category>머신러닝</category>
  <category>딥러닝</category>
  <category>MStudy</category>
  <guid>https://kr9268.github.io/posts/meta-dl-creditcard-20240630/</guid>
  <pubDate>Sun, 30 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[공모전] 공공데이터 공모전-7(광물 전체 제안배경 작성)</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/dtcontest-ore-20240624/</link>
  <description><![CDATA[ 





<p>2024년 12회 산업통상자원부 공공데이터 활용 아이디어 공모전 참가 기록.(광물 전체 제안배경 작성)</p>
<section id="개요" class="level1">
<h1>개요</h1>
<ul>
<li>2024년 12회 산업통상자원부 공공데이터 활용 아이디어 공모전 참가해보기로 함
<ul>
<li>https://datacontest.kr/apply/applyAdd/3</li>
</ul></li>
<li>니켈 뿐 아니라 타 광석에 대해 분석하여 제안배경에 대해 작성하기로 함</li>
</ul>
</section>
<section id="내용정리" class="level1">
<h1>내용정리</h1>
<section id="지난-회의정리" class="level2">
<h2 class="anchored" data-anchor-id="지난-회의정리">지난 회의정리</h2>
<ul>
<li>내가 진행할 과업
<ul>
<li>UN Comtreade API개발한 것을 기반으로 광물별 데이터 저장 및 바로 사용할수 있도록 db화
<ul>
<li>기존에 만들어둔 공공데이터포털 데이터 공유용 git을 활용하여 모든 데이터 관리 예정
<ul>
<li>링크 : https://github.com/KR9268/db_datagokr</li>
</ul></li>
</ul></li>
<li>분석을 구상하고 제안한 배경에 대해 작성
<ul>
<li>기존의 니켈뿐 아니라 분석 대상 광석 전체에 대해 분석 진행</li>
<li>해당 내용 기반으로 분석의 당위성 부여 예정</li>
</ul></li>
<li>활용데이터에 대한 정리
<ul>
<li>활용한 외부데이터와 내용, 활용이유 정리</li>
</ul></li>
</ul></li>
<li>타 팀원들 진행할 과업
<ul>
<li>LSTM 등 예측 모델에 대한 설명</li>
<li>Prophet 등 이상탐지 모델에 대한 설명</li>
<li>만들어둔 db활용하여 데이터 추가가공 및 전처리</li>
<li>모델링 및 모델학습</li>
</ul></li>
<li>다같이 진행할 과업
<ul>
<li>분석으로 인한 기대(파급)효과</li>
</ul></li>
</ul>
</section>
</section>
<section id="보고서제안배경-초안" class="level1">
<h1>보고서(제안배경) 초안</h1>
<section id="제안배경" class="level2">
<h2 class="anchored" data-anchor-id="제안배경">제안배경</h2>
<section id="현황-및-제안목적" class="level3">
<h3 class="anchored" data-anchor-id="현황-및-제안목적">현황 및 제안목적</h3>
<section id="탄소중립-등-환경에-대한-관심과-전기차-배터리-등-미래-유망산업의-핵심광물-수요-증가" class="level4">
<h4 class="anchored" data-anchor-id="탄소중립-등-환경에-대한-관심과-전기차-배터리-등-미래-유망산업의-핵심광물-수요-증가">탄소중립 등 환경에 대한 관심과, 전기차 배터리 등 미래 유망산업의 핵심광물 수요 증가</h4>
<ul>
<li>리튬, 니켈, 코발트, 망간은 전기차 이차전지의 원료로, 배터리 양극재 등에 필요한 핵심금속</li>
<li>세계은행 예상에 따르면 배터리 시장은 2050년까지 크게 성장할 전망<br> (2050년에는 2018년 기준 450%이상 수요증가할 것으로 예상)<br> <img src="https://kr9268.github.io/posts/dtcontest-ore-20240624/index_files/figure-html/5dcda823-5-image.png" class="img-fluid" alt="image.png"><br> <strong>출처</strong> : Minerals for Climate Action: The Mineral Intensity of the Clean Energy Transition(2020), The World Bank</li>
</ul>
</section>
<section id="핵심광물-매장이-특정-국가에-심하게-편중되어-있어-상당한-공급망-리스크-존재" class="level4">
<h4 class="anchored" data-anchor-id="핵심광물-매장이-특정-국가에-심하게-편중되어-있어-상당한-공급망-리스크-존재">핵심광물 매장이 특정 국가에 심하게 편중되어 있어 상당한 공급망 리스크 존재</h4>
<ul>
<li>광물/국가별 매장량 추이
<ul>
<li>니켈 : 인도네시아(42%), 호주(18.3%), 브라질(12.2%) 등<br> <img src="https://kr9268.github.io/posts/dtcontest-ore-20240624/index_files/figure-html/5dcda823-1-image-2.png" class="img-fluid" alt="image-2.png"></li>
<li>코발트 : 콩고(57%), 호주(16.1%) 등<br> <img src="https://kr9268.github.io/posts/dtcontest-ore-20240624/index_files/figure-html/5dcda823-2-image-3.png" class="img-fluid" alt="image-3.png"></li>
<li>리튬 : 칠레(33.6%), 호주(22.4%), 아르헨티나(13%) 등<br> <img src="https://kr9268.github.io/posts/dtcontest-ore-20240624/index_files/figure-html/5dcda823-3-image-4.png" class="img-fluid" alt="image-4.png"></li>
<li>망간 : 남아프리카(31.4%), 호주(26.2%), 중국(14.7%) 등<br> <img src="https://kr9268.github.io/posts/dtcontest-ore-20240624/index_files/figure-html/5dcda823-4-image-5.png" class="img-fluid" alt="image-5.png"><br> <strong>출처</strong> : USGS Mineral Commodity Summaries 2024 데이터로 가공<br> https://www.sciencebase.gov/catalog/item/65a6e45fd34e5af967a46749</li>
</ul></li>
</ul>
</section>
<section id="핵심광물-조달에-대한-수입경쟁-심화" class="level4">
<h4 class="anchored" data-anchor-id="핵심광물-조달에-대한-수입경쟁-심화">핵심광물 조달에 대한 수입경쟁 심화</h4>
<ul>
<li>각 광물에 대한 국가별 수입량은 2014년 대비 상승세를 보이고 있음
<ul>
<li>다만, 리튬은 전기차 캐즘이나 배터리시장 경쟁심화 등 여러 요소로 감소된 것으로 추정
<ul>
<li>배터리시장의 한국업체 점유율 전년비 5.3%하락</li>
<li>전기차 캐즘 : Chasm, 대중화 전 수요가 감소하는 것</li>
</ul></li>
</ul></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240624/index_files/figure-html/874c8c3a-1-image.png" class="img-fluid figure-img"></p>
<figcaption>image.png</figcaption>
</figure>
</div>
<p><strong>출처</strong> : USGS Mineral Commodity Summaries 2024 데이터로 가공<br> https://www.sciencebase.gov/catalog/item/65a6e45fd34e5af967a46749</p>
<ul>
<li>각 광물에 대한 국가별 수입량은 2014년 대비 상승세를 보이고 있음
<ul>
<li>한국 : 희소금속 산업 발전대책 2.0 추진 (확보-비축-순환 수급에 대한 3중 안정망 등)</li>
<li>미국 : 중요 광물 공급을 위한 연방정부 전략 추진 (수입의존 저감 및 공급망 확보 등)</li>
<li>일본 : 신 국제자원 전략 추진 (비축제도 재검토, 광종별 확보책 구축, 확보를 위한 국제협력 도출 등)</li>
<li>EU : EIP Raw materials 추진 (자원의 채광,재활용 등에 대한 시험적 대응, 희소자원에 대한 대체 이용처 도출 등)</li>
</ul></li>
</ul>
<p><strong>출처</strong> : 한눈에 보는 6대 핵심광물 이슈분석, 한국지질자원연구원</p>
<ul>
<li><p>광물별 상위 수입국 현황(하단 참조)</p>
<ul>
<li>광물별 상위 수입국 현황 - 니켈 (단위 : kt[킬로톤])
<ul>
<li>Index 0~4 : 1~5순위 / Index 5 : 합계</li>
</ul></li>
</ul></li>
</ul>
<div id="c54b480c" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">target_ore <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'니켈'</span></span>
<span id="cb1-2"></span>
<span id="cb1-3">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].copy()</span>
<span id="cb1-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_year <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].columns:</span>
<span id="cb1-5">    ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;br&gt;'</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># HWP파일 작성용 CSV저장, 자동 줄바꿈 적용시 아래 표기처럼 복사/붙여넣기 가능</span></span>
<span id="cb1-8">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].to_excel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Top5Country_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>target_ore<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.xlsx"</span>)</span>
<span id="cb1-9">display(HTML(ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>].to_html(escape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)))</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<colgroup>
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
</colgroup>
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2014</th>
<th data-quarto-table-cell-role="th">2015</th>
<th data-quarto-table-cell-role="th">2016</th>
<th data-quarto-table-cell-role="th">2017</th>
<th data-quarto-table-cell-role="th">2018</th>
<th data-quarto-table-cell-role="th">2019</th>
<th data-quarto-table-cell-role="th">2020</th>
<th data-quarto-table-cell-role="th">2021</th>
<th data-quarto-table-cell-role="th">2022</th>
<th data-quarto-table-cell-role="th">2023</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Brazil<br>
29,012</td>
<td>Brazil<br>
34,127</td>
<td>Brazil<br>
19,720</td>
<td>Japan<br>
112,033</td>
<td>Japan<br>
135,167</td>
<td>Japan<br>
191,793</td>
<td>Japan<br>
200,127</td>
<td>Japan<br>
206,021</td>
<td>Japan<br>
173,627</td>
<td>China<br>
256,142</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Germany<br>
11,705</td>
<td>Rep. of Korea<br>
27,394</td>
<td>China<br>
15,197</td>
<td>Rep. of Korea<br>
53,085</td>
<td>Rep. of Korea<br>
52,446</td>
<td>Belgium<br>
34,111</td>
<td>Belgium<br>
31,329</td>
<td>China<br>
98,853</td>
<td>China<br>
119,071</td>
<td>Japan<br>
124,779</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Turkiye<br>
2,203</td>
<td>Canada<br>
16,517</td>
<td>Germany<br>
14,054</td>
<td>China<br>
21,639</td>
<td>Australia<br>
21,776</td>
<td>Rep. of Korea<br>
31,817</td>
<td>Canada<br>
21,353</td>
<td>Belgium<br>
41,121</td>
<td>Belgium<br>
43,286</td>
<td>Belgium<br>
41,815</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Switzerland<br>
1,344</td>
<td>Germany<br>
12,654</td>
<td>Canada<br>
13,500</td>
<td>Germany<br>
13,939</td>
<td>Belgium<br>
20,963</td>
<td>Canada<br>
25,360</td>
<td>China<br>
16,340</td>
<td>Canada<br>
21,410</td>
<td>Canada<br>
18,103</td>
<td>Malaysia<br>
26,280</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Spain<br>
1,292</td>
<td>Thailand<br>
4,923</td>
<td>Rep. of Korea<br>
8,951</td>
<td>India<br>
11,978</td>
<td>China<br>
20,569</td>
<td>Australia<br>
19,640</td>
<td>Australia<br>
13,834</td>
<td>Malaysia<br>
10,150</td>
<td>Rep. of Korea<br>
14,469</td>
<td>Canada<br>
13,364</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>45,555</td>
<td>95,615</td>
<td>71,421</td>
<td>212,674</td>
<td>250,921</td>
<td>302,721</td>
<td>282,983</td>
<td>377,554</td>
<td>368,556</td>
<td>462,380</td>
</tr>
</tbody>
</table>
</div>
</div>
<ul>
<li>광물별 상위 수입국 현황 - 코발트 (단위 : kt[킬로톤])</li>
</ul>
<div id="f97f66c5" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">target_ore <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'코발트'</span></span>
<span id="cb2-2"></span>
<span id="cb2-3">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].copy()</span>
<span id="cb2-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_year <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].columns:</span>
<span id="cb2-5">    ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;br&gt;'</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># HWP파일 작성용 CSV저장, 자동 줄바꿈 적용시 아래 표기처럼 복사/붙여넣기 가능</span></span>
<span id="cb2-8">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].to_excel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Top5Country_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>target_ore<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.xlsx"</span>)</span>
<span id="cb2-9">display(HTML(ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>].to_html(escape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)))</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<colgroup>
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
</colgroup>
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2014</th>
<th data-quarto-table-cell-role="th">2015</th>
<th data-quarto-table-cell-role="th">2016</th>
<th data-quarto-table-cell-role="th">2017</th>
<th data-quarto-table-cell-role="th">2018</th>
<th data-quarto-table-cell-role="th">2019</th>
<th data-quarto-table-cell-role="th">2020</th>
<th data-quarto-table-cell-role="th">2021</th>
<th data-quarto-table-cell-role="th">2022</th>
<th data-quarto-table-cell-role="th">2023</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Germany<br>
360,060</td>
<td>Germany<br>
366,375</td>
<td>USA<br>
444,837</td>
<td>USA<br>
496,572</td>
<td>USA<br>
471,603</td>
<td>United Kingdom<br>
546,036</td>
<td>Germany<br>
571,008</td>
<td>Germany<br>
660,773</td>
<td>Germany<br>
488,970</td>
<td>Germany<br>
529,288</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Sweden<br>
213,809</td>
<td>Sweden<br>
220,380</td>
<td>Germany<br>
347,106</td>
<td>United Kingdom<br>
345,329</td>
<td>Germany<br>
329,296</td>
<td>Germany<br>
380,888</td>
<td>USA<br>
472,193</td>
<td>USA<br>
295,225</td>
<td>Italy<br>
250,075</td>
<td>United Kingdom<br>
395,371</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Brazil<br>
154,625</td>
<td>Brazil<br>
124,744</td>
<td>Sweden<br>
201,729</td>
<td>Germany<br>
299,495</td>
<td>Finland<br>
277,965</td>
<td>USA<br>
348,198</td>
<td>United Kingdom<br>
371,668</td>
<td>Italy<br>
232,667</td>
<td>Brazil<br>
191,783</td>
<td>USA<br>
219,089</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Netherlands<br>
124,798</td>
<td>Canada<br>
93,406</td>
<td>Brazil<br>
137,948</td>
<td>Italy<br>
195,547</td>
<td>United Kingdom<br>
264,720</td>
<td>Italy<br>
217,586</td>
<td>Italy<br>
217,804</td>
<td>United Kingdom<br>
198,261</td>
<td>Austria<br>
186,431</td>
<td>Japan<br>
189,547</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Belgium<br>
90,674</td>
<td>Rep. of Korea<br>
76,266</td>
<td>Netherlands<br>
101,162</td>
<td>Sweden<br>
182,634</td>
<td>Italy<br>
228,860</td>
<td>France<br>
176,344</td>
<td>Sweden<br>
159,068</td>
<td>Sweden<br>
187,343</td>
<td>Sweden<br>
164,849</td>
<td>Sweden<br>
180,823</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>943,966</td>
<td>881,171</td>
<td>1,232,782</td>
<td>1,519,578</td>
<td>1,572,444</td>
<td>1,669,052</td>
<td>1,791,741</td>
<td>1,574,269</td>
<td>1,282,108</td>
<td>1,514,119</td>
</tr>
</tbody>
</table>
</div>
</div>
<ul>
<li>광물별 상위 수입국 현황 - 리튬 (단위 : kt[킬로톤])</li>
</ul>
<div id="11fc602a" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">target_ore <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'리튬'</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].copy()</span>
<span id="cb3-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_year <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].columns:</span>
<span id="cb3-5">    ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;br&gt;'</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># HWP파일 작성용 CSV저장, 자동 줄바꿈 적용시 아래 표기처럼 복사/붙여넣기 가능</span></span>
<span id="cb3-8">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].to_excel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Top5Country_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>target_ore<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.xlsx"</span>)</span>
<span id="cb3-9">display(HTML(ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>].to_html(escape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)))</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<colgroup>
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
</colgroup>
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2014</th>
<th data-quarto-table-cell-role="th">2015</th>
<th data-quarto-table-cell-role="th">2016</th>
<th data-quarto-table-cell-role="th">2017</th>
<th data-quarto-table-cell-role="th">2018</th>
<th data-quarto-table-cell-role="th">2019</th>
<th data-quarto-table-cell-role="th">2020</th>
<th data-quarto-table-cell-role="th">2021</th>
<th data-quarto-table-cell-role="th">2022</th>
<th data-quarto-table-cell-role="th">2023</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Belgium<br>
11,844</td>
<td>Rep. of Korea<br>
35,014</td>
<td>China<br>
47,227</td>
<td>Japan<br>
69,609</td>
<td>Rep. of Korea<br>
91,029</td>
<td>Rep. of Korea<br>
124,094</td>
<td>Rep. of Korea<br>
130,051</td>
<td>Rep. of Korea<br>
189,821</td>
<td>China<br>
278,358</td>
<td>China<br>
324,683</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Spain<br>
6,852</td>
<td>Belgium<br>
18,782</td>
<td>USA<br>
33,806</td>
<td>China<br>
61,411</td>
<td>Japan<br>
86,273</td>
<td>Japan<br>
118,216</td>
<td>China<br>
101,259</td>
<td>China<br>
169,226</td>
<td>Rep. of Korea<br>
238,878</td>
<td>Japan<br>
109,344</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Germany<br>
3,900</td>
<td>Canada<br>
7,502</td>
<td>Belgium<br>
24,300</td>
<td>Rep. of Korea<br>
55,620</td>
<td>China<br>
46,158</td>
<td>China<br>
59,437</td>
<td>Japan<br>
97,427</td>
<td>Japan<br>
108,999</td>
<td>Japan<br>
120,350</td>
<td>USA<br>
34,261</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Turkiye<br>
3,313</td>
<td>Germany<br>
6,237</td>
<td>Russian Federation<br>
11,620</td>
<td>USA<br>
34,820</td>
<td>USA<br>
36,507</td>
<td>USA<br>
26,740</td>
<td>USA<br>
26,229</td>
<td>USA<br>
27,766</td>
<td>Netherlands<br>
17,332</td>
<td>Netherlands<br>
12,724</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Netherlands<br>
1,376</td>
<td>Spain<br>
5,638</td>
<td>Canada<br>
10,842</td>
<td>Belgium<br>
17,840</td>
<td>Belgium<br>
21,817</td>
<td>France<br>
16,984</td>
<td>Belgium<br>
16,554</td>
<td>Russian Federation<br>
19,591</td>
<td>USA<br>
15,192</td>
<td>United Kingdom<br>
6,761</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>27,285</td>
<td>73,173</td>
<td>127,794</td>
<td>239,299</td>
<td>281,784</td>
<td>345,471</td>
<td>371,519</td>
<td>515,402</td>
<td>670,112</td>
<td>487,772</td>
</tr>
</tbody>
</table>
</div>
</div>
<ul>
<li>광물별 상위 수입국 현황 - 망간 (단위 : kt[킬로톤])</li>
</ul>
<div id="4ec1cbd7" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">target_ore <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'망간'</span></span>
<span id="cb4-2"></span>
<span id="cb4-3">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].copy()</span>
<span id="cb4-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_year <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].columns:</span>
<span id="cb4-5">    ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;br&gt;'</span>)</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># HWP파일 작성용 CSV저장, 자동 줄바꿈 적용시 아래 표기처럼 복사/붙여넣기 가능</span></span>
<span id="cb4-8">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].to_excel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Top5Country_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>target_ore<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.xlsx"</span>)</span>
<span id="cb4-9">display(HTML(ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>].to_html(escape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)))</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<colgroup>
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
</colgroup>
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2014</th>
<th data-quarto-table-cell-role="th">2015</th>
<th data-quarto-table-cell-role="th">2016</th>
<th data-quarto-table-cell-role="th">2017</th>
<th data-quarto-table-cell-role="th">2018</th>
<th data-quarto-table-cell-role="th">2019</th>
<th data-quarto-table-cell-role="th">2020</th>
<th data-quarto-table-cell-role="th">2021</th>
<th data-quarto-table-cell-role="th">2022</th>
<th data-quarto-table-cell-role="th">2023</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Germany<br>
1,762,753</td>
<td>China, Hong Kong SAR<br>
6,596,207</td>
<td>China, Hong Kong SAR<br>
6,430,363</td>
<td>China, Hong Kong SAR<br>
4,445,408</td>
<td>USA<br>
5,646,705</td>
<td>USA<br>
5,337,518</td>
<td>USA<br>
5,522,054</td>
<td>USA<br>
6,726,526</td>
<td>Germany<br>
4,296,848</td>
<td>USA<br>
7,890,263</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Brazil<br>
1,139,607</td>
<td>Germany<br>
2,047,818</td>
<td>USA<br>
3,899,931</td>
<td>USA<br>
4,356,834</td>
<td>China, Hong Kong SAR<br>
5,317,808</td>
<td>China, Hong Kong SAR<br>
5,014,159</td>
<td>China, Hong Kong SAR<br>
4,943,913</td>
<td>Germany<br>
4,675,819</td>
<td>Japan<br>
2,842,379</td>
<td>Germany<br>
3,032,223</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Belgium<br>
847,525</td>
<td>Belgium<br>
1,255,255</td>
<td>Germany<br>
3,361,475</td>
<td>Germany<br>
2,858,660</td>
<td>Germany<br>
2,722,953</td>
<td>Germany<br>
3,163,188</td>
<td>Germany<br>
4,058,559</td>
<td>China, Hong Kong SAR<br>
4,648,238</td>
<td>China, Hong Kong SAR<br>
2,556,882</td>
<td>Japan<br>
2,457,672</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Spain<br>
498,741</td>
<td>Brazil<br>
1,015,417</td>
<td>Russian Federation<br>
1,509,007</td>
<td>Japan<br>
2,302,316</td>
<td>China<br>
2,504,820</td>
<td>China<br>
2,789,753</td>
<td>China<br>
2,812,012</td>
<td>Tunisia<br>
2,484,856</td>
<td>Poland<br>
1,565,781</td>
<td>China, Hong Kong SAR<br>
2,360,582</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Turkiye<br>
457,040</td>
<td>Rep. of Korea<br>
443,342</td>
<td>China<br>
1,213,518</td>
<td>Russian Federation<br>
1,732,776</td>
<td>Japan<br>
2,433,654</td>
<td>Japan<br>
2,398,831</td>
<td>Japan<br>
2,636,763</td>
<td>Japan<br>
2,484,354</td>
<td>China<br>
1,529,201</td>
<td>Poland<br>
1,547,787</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>4,705,666</td>
<td>11,358,039</td>
<td>16,414,293</td>
<td>15,695,994</td>
<td>18,625,940</td>
<td>18,703,449</td>
<td>19,973,301</td>
<td>21,019,792</td>
<td>12,791,091</td>
<td>17,288,526</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><strong>출처</strong> : UN COMTRADE DB의 자료를 가공 <br> <strong>참고</strong> : https://www.sedaily.com/NewsView/2D7TKJ4UE9</p>
<ul>
<li>핵심광물을 확보하기 위해 경쟁국들은 다양한 전략을 추진중
<ul>
<li>한국 : 희소금속 산업 발전대책 2.0 추진 (확보-비축-순환 수급에 대한 3중 안정망 등)</li>
<li>미국 : 중요 광물 공급을 위한 연방정부 전략 추진 (수입의존 저감 및 공급망 확보 등)</li>
<li>일본 : 신 국제자원 전략 추진 (비축제도 재검토, 광종별 확보책 구축, 확보를 위한 국제협력 도출 등)</li>
<li>EU : EIP Raw materials 추진 (자원의 채광,재활용 등에 대한 시험적 대응, 희소자원에 대한 대체 이용처 도출 등)</li>
</ul></li>
</ul>
<p><strong>출처</strong> : 한눈에 보는 6대 핵심광물 이슈분석, 한국지질자원연구원</p>
</section>
<section id="현황요약-및-제안목적" class="level4">
<h4 class="anchored" data-anchor-id="현황요약-및-제안목적">현황요약 및 제안목적</h4>
<ul>
<li>아래와 같은 상황에서 한국도 핵심광물 비축이나 국산화 노력 등이 이루어지고 있음
<ul>
<li>핵심광물의 수요증가(전기차 등 환경에 대한 관심과 배터리 시장의 성장)</li>
<li>공급망 위기(생산지 편중)</li>
<li>수급경쟁 심화(경쟁국의 확보전략 추진, 수입량 증대)</li>
</ul></li>
<li>그럼에도 생산지 편중, 경쟁국은 통제 불가능 요소로, 여전히 공급망 리스크가 상당함</li>
<li>이러한 상황에서 미래 핵심산업의 경쟁력 확보를 이끌어낼 핵심 원재료(광물)의 확보를 위해, 각 상황에 대한 예측과 위기요소를 탐지할, 위기요소 탐지모델을 도입하고자 함</li>
</ul>
</section>
</section>
<section id="도입-방법" class="level3">
<h3 class="anchored" data-anchor-id="도입-방법">도입 방법</h3>
<section id="분석대상-정립" class="level4">
<h4 class="anchored" data-anchor-id="분석대상-정립">분석대상 정립</h4>
<ul>
<li>핵심광물로 니켈, 코발트, 리튬, 망간을 지정하고, 국제기준인 6자리 HSCODE를 기준으로 함
<ul>
<li>산화코발트(282200), 황산코발트(283329), 산화/수산화리튬(282520), 탄산리튬(283691)</li>
<li>산화/수산화니켈(282540), 황산니켈(283324), 이산화망간(850610)</li>
</ul></li>
</ul>
</section>
<section id="고려요소feature-선정" class="level4">
<h4 class="anchored" data-anchor-id="고려요소feature-선정">고려요소(Feature) 선정</h4>
<ul>
<li>국가별 자원수입량을 통해 경쟁자의 활동(광물이동의 편중 등)을 관찰
<ul>
<li>위의 HSCODE로 전세계 수출입현황을 알 수 있는 UN Comtrade DB API로 데이터 확보</li>
</ul></li>
<li>중량당 가격(Price per Weight)을 가격변수로 고려
<ul>
<li>수출입데이터의 Value(Price)와 Netweight로 연월 데이터 산출</li>
</ul></li>
<li>핵심광물 생산지가 해외에 편중되어 국제운송이 필수이므로, 물류에 대해 BDI지수로 관찰
<ul>
<li>BDI : Baltic Dry Index. 원자재 운송에 사용되는 건화물선에 대한 운임비용 지수</li>
<li>원자재 이동이라는 점에서 경기선행지표로도 인식되고 있음(향후 시장상황에 대한 지표)</li>
</ul></li>
</ul>
</section>
<section id="예측-및-이상탐지" class="level4">
<h4 class="anchored" data-anchor-id="예측-및-이상탐지">예측 및 이상탐지</h4>
<ul>
<li>고려요소에 대해 ARIMA, 홀트윈터스 지수평활법을 시작으로 LSTM 등 AI모델로 예측 진행</li>
<li>예측 데이터 기반으로 AnomalyDetection(R, 파이썬의 Prophet) 등을 활용한 이상탐지 진행</li>
</ul>
</section>
</section>
</section>
</section>
<section id="작성에-사용된-분석-코드" class="level1">
<h1>작성에 사용된 분석 코드</h1>
<section id="usgs-자료분석-광물별-매장량-산출" class="level2">
<h2 class="anchored" data-anchor-id="usgs-자료분석-광물별-매장량-산출">USGS 자료분석 (광물별 매장량 산출)</h2>
<div id="359b65ae" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb5-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.ticker <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ticker</span>
<span id="cb5-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> display, HTML</span>
<span id="cb5-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plotly.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> px</span></code></pre></div>
</details>
</div>
<div id="30bd1f6f" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">ores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'니켈'</span>:</span>
<span id="cb6-2">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_name'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mcs2024-nicke_world.csv'</span>,</span>
<span id="cb6-3">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>},</span>
<span id="cb6-4">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'코발트'</span>:</span>
<span id="cb6-5">         {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_name'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mcs2024-cobal_world.csv'</span>,</span>
<span id="cb6-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>},</span>
<span id="cb6-7">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'리튬'</span>:</span>
<span id="cb6-8">         {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_name'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mcs2024-lithi_world.csv'</span>,</span>
<span id="cb6-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>},</span>
<span id="cb6-10">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'망간'</span>:</span>
<span id="cb6-11">         {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_name'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mcs2024-manga_world.csv'</span>,</span>
<span id="cb6-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>}}</span></code></pre></div>
</details>
</div>
<div id="29b12f1d" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CSV리딩</span></span>
<span id="cb7-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores.keys():</span>
<span id="cb7-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CSV리딩</span></span>
<span id="cb7-4">    ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_name'</span>])</span>
<span id="cb7-5"></span>
<span id="cb7-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 전처리</span></span>
<span id="cb7-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Null처리</span></span>
<span id="cb7-8">    ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(regex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'^(?!Unnamed)'</span>).dropna(subset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Country'</span>])</span>
<span id="cb7-9"></span>
<span id="cb7-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 킬로톤인 경우 톤으로 변환(컬럼 추가)</span></span>
<span id="cb7-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_kt'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>].columns:</span>
<span id="cb7-12">        ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_kt'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb7-13"></span>
<span id="cb7-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 숫자에 섞인 기호 처리 후 변환</span></span>
<span id="cb7-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t'</span>].dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'O'</span>:</span>
<span id="cb7-16">        ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&gt;'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb7-17">        ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">','</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb7-18">        ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.strip().astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb7-19">    </span>
<span id="cb7-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 국가명 변환(튀르키예 등)</span></span>
<span id="cb7-21">    ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Country'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Country'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T체rkiye'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Turkiye'</span>)</span>
<span id="cb7-22"></span>
<span id="cb7-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 매장량 (실제값)</span></span>
<span id="cb7-24">    ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>].copy()</span>
<span id="cb7-25">    ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>].groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Country'</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t'</span>])</span>
<span id="cb7-26">    ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t'</span>].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb7-27">    ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>].drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'World total (rounded)'</span>)</span>
<span id="cb7-28"></span>
<span id="cb7-29">    ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>].copy()</span>
<span id="cb7-30">    ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t_total'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>().item())</span>
<span id="cb7-31">    ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_portion'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t_total'</span>]</span>
<span id="cb7-32">    ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>].sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_portion'</span>, ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
</details>
</div>
<div id="a20f702a" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화용 DataFrame</span></span>
<span id="cb8-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores.keys():</span>
<span id="cb8-3">    ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plotly_df'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reserve_df_actual'</span>].copy()</span>
<span id="cb8-4">    ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plotly_df'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plotly_df'</span>].reset_index()</span>
<span id="cb8-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plotly_df'</span>].index):</span>
<span id="cb8-6">        value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plotly_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Country'</span>][i]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;br&gt;</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plotly_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t'</span>][i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:,}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> kt &lt;br&gt;</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plotly_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_portion'</span>][i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.1f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span></span>
<span id="cb8-7">        ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plotly_df'</span>].loc.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__setitem__</span>((i, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Country'</span>), value)  </span></code></pre></div>
</details>
</div>
<div id="e7a295de" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores.keys():</span>
<span id="cb9-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Data</span></span>
<span id="cb9-3">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plotly_df'</span>]</span>
<span id="cb9-4"></span>
<span id="cb9-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create treemap</span></span>
<span id="cb9-6">    fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> px.treemap(data, path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Country'</span>], values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_portion'</span>, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ore,</span>
<span id="cb9-7">                        labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ores[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plotly_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reserves_t'</span>], width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">700</span>, height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">380</span>)</span>
<span id="cb9-8">    fig.update_traces(textposition<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'middle center'</span>)</span>
<span id="cb9-9">    fig.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<pre><code>Unable to display output for mime type(s): application/vnd.plotly.v1+json</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>Unable to display output for mime type(s): application/vnd.plotly.v1+json</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>Unable to display output for mime type(s): application/vnd.plotly.v1+json</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>Unable to display output for mime type(s): application/vnd.plotly.v1+json</code></pre>
</div>
</div>
</section>
<section id="un-comtrade-자료분석광물별-top5수입국" class="level2">
<h2 class="anchored" data-anchor-id="un-comtrade-자료분석광물별-top5수입국">UN Comtrade 자료분석(광물별 Top5수입국)</h2>
<div id="63433b05" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">ores_uncomtrade_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'니켈'</span>:</span>
<span id="cb14-2">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_url'</span>:[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/KR9268/db_datagokr/main/282540,283324_merged(since2011).csv'</span>,</span>
<span id="cb14-3">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/KR9268/db_datagokr/main/282540,283324_merged(since2021).csv'</span>],</span>
<span id="cb14-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>},</span>
<span id="cb14-5">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'코발트'</span>:</span>
<span id="cb14-6">         {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_url'</span>:[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/KR9268/db_datagokr/main/282200,283329_merged(since2011).csv'</span>,</span>
<span id="cb14-7">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/KR9268/db_datagokr/main/282200,283329_merged(since2021).csv'</span>],</span>
<span id="cb14-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>},</span>
<span id="cb14-9">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'리튬'</span>:</span>
<span id="cb14-10">         {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_url'</span>:[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/KR9268/db_datagokr/main/282520,283691_merged(since2011).csv'</span>,</span>
<span id="cb14-11">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/KR9268/db_datagokr/main/282520,283691_merged(since2021).csv'</span>],</span>
<span id="cb14-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>},</span>
<span id="cb14-13">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'망간'</span>:</span>
<span id="cb14-14">         {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_url'</span>:[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/KR9268/db_datagokr/main/850610_merged(since2011).csv'</span>,</span>
<span id="cb14-15">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/KR9268/db_datagokr/main/850610_merged(since2021).csv'</span>],</span>
<span id="cb14-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>}}</span></code></pre></div>
</details>
</div>
<div id="085d3e63" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CSV리딩</span></span>
<span id="cb15-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores_uncomtrade_url.keys():</span>
<span id="cb15-3">    temp_list_for_df_concat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb15-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_url <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores_uncomtrade_url[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_url'</span>]:</span>
<span id="cb15-5">        temp_list_for_df_concat.append(pd.read_csv(each_url, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cp949'</span>, low_memory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>))</span>
<span id="cb15-6">    ores_uncomtrade_url[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat(temp_list_for_df_concat)</span></code></pre></div>
</details>
</div>
<div id="9364d2e2" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기간데이터 전처리 &amp; 데이터 가공 및 순위산출</span></span>
<span id="cb16-2"></span>
<span id="cb16-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> preprocess_df(df_copy):</span>
<span id="cb16-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 날짜변환</span></span>
<span id="cb16-5">    df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period'</span>].astype(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'int'</span>).astype(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'str'</span>)</span>
<span id="cb16-6">    df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period_year'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb16-7">    df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period_month'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb16-8">    df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period_dateformat'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.to_datetime(df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refPeriodId'</span>], <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y%m</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb16-9"></span>
<span id="cb16-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 단위당 가격</span></span>
<span id="cb16-11">    df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value_per_qty'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'primaryValue'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'qty'</span>]</span>
<span id="cb16-12">    df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value_per_qty'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value_per_qty'</span>].replace([np.inf, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.inf], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb16-13"></span>
<span id="cb16-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 국가명 변환(튀르키예 등)</span></span>
<span id="cb16-15">    df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reporterDesc'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reporterDesc'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T체rkiye'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Turkiye'</span>)</span>
<span id="cb16-16">    df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'partnerDesc'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'partnerDesc'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T체rkiye'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Turkiye'</span>)</span>
<span id="cb16-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df_copy</span>
<span id="cb16-18"></span>
<span id="cb16-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores_uncomtrade_url.keys():</span>
<span id="cb16-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 기간데이터 전처리</span></span>
<span id="cb16-21">    ores_uncomtrade_url[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocess_df(ores_uncomtrade_url[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>])</span>
<span id="cb16-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 데이터 가공 및 순위산출(groupby)</span></span>
<span id="cb16-23">    ores_uncomtrade_url[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_groupby_value'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ores_uncomtrade_url[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][ores_uncomtrade_url[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'flowCode'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'M'</span>].groupby([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refYear'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reporterDesc'</span>]).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(numeric_only<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'primaryValue'</span>]</span>
<span id="cb16-24">    ores_uncomtrade_url[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_groupby_value'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ores_uncomtrade_url[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][ores_uncomtrade_url[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'csv_df'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'flowCode'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'M'</span>].groupby([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refYear'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reporterDesc'</span>]).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(numeric_only<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'qty'</span>]</span>
<span id="cb16-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#ores_uncomtrade_url[ore]['df_groupby_value'] =ores_uncomtrade_url[ore]['csv_df'][ores_uncomtrade_url[ore]['csv_df']['flowCode']=='M'].groupby(['refYear','reporterDesc']).sum(numeric_only=True)['value_per_qty']</span></span></code></pre></div>
</details>
</div>
<div id="cfd81b4a" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 상위 5개국 산출</span></span>
<span id="cb17-2"></span>
<span id="cb17-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> return_top5(df_groupby, list_removing_year):</span>
<span id="cb17-4">    dict_top_all_year <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb17-5">    dict_top_all_year_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb17-6">    dict_top_all_year_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb17-7">    dict_top_all_year_value_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb17-8"></span>
<span id="cb17-9">    year_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(df_groupby.index.get_level_values(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)))</span>
<span id="cb17-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> list_removing_year:</span>
<span id="cb17-11">        year_index.remove(_)</span>
<span id="cb17-12">    year_index.sort()</span>
<span id="cb17-13"></span>
<span id="cb17-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_year <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> year_index:</span>
<span id="cb17-15">        top5 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_groupby[each_year].sort_values(ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb17-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'World'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top5.index:</span>
<span id="cb17-17">            top5 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> top5.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'World'</span>)</span>
<span id="cb17-18">        top5_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> top5.index.tolist()[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb17-19"></span>
<span id="cb17-20">        top5_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb17-21">        top5_index_and_value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[]</span>
<span id="cb17-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> index_country <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top5_index:</span>
<span id="cb17-23">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># top5_value.append(top5[index_country])</span></span>
<span id="cb17-24">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># top5_index_and_value.append(f"{index_country}\n{top5[index_country]:,.0f}")</span></span>
<span id="cb17-25"></span>
<span id="cb17-26">            top5_value.append(top5[index_country]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb17-27">            top5_index_and_value.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>index_country<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>top5[index_country]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:,.0f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb17-28">        </span>
<span id="cb17-29">        dict_top_all_year[each_year] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> top5_index</span>
<span id="cb17-30">        dict_top_all_year_value[each_year] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> top5_value</span>
<span id="cb17-31"></span>
<span id="cb17-32">        dict_top_all_year_total[each_year] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> top5_index_and_value</span>
<span id="cb17-33">        dict_top_all_year_value_sum[each_year] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(top5_value)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:,.0f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb17-34"></span>
<span id="cb17-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pd.concat([pd.DataFrame(dict_top_all_year_total), </span>
<span id="cb17-36">                      pd.DataFrame(dict_top_all_year_value_sum, </span>
<span id="cb17-37">                                   index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])]) </span>
<span id="cb17-38"></span>
<span id="cb17-39"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores_uncomtrade_url.keys():</span>
<span id="cb17-40">    ores_uncomtrade_url[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> return_top5(ores_uncomtrade_url[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_groupby_value'</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2011</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2012</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2013</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2024</span>])</span></code></pre></div>
</details>
</div>
<div id="90afd409" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">target_ore <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'코발트'</span></span>
<span id="cb18-2"></span>
<span id="cb18-3">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].copy()</span>
<span id="cb18-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_year <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].columns:</span>
<span id="cb18-5">    ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;br&gt;'</span>)</span>
<span id="cb18-6"></span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># HWP파일 작성용 CSV저장, 자동 줄바꿈 적용시 아래 표기처럼 복사/붙여넣기 가능</span></span>
<span id="cb18-8">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].to_excel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Top5Country_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>target_ore<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.xlsx"</span>)</span>
<span id="cb18-9">display(HTML(ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>].to_html(escape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)))</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<colgroup>
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
</colgroup>
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2014</th>
<th data-quarto-table-cell-role="th">2015</th>
<th data-quarto-table-cell-role="th">2016</th>
<th data-quarto-table-cell-role="th">2017</th>
<th data-quarto-table-cell-role="th">2018</th>
<th data-quarto-table-cell-role="th">2019</th>
<th data-quarto-table-cell-role="th">2020</th>
<th data-quarto-table-cell-role="th">2021</th>
<th data-quarto-table-cell-role="th">2022</th>
<th data-quarto-table-cell-role="th">2023</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Germany<br>
360,060</td>
<td>Germany<br>
366,375</td>
<td>USA<br>
444,837</td>
<td>USA<br>
496,572</td>
<td>USA<br>
471,603</td>
<td>United Kingdom<br>
546,036</td>
<td>Germany<br>
571,008</td>
<td>Germany<br>
660,773</td>
<td>Germany<br>
488,970</td>
<td>Germany<br>
529,288</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Sweden<br>
213,809</td>
<td>Sweden<br>
220,380</td>
<td>Germany<br>
347,106</td>
<td>United Kingdom<br>
345,329</td>
<td>Germany<br>
329,296</td>
<td>Germany<br>
380,888</td>
<td>USA<br>
472,193</td>
<td>USA<br>
295,225</td>
<td>Italy<br>
250,075</td>
<td>United Kingdom<br>
395,371</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Brazil<br>
154,625</td>
<td>Brazil<br>
124,744</td>
<td>Sweden<br>
201,729</td>
<td>Germany<br>
299,495</td>
<td>Finland<br>
277,965</td>
<td>USA<br>
348,198</td>
<td>United Kingdom<br>
371,668</td>
<td>Italy<br>
232,667</td>
<td>Brazil<br>
191,783</td>
<td>USA<br>
219,089</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Netherlands<br>
124,798</td>
<td>Canada<br>
93,406</td>
<td>Brazil<br>
137,948</td>
<td>Italy<br>
195,547</td>
<td>United Kingdom<br>
264,720</td>
<td>Italy<br>
217,586</td>
<td>Italy<br>
217,804</td>
<td>United Kingdom<br>
198,261</td>
<td>Austria<br>
186,431</td>
<td>Japan<br>
189,547</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Belgium<br>
90,674</td>
<td>Rep. of Korea<br>
76,266</td>
<td>Netherlands<br>
101,162</td>
<td>Sweden<br>
182,634</td>
<td>Italy<br>
228,860</td>
<td>France<br>
176,344</td>
<td>Sweden<br>
159,068</td>
<td>Sweden<br>
187,343</td>
<td>Sweden<br>
164,849</td>
<td>Sweden<br>
180,823</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>943,966</td>
<td>881,171</td>
<td>1,232,782</td>
<td>1,519,578</td>
<td>1,572,444</td>
<td>1,669,052</td>
<td>1,791,741</td>
<td>1,574,269</td>
<td>1,282,108</td>
<td>1,514,119</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="cc99e30b" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">target_ore <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'리튬'</span></span>
<span id="cb19-2"></span>
<span id="cb19-3">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].copy()</span>
<span id="cb19-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_year <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].columns:</span>
<span id="cb19-5">    ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;br&gt;'</span>)</span>
<span id="cb19-6"></span>
<span id="cb19-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># HWP파일 작성용 CSV저장, 자동 줄바꿈 적용시 아래 표기처럼 복사/붙여넣기 가능</span></span>
<span id="cb19-8">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].to_excel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Top5Country_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>target_ore<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.xlsx"</span>)</span>
<span id="cb19-9">display(HTML(ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>].to_html(escape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)))</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<colgroup>
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
</colgroup>
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2014</th>
<th data-quarto-table-cell-role="th">2015</th>
<th data-quarto-table-cell-role="th">2016</th>
<th data-quarto-table-cell-role="th">2017</th>
<th data-quarto-table-cell-role="th">2018</th>
<th data-quarto-table-cell-role="th">2019</th>
<th data-quarto-table-cell-role="th">2020</th>
<th data-quarto-table-cell-role="th">2021</th>
<th data-quarto-table-cell-role="th">2022</th>
<th data-quarto-table-cell-role="th">2023</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Belgium<br>
11,844</td>
<td>Rep. of Korea<br>
35,014</td>
<td>China<br>
47,227</td>
<td>Japan<br>
69,609</td>
<td>Rep. of Korea<br>
91,029</td>
<td>Rep. of Korea<br>
124,094</td>
<td>Rep. of Korea<br>
130,051</td>
<td>Rep. of Korea<br>
189,821</td>
<td>China<br>
278,358</td>
<td>China<br>
324,683</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Spain<br>
6,852</td>
<td>Belgium<br>
18,782</td>
<td>USA<br>
33,806</td>
<td>China<br>
61,411</td>
<td>Japan<br>
86,273</td>
<td>Japan<br>
118,216</td>
<td>China<br>
101,259</td>
<td>China<br>
169,226</td>
<td>Rep. of Korea<br>
238,878</td>
<td>Japan<br>
109,344</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Germany<br>
3,900</td>
<td>Canada<br>
7,502</td>
<td>Belgium<br>
24,300</td>
<td>Rep. of Korea<br>
55,620</td>
<td>China<br>
46,158</td>
<td>China<br>
59,437</td>
<td>Japan<br>
97,427</td>
<td>Japan<br>
108,999</td>
<td>Japan<br>
120,350</td>
<td>USA<br>
34,261</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Turkiye<br>
3,313</td>
<td>Germany<br>
6,237</td>
<td>Russian Federation<br>
11,620</td>
<td>USA<br>
34,820</td>
<td>USA<br>
36,507</td>
<td>USA<br>
26,740</td>
<td>USA<br>
26,229</td>
<td>USA<br>
27,766</td>
<td>Netherlands<br>
17,332</td>
<td>Netherlands<br>
12,724</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Netherlands<br>
1,376</td>
<td>Spain<br>
5,638</td>
<td>Canada<br>
10,842</td>
<td>Belgium<br>
17,840</td>
<td>Belgium<br>
21,817</td>
<td>France<br>
16,984</td>
<td>Belgium<br>
16,554</td>
<td>Russian Federation<br>
19,591</td>
<td>USA<br>
15,192</td>
<td>United Kingdom<br>
6,761</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>27,285</td>
<td>73,173</td>
<td>127,794</td>
<td>239,299</td>
<td>281,784</td>
<td>345,471</td>
<td>371,519</td>
<td>515,402</td>
<td>670,112</td>
<td>487,772</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="7223e54b" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">target_ore <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'망간'</span></span>
<span id="cb20-2"></span>
<span id="cb20-3">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].copy()</span>
<span id="cb20-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_year <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].columns:</span>
<span id="cb20-5">    ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;br&gt;'</span>)</span>
<span id="cb20-6"></span>
<span id="cb20-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># HWP파일 작성용 CSV저장, 자동 줄바꿈 적용시 아래 표기처럼 복사/붙여넣기 가능</span></span>
<span id="cb20-8">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].to_excel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Top5Country_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>target_ore<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.xlsx"</span>)</span>
<span id="cb20-9">display(HTML(ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>].to_html(escape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)))</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<colgroup>
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
</colgroup>
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2014</th>
<th data-quarto-table-cell-role="th">2015</th>
<th data-quarto-table-cell-role="th">2016</th>
<th data-quarto-table-cell-role="th">2017</th>
<th data-quarto-table-cell-role="th">2018</th>
<th data-quarto-table-cell-role="th">2019</th>
<th data-quarto-table-cell-role="th">2020</th>
<th data-quarto-table-cell-role="th">2021</th>
<th data-quarto-table-cell-role="th">2022</th>
<th data-quarto-table-cell-role="th">2023</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Germany<br>
1,762,753</td>
<td>China, Hong Kong SAR<br>
6,596,207</td>
<td>China, Hong Kong SAR<br>
6,430,363</td>
<td>China, Hong Kong SAR<br>
4,445,408</td>
<td>USA<br>
5,646,705</td>
<td>USA<br>
5,337,518</td>
<td>USA<br>
5,522,054</td>
<td>USA<br>
6,726,526</td>
<td>Germany<br>
4,296,848</td>
<td>USA<br>
7,890,263</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Brazil<br>
1,139,607</td>
<td>Germany<br>
2,047,818</td>
<td>USA<br>
3,899,931</td>
<td>USA<br>
4,356,834</td>
<td>China, Hong Kong SAR<br>
5,317,808</td>
<td>China, Hong Kong SAR<br>
5,014,159</td>
<td>China, Hong Kong SAR<br>
4,943,913</td>
<td>Germany<br>
4,675,819</td>
<td>Japan<br>
2,842,379</td>
<td>Germany<br>
3,032,223</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Belgium<br>
847,525</td>
<td>Belgium<br>
1,255,255</td>
<td>Germany<br>
3,361,475</td>
<td>Germany<br>
2,858,660</td>
<td>Germany<br>
2,722,953</td>
<td>Germany<br>
3,163,188</td>
<td>Germany<br>
4,058,559</td>
<td>China, Hong Kong SAR<br>
4,648,238</td>
<td>China, Hong Kong SAR<br>
2,556,882</td>
<td>Japan<br>
2,457,672</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Spain<br>
498,741</td>
<td>Brazil<br>
1,015,417</td>
<td>Russian Federation<br>
1,509,007</td>
<td>Japan<br>
2,302,316</td>
<td>China<br>
2,504,820</td>
<td>China<br>
2,789,753</td>
<td>China<br>
2,812,012</td>
<td>Tunisia<br>
2,484,856</td>
<td>Poland<br>
1,565,781</td>
<td>China, Hong Kong SAR<br>
2,360,582</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Turkiye<br>
457,040</td>
<td>Rep. of Korea<br>
443,342</td>
<td>China<br>
1,213,518</td>
<td>Russian Federation<br>
1,732,776</td>
<td>Japan<br>
2,433,654</td>
<td>Japan<br>
2,398,831</td>
<td>Japan<br>
2,636,763</td>
<td>Japan<br>
2,484,354</td>
<td>China<br>
1,529,201</td>
<td>Poland<br>
1,547,787</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>4,705,666</td>
<td>11,358,039</td>
<td>16,414,293</td>
<td>15,695,994</td>
<td>18,625,940</td>
<td>18,703,449</td>
<td>19,973,301</td>
<td>21,019,792</td>
<td>12,791,091</td>
<td>17,288,526</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="f7780a15" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">target_ore <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'니켈'</span></span>
<span id="cb21-2"></span>
<span id="cb21-3">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].copy()</span>
<span id="cb21-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_year <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].columns:</span>
<span id="cb21-5">    ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>][each_year].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;br&gt;'</span>)</span>
<span id="cb21-6"></span>
<span id="cb21-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># HWP파일 작성용 CSV저장, 자동 줄바꿈 적용시 아래 표기처럼 복사/붙여넣기 가능</span></span>
<span id="cb21-8">ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].to_excel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Top5Country_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>target_ore<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.xlsx"</span>)</span>
<span id="cb21-9">display(HTML(ores_uncomtrade_url[target_ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5_html'</span>].to_html(escape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)))</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<colgroup>
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
</colgroup>
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2014</th>
<th data-quarto-table-cell-role="th">2015</th>
<th data-quarto-table-cell-role="th">2016</th>
<th data-quarto-table-cell-role="th">2017</th>
<th data-quarto-table-cell-role="th">2018</th>
<th data-quarto-table-cell-role="th">2019</th>
<th data-quarto-table-cell-role="th">2020</th>
<th data-quarto-table-cell-role="th">2021</th>
<th data-quarto-table-cell-role="th">2022</th>
<th data-quarto-table-cell-role="th">2023</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Brazil<br>
29,012</td>
<td>Brazil<br>
34,127</td>
<td>Brazil<br>
19,720</td>
<td>Japan<br>
112,033</td>
<td>Japan<br>
135,167</td>
<td>Japan<br>
191,793</td>
<td>Japan<br>
200,127</td>
<td>Japan<br>
206,021</td>
<td>Japan<br>
173,627</td>
<td>China<br>
256,142</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Germany<br>
11,705</td>
<td>Rep. of Korea<br>
27,394</td>
<td>China<br>
15,197</td>
<td>Rep. of Korea<br>
53,085</td>
<td>Rep. of Korea<br>
52,446</td>
<td>Belgium<br>
34,111</td>
<td>Belgium<br>
31,329</td>
<td>China<br>
98,853</td>
<td>China<br>
119,071</td>
<td>Japan<br>
124,779</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Turkiye<br>
2,203</td>
<td>Canada<br>
16,517</td>
<td>Germany<br>
14,054</td>
<td>China<br>
21,639</td>
<td>Australia<br>
21,776</td>
<td>Rep. of Korea<br>
31,817</td>
<td>Canada<br>
21,353</td>
<td>Belgium<br>
41,121</td>
<td>Belgium<br>
43,286</td>
<td>Belgium<br>
41,815</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Switzerland<br>
1,344</td>
<td>Germany<br>
12,654</td>
<td>Canada<br>
13,500</td>
<td>Germany<br>
13,939</td>
<td>Belgium<br>
20,963</td>
<td>Canada<br>
25,360</td>
<td>China<br>
16,340</td>
<td>Canada<br>
21,410</td>
<td>Canada<br>
18,103</td>
<td>Malaysia<br>
26,280</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Spain<br>
1,292</td>
<td>Thailand<br>
4,923</td>
<td>Rep. of Korea<br>
8,951</td>
<td>India<br>
11,978</td>
<td>China<br>
20,569</td>
<td>Australia<br>
19,640</td>
<td>Australia<br>
13,834</td>
<td>Malaysia<br>
10,150</td>
<td>Rep. of Korea<br>
14,469</td>
<td>Canada<br>
13,364</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>45,555</td>
<td>95,615</td>
<td>71,421</td>
<td>212,674</td>
<td>250,921</td>
<td>302,721</td>
<td>282,983</td>
<td>377,554</td>
<td>368,556</td>
<td>462,380</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
<section id="un-comtrade-자료분석연도별-광물수입량-산출" class="level2">
<h2 class="anchored" data-anchor-id="un-comtrade-자료분석연도별-광물수입량-산출">UN Comtrade 자료분석(연도별 광물수입량 산출)</h2>
<div id="12c7898e" class="cell">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font.family'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Nanum Gothic'</span></span>
<span id="cb22-2"></span>
<span id="cb22-3">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), ncols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb22-4"></span>
<span id="cb22-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ores_uncomtrade_url.keys():</span>
<span id="cb22-6">    sns_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].columns.tolist()</span>
<span id="cb22-7">    sns_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ores_uncomtrade_url[ore][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'df_top5'</span>].values[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>].tolist()</span>
<span id="cb22-8">    sns_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(sns_value, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sns_index, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[ore])</span>
<span id="cb22-9">    sns_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns_df[ore].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">','</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>).astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb22-10"></span>
<span id="cb22-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'망간'</span>]:</span>
<span id="cb22-12">        target_ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb22-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'니켈'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'리튬'</span>]:</span>
<span id="cb22-14">        target_ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb22-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'니켈'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'코발트'</span>]:</span>
<span id="cb22-16">        target_ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb22-17"></span>
<span id="cb22-18">    sns_df.plot(ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>target_ax)</span>
<span id="cb22-19"></span>
<span id="cb22-20">    target_ax.yaxis.set_major_formatter(ticker.FuncFormatter(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x, pos: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{:,}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(x))))</span>
<span id="cb22-21"></span>
<span id="cb22-22"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_ax <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ax:</span>
<span id="cb22-23">    each_ax.legend()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240624/index_files/figure-html/cell-19-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>


</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>공모전</category>
  <category>공공데이터</category>
  <category>분석</category>
  <guid>https://kr9268.github.io/posts/dtcontest-ore-20240624/</guid>
  <pubDate>Mon, 24 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[M_Study_5주차] Overfitting Control &amp; Hyper-Parameter</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/meta-dl-creditcard-20240623/</link>
  <description><![CDATA[ 





<section id="개요" class="level1">
<h1>개요</h1>
<p>참여중인 딥러닝 스터디 5주차 기록입니다.</p>
</section>
<section id="주차-과제정리" class="level1">
<h1>4주차 과제정리</h1>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MNIST Data Load</span></span>
<span id="cb1-2">(x_train, y_train), (x_test, y_test) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datasets.mnist.load_data()</span>
<span id="cb1-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x_train.shape, y_train.shape, y_train[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb1-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>) (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60000</span>,) <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb1-5"></span>
<span id="cb1-6">x_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_train.reshape((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60000</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
<ul>
<li>위 코드와 같이 reshape 하는 이유
<ul>
<li>이미지 처리의 코드는 기본적으로 3차원이 들어오게 되어있음
<ul>
<li>관례적으로 앞의 샘플(60000)은 제외(표기생략)하고 뒤에 있는 부분(28,28)을 사용하는데, 2차원임</li>
<li>reshape로 (28,28,1)과 같이 통상의 이미지를 처리하는 형식으로 만들어줌 <br><br></li>
</ul></li>
</ul></li>
<li>CNN은 2개의 단계로 진행 (Feature Learning + Classification)
<ul>
<li><p><strong>Feature Learning</strong></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Step 1. Feature Learning</span></span>
<span id="cb2-2">  model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Sequential()</span>
<span id="cb2-3"></span>
<span id="cb2-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output size formula: { (N - F + 2P) / stride } +1</span></span>
<span id="cb2-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># parameter formual: K(F^2 * C + 1)</span></span>
<span id="cb2-6"></span>
<span id="cb2-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># filter number: 32, filter_size = 3x3, (default) stride = 1, padding = 'valid' (= no padding)</span></span>
<span id="cb2-8">  model.add(Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>, input_shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb2-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output shape = {(28-3)/1} +1 = 26 =&gt; feature map = 26 x 26 x 32</span></span>
<span id="cb2-10"></span>
<span id="cb2-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pool_size = 2x2, stride = None, padding = "valid" (= no padding)</span></span>
<span id="cb2-12">  model.add(MaxPooling2D((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb2-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output shape = 26/2 = 13 =&gt; feature map = 13 x 13 x 32</span></span>
<span id="cb2-14"></span>
<span id="cb2-15">  model.add(Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>))</span>
<span id="cb2-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output shape = {(13-3)/1} +1 = 11 =&gt; feature map = 11 x 11 x 64</span></span>
<span id="cb2-17"></span>
<span id="cb2-18">  model.add(MaxPooling2D((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb2-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output shape = 11/2 = 5,5 =&gt; 5 =&gt; feature map = 5 x 5 x 64</span></span>
<span id="cb2-20"></span>
<span id="cb2-21">  model.add(Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>))</span>
<span id="cb2-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output shape = {(5-3)/1} +1 = 3 x 3 x 64</span></span></code></pre></div></li>
<li><p><strong>Classification</strong></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Step 2. Fully Conneted Layer</span></span>
<span id="cb3-2">  model.add(Flatten())</span>
<span id="cb3-3">  model.add(Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>))</span>
<span id="cb3-4">  model.add(Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"softmax"</span>))</span></code></pre></div>
<ul>
<li>Multiclass문제에는 Output Activation function을 Softmax로 한다 <br><br></li>
</ul>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># model compile: cost function, optimizer, metric 설정</span></span>
<span id="cb4-2">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(optimizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"adam"</span>,</span>
<span id="cb4-3">          loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sparse_categorical_crossentropy'</span>,</span>
<span id="cb4-4">          metrics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>])</span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Training</span></span>
<span id="cb4-6">history <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit(x_train, y_train, epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb4-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span>Epoch <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb4-8"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==============================</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">s</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">ms</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> loss: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1554</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> accuracy: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9520</span></span>
<span id="cb4-9">Epoch <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb4-10"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==============================</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">s</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">ms</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> loss: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0497</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> accuracy: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9843</span></span>
<span id="cb4-11">Epoch <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb4-12"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==============================</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">s</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">ms</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> loss: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0344</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> accuracy: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9891</span></span>
<span id="cb4-13">Epoch <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb4-14"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==============================</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">s</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">ms</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> loss: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0266</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> accuracy: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9917</span></span>
<span id="cb4-15">Epoch <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb4-16"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1875</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==============================</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">s</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">ms</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> loss: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0229</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> accuracy: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9926</span></span></code></pre></div></li>
</ul></li>
<li>지난번 ANN 등 보다 좋은 정확도나온 이유(기존ML 등 대비)
<ul>
<li>파라미터의 수가 늘어나, 비선형적 관계를 많이 표현가능해짐
<ul>
<li>(CNN을 쓰며)지난번보다 Layer를 깊게(많이) 만듦</li>
<li>뉴런의 수 증가</li>
</ul></li>
<li>하이퍼 파라미터 조정(Relu사용 등)</li>
<li>Adam Optimizer의 사용</li>
</ul></li>
</ul>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prediction example</span></span>
<span id="cb5-2">  predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(x_test)</span>
<span id="cb5-3"></span>
<span id="cb5-4">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb5-5">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(np.argmax(predictions[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]))</span>
<span id="cb5-6">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(y_test[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb5-7"></span>
<span id="cb5-8">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3171346e-07</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.3666507e-08</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.0742160e-06</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.5065667e-06</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.7597770e-08</span></span>
<span id="cb5-9"> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.1097163e-07</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.6373372e-11</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.9998188e-01</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0004998e-06</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.8241509e-06</span>]</span></code></pre></div>
<ul>
<li>위 코드의 predictions[0]의 10개값
<ul>
<li>Softmax로 도출된, 0~9 중 어떤 값에 속할 지에 대한 확률</li>
</ul></li>
<li>GPU로 모델을 돌리는 방법
<ul>
<li>실습 중인 경우는 GPU가 필요할 정돈 아니지만, 보통의 프로젝트는 GPU사용이 필수적
<ul>
<li><code>with tf.device('/device:GPU:0')</code></li>
</ul>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> tf.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/device:GPU:0'</span>):</span>
<span id="cb6-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Feature Learning</span></span>
<span id="cb6-3">  model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Sequential()</span>
<span id="cb6-4">  model.add(Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), input_shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb6-5">  model.add(MaxPooling2D((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb6-6">  model.add(Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)))</span>
<span id="cb6-7">  model.add(MaxPooling2D((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb6-8">  model.add(Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)))</span>
<span id="cb6-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fully Conneted Layer</span></span>
<span id="cb6-10">  model.add(Flatten())</span>
<span id="cb6-11">  model.add(Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>))</span>
<span id="cb6-12">  model.add(Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"softmax"</span>))</span>
<span id="cb6-13">  model.summary()</span>
<span id="cb6-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># model compile: cost function, optimizer, metric 설정</span></span>
<span id="cb6-15">  model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(optimizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"adam"</span>,</span>
<span id="cb6-16">                loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sparse_categorical_crossentropy'</span>,</span>
<span id="cb6-17">                metrics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>])</span>
<span id="cb6-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Training</span></span>
<span id="cb6-19">  history <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit(x_train, y_train, epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div></li>
</ul></li>
</ul>
</section>
<section id="주차-수업정리" class="level1">
<h1>5주차 수업정리</h1>
<section id="hyper-parameter하이퍼-파라미터" class="level2">
<h2 class="anchored" data-anchor-id="hyper-parameter하이퍼-파라미터"><code>Hyper parameter(하이퍼 파라미터)</code></h2>
<ul>
<li>위 과제에서의 성능향상은, CNN의 적용(계산량의 감소)보다는, 하이퍼 파라미터조정에서 기인함</li>
<li>하이퍼 파라미터 : 사람이 정해주는 레이어 갯수, 뉴런의 갯수 등 <br><br></li>
</ul>
<section id="activation-functions-sigmoid-tanh-relu-등" class="level3">
<h3 class="anchored" data-anchor-id="activation-functions-sigmoid-tanh-relu-등">(1) <code>Activation functions</code> : Sigmoid, tanh, ReLU 등</h3>
<ul>
<li>비선형성을 부여하기 위해 사용. 어떤 것을 쓰냐에 따라 Neural Network성능에 큰 영향</li>
<li>Activation functions의 종류
<ul>
<li><code>Sigmoid</code> : 0~1 출력. Logistic regression 등 오래부터 쓰였던 함수.
<ul>
<li>0~1 사이이기 때문에 확률적 해석이 가능</li>
<li>문제
<ul>
<li><code>Killing Gradient</code> : 가장 치명적 문제. <strong>미분값이 0이 되는 구간은 학습이 일어나지 않음</strong></li>
<li><code>Output not Zero-centered</code> : 치명적 문제. <strong>학습은 되지만, 레이어를 통과할 때마다 왜곡 심화(같은 방향으로만 학습)</strong>
<ul>
<li>SGD에서는 Batch-size 반복마다 일종의 자정작용이 있어 약간 완화되기는 함</li>
</ul></li>
<li>Computationally expensive : 학습이 안될 정도의 큰 문제는 아님. Exponential계산 등 계산량이 많음</li>
</ul></li>
</ul></li>
<li><code>tanh</code> : -1~1 출력.
<ul>
<li>Zero-centered이므로 왜곡이 일어나지는 않음</li>
<li>문제 : 여전히 <code>Killing Gradient</code>문제가 존재하여 Neural Network에서 쓰기는 부적절</li>
</ul></li>
<li><code>ReLU</code>(Rectified Linear Unit) : 음수면 0, 양수면 그대로
<ul>
<li>Computationaliy very efficient(음수면 0반환)</li>
<li><code>Killing Gradient</code>문제는 없음. 기울기가 0인 지점이 없으므로(단 0인 부분은 미분이 되지 않음)</li>
<li>문제
<ul>
<li><code>Output not Zero-centered</code>(Batch-size 적용시 큰 문제가 되진 않음)</li>
<li>0인 부분은 미분이 되지 않음(0인 경우는 미분값 지정하는 방법으로 해결 가능)</li>
<li><code>Dead ReLU</code> : 한번 0이되면, Layer가 계속 되어도 기울기가 업데이트 되지 않고 0</li>
</ul></li>
</ul></li>
<li><code>Leaky ReLU</code>(Rectified Linear Unit) <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240623/index_files/figure-html/9b3ad2c2-4-image.png" class="img-fluid" alt="image.png">
<ul>
<li>음수인 경우 0이 아닌 0.01<img src="https://latex.codecogs.com/png.latex?x">를 적용하여Dead ReLU문제 해결 가능</li>
<li>효율적인 계산이나 Sigmoid/Tanh대비 빠른 장점 등 ReLU의 장점 존재</li>
<li>문제 : additional paremeter(0.01<img src="https://latex.codecogs.com/png.latex?x">)를 계산해야해서 계산량이 늘어나기는 함</li>
</ul></li>
<li><code>ELU</code>(Exponential Linear Unit) :
<ul>
<li>기존처럼 인위적인 지정(구간별 미분값 등)없이, 모든 지점에서 자연스럽게 미분이 가능하도록 Exponential 적용</li>
<li>문제 : 계산량이 늘어남
<ul>
<li>Exponential연산은 nvidia환경에서 지원이 되는 편이긴 함</li>
</ul></li>
</ul></li>
</ul></li>
<li><code>Activation function의 적용</code>
<ul>
<li><strong>기본적으로는 ReLU를 사용</strong>. Dead ReLU문제가 있긴하지만 일반적인 프로젝트 수준에서는 무방</li>
<li>단 Computation자원이 충분하다면 Leaky ReLU나 ELU 사용 가능</li>
<li><strong>Sigmoid나 Tanh는 Hidden layer의 Activation function으로 사용X</strong>(Killing Gradient문제로 학습되지 않음)</li>
<li>참고 : GPT계열 등 대규모 모델은 ReLU계열이나 GELU(ELU를 Gausssian으로 바꾼)</li>
</ul></li>
</ul>
</section>
<section id="weight-initialization" class="level3">
<h3 class="anchored" data-anchor-id="weight-initialization">(2) <code>Weight Initialization</code></h3>
<ul>
<li><p>Gradient Descent에서 임의의 점에서 시작했었던 것과 달리, 좋은 시작지점에서 시작하고자 하는 것</p></li>
<li><p>임의의 크거나 작은 Weight로 시작하는 경우와 문제</p>
<ul>
<li><code>Small Gaussian Random</code> : 작은 Weight로 시작한 경우
<ul>
<li>Layer를 통과할때마다 한 곳으로 수렴(0으로 수렴)되어 학습이 되지 않음 <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240623/index_files/figure-html/9b3ad2c2-1-image-2.png" class="img-fluid" alt="image-2.png"></li>
</ul></li>
<li><code>Large  Gaussian Random</code> : 큰 Weight로 시작한 경우
<ul>
<li>Layer를 통과할때마다 양쪽으로 발산(1,-1로 수렴)되어 학습이 되지 않음 <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240623/index_files/figure-html/9b3ad2c2-2-image-3.png" class="img-fluid" alt="image-3.png"></li>
</ul></li>
<li>ReLU를 적용하더라도 위와 비슷한 문제는 발생</li>
</ul></li>
<li><p><code>Xavier Initialization</code> : Input dimension에 루트를 씌운 것으로 나눠 준 Weight 사용 (64차원이라면 8로 나눔)</p>
<ul>
<li>Input variance와 Output variance 맞춰 좋은 시작점(Weight)에서 시작</li>
<li>Layer를 여러번 통과해도 Robust한 정규분포 모양으로 나오게 됨 <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240623/index_files/figure-html/9b3ad2c2-3-image-4.png" class="img-fluid" alt="image-4.png"></li>
</ul></li>
<li><p><code>Kaiming/MSRA Initialization for ReLU</code> : 2/Input dimension 을 루트 씌운 것으로 나눈 Weight 사용</p></li>
</ul>
</section>
</section>
<section id="learning-rate-scheduling" class="level2">
<h2 class="anchored" data-anchor-id="learning-rate-scheduling"><code>Learning rate Scheduling</code></h2>
<ul>
<li>어떤 Learning rate가 가장 좋은가? <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240623/index_files/figure-html/87b6b97f-2-image.png" class="img-fluid" alt="image.png">
<ul>
<li>Very high : 이동이 너무 커서 Loss가 급격히 상승</li>
<li>Low : 이동이 너무 작아서 오래걸림</li>
<li>High : 처음엔 적절한 rate보다도 학습이 빠르지만, 일정 수준부터 Loss감소가 없음</li>
<li><strong>적절한 rate를 통해, 적절한 속도로 optimum point로 도달하도록 해야함</strong></li>
</ul></li>
<li><code>Learning rate Scheduling(Decay)</code>의 구상
<ul>
<li>High(빠름) → Good(적절) → Low 의 rate를 적용하면 되지 않는지에 대한 의문으로 시작</li>
<li>Epoch에 따라 learning rate를 조절하여 효율적인 학습속도 구현 <strong>(↔︎ constant learning rate)</strong> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240623/index_files/figure-html/87b6b97f-1-image-2.png" class="img-fluid" alt="image-2.png"></li>
<li>모든 프로젝트에 직관을 적용한 Scheduling은 어려우며, 모든 프로젝트에 적용가능한 Scheduling은 없음.
<ul>
<li>정해진 Scheduling은방식(Cosine, Linear, Inverse Sqrt 등)이 존재</li>
</ul></li>
</ul></li>
</ul>
<section id="learning-rate-scheduling의-종류" class="level3">
<h3 class="anchored" data-anchor-id="learning-rate-scheduling의-종류">(1) <code>Learning rate Scheduling의 종류</code></h3>
<ul>
<li>크게 3가지 종류가 있음
<ul>
<li><code>Linear Learning rate</code> : [세심하게 학습] 가장 기본적. Epoch을 거듭할수록 rate 감소</li>
<li><code>Cosine Learning rate</code> : [빠른 학습] High rate를 좀 더 오래 유지</li>
<li><code>Inverse Sqrt rate</code> : [무난하게 학습] rate를 빠르게 감소시킴. Optimal Point를 세밀하게 찾고 싶을 때 사용</li>
</ul></li>
<li>분야마다 많이 사용되는 방법은 다름
<ul>
<li>자연어처리는 큰 모델을 다루고 학습데이터가 많은 편이므로 <code>Cosine Learning rate Scheduler</code> 사용</li>
<li>작은 문제나 모델이라면 <code>Linear/Inverse Sqrt earning rate Scheduler</code> 고려 가능</li>
</ul></li>
<li><code>Learning rate Warm-up</code>?
<ul>
<li>눈으로 Loss 등을 보며 감을 잡는 구간
<ul>
<li>Loss가 엄청 높게 튀는 경우 Learning rate가 높으므로 낮춤</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="기타-참고사항" class="level3">
<h3 class="anchored" data-anchor-id="기타-참고사항">(2) 기타 참고사항</h3>
<ul>
<li>Hyper parameter가 적용되는 부분
<ul>
<li>Activation function은 레이어마다 적용</li>
<li>Learning rate epoch마다 적용</li>
<li>Weight Initialization은 처음에만 적용</li>
</ul></li>
<li>대략적인 가이드라인
<ul>
<li>레이어나 뉴런의 수는 가이드라인이 없는 편 (실험해보며 조정)
<ul>
<li>레이어의 수가 많을수록 복잡한/비선형적인 관계를 표현 가능</li>
<li>레이어의 수가 30개가 좋은지 50개가 좋은진 알 수 없음</li>
</ul></li>
<li>Learning rate는 특정 값이 높거나 낮다고 볼 수 없음 (실험해보며 조정)
<ul>
<li>Loss값이 너무 튀면 learning rate를 먼저 조정 (대부분 말도안되게 튀는 것은 learning rate문제)</li>
</ul></li>
</ul></li>
<li>우선순위 : (loss가 튐)Learning rate 조정 → Optimizer</li>
</ul>
</section>
</section>
<section id="regularization-for-overfitting" class="level2">
<h2 class="anchored" data-anchor-id="regularization-for-overfitting"><code>Regularization for Overfitting</code></h2>
<section id="overfitting" class="level3">
<h3 class="anchored" data-anchor-id="overfitting">(1) Overfitting</h3>
<ul>
<li>새로운 데이터에 대해서는 잘 동작하지 않음 (↔︎Underfitting. 학습한 데이터도 처리하지 못함. 과거의 전통적 머신러닝[모델의 한계 등])</li>
<li>파라미터의 갯수가 늘어나고 복잡해지는 경우 많음</li>
</ul>
</section>
<section id="regularization" class="level3">
<h3 class="anchored" data-anchor-id="regularization">(2) Regularization</h3>
<ul>
<li>파라미터가 커질수록 오차도 커짐 → 파라미터가 커져 Overfitting이 일어나는 것을 방지</li>
<li>람다(<img src="https://latex.codecogs.com/png.latex?%5Clambda">)의 크기로 패널티의 크기를 설정. 커질수록 하단 Boundary(L2는 원형, L1은 마름모)는 작아짐</li>
<li>기존의 최적화 지점(Parameter제약 없을 때)에서 그래프의 화살표 방향(Boundary안)으로 이동</li>
</ul>
<section id="ridge-regressionl2-norm" class="level4">
<h4 class="anchored" data-anchor-id="ridge-regressionl2-norm"><code>Ridge Regression(L2 Norm)</code></h4>
<ul>
<li>기존의 오차정의(MSE 등)에, Penalty term으로 <code>파라미터를 제곱해서 더함</code><br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240623/index_files/figure-html/d24f026a-4-image.png" class="img-fluid" alt="image.png"> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240623/index_files/figure-html/d24f026a-1-image-2.png" class="img-fluid" alt="image-2.png"></li>
</ul>
</section>
<section id="lasso-regressionl1-norm" class="level4">
<h4 class="anchored" data-anchor-id="lasso-regressionl1-norm"><code>Lasso Regression(L1 Norm)</code></h4>
<ul>
<li>기존의 오차정의(MSE 등)에, Penalty term으로 <code>파라미터를 절대값으로 더함</code><br> (<code>Ridge와의 차이점 : 필요없는 파라미터를 삭제해줌</code>)<br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240623/index_files/figure-html/d24f026a-2-image-3.png" class="img-fluid" alt="image-3.png"> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240623/index_files/figure-html/d24f026a-3-image-4.png" class="img-fluid" alt="image-4.png"></li>
</ul>
</section>
</section>
<section id="regularization-for-deep-nueral-networks" class="level3">
<h3 class="anchored" data-anchor-id="regularization-for-deep-nueral-networks">(3) Regularization for Deep Nueral Networks</h3>
<section id="weight-decay" class="level4">
<h4 class="anchored" data-anchor-id="weight-decay"><code>Weight decay</code></h4>
<ul>
<li>Ridge(L1, 제곱, 원형마름모Boundary), Lasso(L2, 절대값, 마름모Boundary)의 적용</li>
<li>Multiple regression 등 과거엔 많이 쓰였지만 <code>딥러닝에선 잘 안쓰임</code></li>
</ul>
</section>
<section id="early-stopping" class="level4">
<h4 class="anchored" data-anchor-id="early-stopping"><code>Early stopping</code></h4>
<ul>
<li>Train set에서 <code>Validation set을 분리</code>해두고, <code>Validation점수가 높아질때까지(Loss저하) 학습</code>
<ul>
<li>Test loss가 Overfitting지점부터 발생하는 점을 참고</li>
</ul></li>
<li>Acuraccy와 같은 Metric으로 적용하는 것이 트렌드</li>
<li>Loss는 미분가능 &amp; 작을수록 좋은 지표 등을 이유로 채택했지만 실제 알고싶은 것은 Loss가 아닌 Accuracy임</li>
<li>F1-score 등은 미분 불가로 적용 불가했지만, 측정 목적이라면 Accuracy를 채택</li>
<li>단점 : 측정을 위한 Validation set을 만들기 위해 데이터가 많이 필요(데이터가 적은 바이오분야 등은 적용 어려움)
<ul>
<li>다만 딥러닝은 보통 데이터가 많은 경우에 사용하므로 Early stopping 적용이 가능함</li>
</ul></li>
<li>주의점 : Train/Validation/Test로 나눌 때, <code>Test Set은 정한 뒤엔 건드리지 않는다</code> (Train set에서 나눈 Train set와 Validation set의 비율 조절은 가능하다)</li>
<li>Final metric으로 사용된다</li>
</ul>
</section>
<section id="drop-out" class="level4">
<h4 class="anchored" data-anchor-id="drop-out"><code>Drop out</code></h4>
<ul>
<li><code>Random한 뉴런을 끈다</code></li>
<li>다소 무식하지만 효과가 좋아 잘 사용됨(GPT 등에서도 활용)
<ul>
<li>예시) 고양이의 눈/귀/코를 특징으로 잡을 때, 호랑이의 눈이 들어온다면 오류가 발생할 수 있는데,<br> 눈에 대한 특징(뉴런)이 꺼져있다면 오류를 방지할 수도 있다</li>
</ul></li>
<li>Cut out(Drop out의 응용) : 사진에서 특정 부분을 Random하게 삭제하여 입력하여 판단시키는 방법으로 Overfitting극복</li>
<li>Large fully-connected layers에 사용</li>
</ul>
</section>
</section>
</section>
<section id="optimization" class="level2">
<h2 class="anchored" data-anchor-id="optimization"><code>Optimization</code></h2>
<ul>
<li>SGD : 전체 데이터를 다 넣기 어려워 Batch를 적용해 극복</li>
</ul>
<section id="sgd의-문제" class="level3">
<h3 class="anchored" data-anchor-id="sgd의-문제">(1) SGD의 문제</h3>
<ul>
<li><code>Jittering문제</code> : 원하는 것은 전체 파라미터의 최적화지만, 특정 파라미터만 학습이 진행됨
<ul>
<li>예를 들어 자산&amp;월급이 있을 때, 값이 큰 자산 위주로 최적화가 진행됨</li>
<li>Singular value가 큰 쪽으로 학습이 이루어짐</li>
</ul></li>
<li><code>Local optimum문제</code> : 전체의 최적이 아닌, 부분의 최적인 Local Optimum에 빠지는 문제
<ul>
<li>다만, 딥러닝에서는 거의 일어나지 않는 문제임. 모든 파라미터 대부분이 양수거나 음수인 특수한 상황에서 발생</li>
</ul></li>
<li><code>Saddle points문제</code> : 말의 안장같이 생겨, 극소인 동시에 극대인 지점이 발생. <code>학습이 이루어지지 않는 문제</code>
<ul>
<li>오히려 Saddle point문제가 딥러닝에서는 더 많이 발생 (미분값이 여러개의 양수/음수가 섞임)</li>
</ul></li>
<li><code>Inaccurate Gradient Estimation문제</code>
<ul>
<li>어느정도까지는(~50% 정도) Batch size가 클수록 성능향상이 있음
<ul>
<li>장비(메모리)가 유효하게 많을때만 가능한 방법으로, 잘 갖춰진 환경에서만 적용 가능함(Google의 연구논문이었음)
<ul>
<li>즉 현실적으로는 Batch size 확대는 적용이 어려운 점이 있음</li>
</ul></li>
<li>82.76~83% 구간의 변화로, Practical하게 유의미한 결과로 보긴 어려움(Academic한 측면에서 유의미)</li>
</ul></li>
<li><code>적용Insignt</code> : 나에게 1만개의 데이터가 있을 때, 5천 건 정도의 Size(2의 배수인 4096으로) 적용</li>
</ul></li>
</ul>
</section>
<section id="sgd의-문제들에-대한-해결방법" class="level3">
<h3 class="anchored" data-anchor-id="sgd의-문제들에-대한-해결방법">(2) SGD의 문제들에 대한 해결방법</h3>
<ul>
<li><code>SGD + Momentum (Saddle Points문제 해결)</code>
<ul>
<li>현실과 달리 GD의 적용시에는 관성이 없으므로 Saddle point에서 멈추게 되므로, 관성을 주어 해결
<ul>
<li>Local minimum에서는 적용 불가. saddle point형태이기에 가능한 방법<br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240623/index_files/figure-html/a1a340f3-1-image.png" class="img-fluid" alt="image.png"></li>
</ul></li>
</ul></li>
<li><code>AdaGrad[AdaptiveGrad] (Jittering문제 해결)</code>
<ul>
<li>Scale이 달라 발생하는 문제이므로, Scaling을 해주어 맞춰줌</li>
</ul></li>
<li><code>RMSProp [Leaky AdaGrad] (AdaGrad문제 해결)</code>
<ul>
<li>AdaGrad가 나누기를 반복하다보니 분모가 커져 0에 수렴하는 문제를 해결</li>
<li>현재의 비율과 과거의 비율을 조절해 분모가 너무 커지는 것을 방지</li>
<li>AdaGrad의 Scaling개념을 이해하며 사용하는 것이 중요</li>
</ul></li>
<li><strong><code>Adam</code></strong>
<ul>
<li>RMSProp + SGD with Momentum</li>
</ul></li>
<li>First vs Second order Optimization : 실전적으로 잘 쓰이지 않음
<ul>
<li>역행렬이 있다는 점에서 계산량이 많아 쓰기 어렵다는 직관적 이해 정도 갖기</li>
</ul></li>
</ul>
</section>
</section>
<section id="batch-normalization" class="level2">
<h2 class="anchored" data-anchor-id="batch-normalization"><code>Batch Normalization</code></h2>
<section id="data-preprocessing-nomalization" class="level3">
<h3 class="anchored" data-anchor-id="data-preprocessing-nomalization">Data Preprocessing (Nomalization)</h3>
<ul>
<li>통상적으로 Zero-centering, Scaling 두가지를 해 줌</li>
<li>Layer를 통과할 때마다 왜곡이 커지는 문제를 방지 <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240623/index_files/figure-html/e1ac67a4-1-image.png" class="img-fluid" alt="image.png">
<ul>
<li>Zero-centering : 중심에서 점점 멀어지는 문제 해결 (평균을 뺀다)</li>
<li>Scaling : 분포가 점점 길어지는 문제 해결 (표준편차 등 특정 숫자로 나눠 준다)</li>
</ul></li>
<li>일반적인 ML은 처음에 전처리를 하면 되지만, DL은 레이어를 통과하며 다시 왜곡이 심해질 수 있음
<ul>
<li>왜곡을 막기 위해 레이어 통과마다 반복하는 <code>Batch Normalization</code>을 진행</li>
</ul></li>
</ul>
</section>
<section id="batch-normalization-1" class="level3">
<h3 class="anchored" data-anchor-id="batch-normalization-1">Batch Normalization</h3>
<ul>
<li>레이어를 통과할 대마다 Zero-centering, Scaling을 해줌</li>
<li>Drop-out과 함께 많이 사용됨</li>
<li>적용은
<ul>
<li>Activation function 적용하기 전에</li>
<li>Fully-connected layer 통과한 다음에</li>
</ul></li>
</ul>
</section>
<section id="batch-normalization의-종류" class="level3">
<h3 class="anchored" data-anchor-id="batch-normalization의-종류">Batch Normalization의 종류</h3>
<ul>
<li>Batch / Layer / Instance / Group Normalization</li>
<li>기본적으로는 대부분은 Batch Normalization을 많이 사용(특히 이미지)</li>
<li>자연어 처리는 Layer Normalization을 사용</li>
</ul>


</section>
</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>파이썬</category>
  <category>머신러닝</category>
  <category>딥러닝</category>
  <category>MStudy</category>
  <guid>https://kr9268.github.io/posts/meta-dl-creditcard-20240623/</guid>
  <pubDate>Sun, 23 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[M_Study_4주차과제] CNN으로 MNIST다루기</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/meta-dl-creditcard-20240622/</link>
  <description><![CDATA[ 





<p>스터디 진행하며 진행한 과제 기록(MNIST, CNN)</p>
<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>참여중인 딥러닝 스터디 3주차 기록입니다.</p>
<ul>
<li>CNN로 MNIST다루기</li>
<li>강사님이 주신 샘플코드 참고해서, 나에게 맞추거나 추가공부 진행</li>
</ul>
</section>
<section id="과제-작성-mnist-cnn" class="level2">
<h2 class="anchored" data-anchor-id="과제-작성-mnist-cnn">과제 작성 (MNIST CNN)</h2>
<div id="c0497936" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datasets</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Sequential</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.layers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dense, Flatten, Conv2D, MaxPooling2D, Input</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> koreanize_matplotlib</span></code></pre></div>
</div>
<section id="데이터-로드-및-shape-확인" class="level3">
<h3 class="anchored" data-anchor-id="데이터-로드-및-shape-확인">데이터 로드 및 Shape 확인</h3>
<div id="45c2566c" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">(X_train, Y_train), (X_test, Y_test) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datasets.mnist.load_data()</span>
<span id="cb2-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(X_train.shape, Y_train.shape, Y_train[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb2-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(X_test.shape, Y_test.shape, Y_test[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(60000, 28, 28) (60000,) 5
(10000, 28, 28) (10000,) 7</code></pre>
</div>
</div>
<div id="c3c1801b" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Min : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>X_train[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, Max : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>X_train[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-2">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb4-3">plt.imshow(X_train[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Min : 0, Max : 255</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-4-output-2.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="d-tensor로-변경-및-float32변환-normalize" class="level3">
<h3 class="anchored" data-anchor-id="d-tensor로-변경-및-float32변환-normalize">3D tensor로 변경 및 float32변환, Normalize</h3>
<div id="2aa51402" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3D Tensor</span></span>
<span id="cb6-2">X_train.reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60000</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-3">X_test.reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Float32변환</span></span>
<span id="cb6-6">X_train, X_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(X_train, np.float32), np.array(X_test, np.float32)</span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Normalize (0~255값을 0~1로)</span></span>
<span id="cb6-9">X_train, X_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> X_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.</span>, X_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.</span></span></code></pre></div>
</div>
</section>
<section id="feature-learning-fully-connected-layer" class="level3">
<h3 class="anchored" data-anchor-id="feature-learning-fully-connected-layer">Feature Learning + Fully-connected layer</h3>
<div id="7e852cb2" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">### 특성 추출 (Feature Learning)</span></span>
<span id="cb7-2"></span>
<span id="cb7-3">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Sequential()</span>
<span id="cb7-4">model.add(Input(shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb7-5"></span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output계산식(Convolution layer) : (Input - Filter + 2 * Padding) / stride + 1</span></span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3*3인 Filter(Kernel) 32개, 2번째줄 옵션은 미입력시 기본값 </span></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  (Valid Padding은 Padding 미적용을 의미)</span></span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># → Output(activation map=(26,26,32)) : [(28-3+2*0)/1 + 1] * 32(Filter 수)</span></span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># → Weights : (3*3)size*32filter / biases : 32filter</span></span>
<span id="cb7-12">model.add(Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, kernel_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>, </span>
<span id="cb7-13">                 strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'valid'</span>, kernel_initializer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'glorot_uniform'</span>))</span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2*2인 최대값만 남기는 Pool, 2번째줄 옵션은 미입력시 기본값</span></span>
<span id="cb7-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># → Output(activation map=(13,13,32)) : [26/2]</span></span>
<span id="cb7-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># → Weights and biases : Pooling은 학습이 일어나지 않는다</span></span>
<span id="cb7-18">model.add(MaxPooling2D(pool_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb7-19">                       strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'valid'</span>))</span>
<span id="cb7-20"></span>
<span id="cb7-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3*3인 Filter(Kernel) 64개</span></span>
<span id="cb7-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># → Output(activation map=(11,11,64)) : [(13-3+2*0)/1 + 1] * 64(Filter 수)</span></span>
<span id="cb7-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># → Weights : (3*3)size*64filter*32activation map / biases : 64filter</span></span>
<span id="cb7-24">model.add(Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, kernel_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>))</span>
<span id="cb7-25"></span>
<span id="cb7-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2*2인 최대값만 남기는 Pool</span></span>
<span id="cb7-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># → Output(activation map=(5,5,64)) : [11/2]</span></span>
<span id="cb7-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># → Weights and biases : Pooling은 학습이 일어나지 않는다</span></span>
<span id="cb7-29">model.add(MaxPooling2D(pool_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb7-30"></span>
<span id="cb7-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3*3인 Filter(Kernel) 64개</span></span>
<span id="cb7-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># → Output(activation map=(3,3,64)) : [(5-3+2*0)/1 + 1] * 64(Filter 수)</span></span>
<span id="cb7-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># → Weights : (3*3)size*64filter*64activation map / biases : 64filter</span></span>
<span id="cb7-34">model.add(Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, kernel_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>))</span>
<span id="cb7-35"></span>
<span id="cb7-36"></span>
<span id="cb7-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">### Fully connected Layer</span></span>
<span id="cb7-38"></span>
<span id="cb7-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flatten shape(576) : [3*3*64]</span></span>
<span id="cb7-40">model.add(Flatten())</span>
<span id="cb7-41"></span>
<span id="cb7-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이전 Layer와 결합. Node=64</span></span>
<span id="cb7-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># parameters(36928) : [576*64(weights)+64(biases)]</span></span>
<span id="cb7-44">model.add(Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>))</span>
<span id="cb7-45"></span>
<span id="cb7-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이전 Layer와 결합. Output = 10</span></span>
<span id="cb7-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># parameters(650) : [64*10(weights)+10(biases)]</span></span>
<span id="cb7-48">model.add(Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'softmax'</span>))</span>
<span id="cb7-49">model.summary()</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="font-weight: bold">Model: "sequential"</span>
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> Layer (type)                    </span>┃<span style="font-weight: bold"> Output Shape           </span>┃<span style="font-weight: bold">       Param # </span>┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ conv2d (<span style="color: #0087ff; text-decoration-color: #0087ff">Conv2D</span>)                 │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">26</span>, <span style="color: #00af00; text-decoration-color: #00af00">26</span>, <span style="color: #00af00; text-decoration-color: #00af00">32</span>)     │           <span style="color: #00af00; text-decoration-color: #00af00">320</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ max_pooling2d (<span style="color: #0087ff; text-decoration-color: #0087ff">MaxPooling2D</span>)    │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">13</span>, <span style="color: #00af00; text-decoration-color: #00af00">13</span>, <span style="color: #00af00; text-decoration-color: #00af00">32</span>)     │             <span style="color: #00af00; text-decoration-color: #00af00">0</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ conv2d_1 (<span style="color: #0087ff; text-decoration-color: #0087ff">Conv2D</span>)               │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">11</span>, <span style="color: #00af00; text-decoration-color: #00af00">11</span>, <span style="color: #00af00; text-decoration-color: #00af00">64</span>)     │        <span style="color: #00af00; text-decoration-color: #00af00">18,496</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ max_pooling2d_1 (<span style="color: #0087ff; text-decoration-color: #0087ff">MaxPooling2D</span>)  │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">5</span>, <span style="color: #00af00; text-decoration-color: #00af00">5</span>, <span style="color: #00af00; text-decoration-color: #00af00">64</span>)       │             <span style="color: #00af00; text-decoration-color: #00af00">0</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ conv2d_2 (<span style="color: #0087ff; text-decoration-color: #0087ff">Conv2D</span>)               │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">3</span>, <span style="color: #00af00; text-decoration-color: #00af00">3</span>, <span style="color: #00af00; text-decoration-color: #00af00">64</span>)       │        <span style="color: #00af00; text-decoration-color: #00af00">36,928</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ flatten (<span style="color: #0087ff; text-decoration-color: #0087ff">Flatten</span>)               │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">576</span>)            │             <span style="color: #00af00; text-decoration-color: #00af00">0</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense (<span style="color: #0087ff; text-decoration-color: #0087ff">Dense</span>)                   │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">64</span>)             │        <span style="color: #00af00; text-decoration-color: #00af00">36,928</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_1 (<span style="color: #0087ff; text-decoration-color: #0087ff">Dense</span>)                 │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">10</span>)             │           <span style="color: #00af00; text-decoration-color: #00af00">650</span> │
└─────────────────────────────────┴────────────────────────┴───────────────┘
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="font-weight: bold"> Total params: </span><span style="color: #00af00; text-decoration-color: #00af00">93,322</span> (364.54 KB)
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="font-weight: bold"> Trainable params: </span><span style="color: #00af00; text-decoration-color: #00af00">93,322</span> (364.54 KB)
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="font-weight: bold"> Non-trainable params: </span><span style="color: #00af00; text-decoration-color: #00af00">0</span> (0.00 B)
</pre>
</div>
</div>
</section>
<section id="모델-컴파일loss-function-optimizer-metrics-설정" class="level3">
<h3 class="anchored" data-anchor-id="모델-컴파일loss-function-optimizer-metrics-설정">모델 컴파일(Loss function, optimizer, metrics 설정)</h3>
<div id="fb6a35d3" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loss function은</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  Label = number 인 경우 → sparse_categorical_crossentropy (one-hot이 아니므로 메모리소요가 적다)</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  Label = one-hot 인 경우 → categorical_crossentropy</span></span>
<span id="cb8-4">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(optimizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'adam'</span>,</span>
<span id="cb8-5">              loss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sparse_categorical_crossentropy'</span>,</span>
<span id="cb8-6">              metrics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>])</span></code></pre></div>
</div>
</section>
<section id="모델-학습" class="level3">
<h3 class="anchored" data-anchor-id="모델-학습">모델 학습</h3>
<div id="2b455e63" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">history <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit(X_train, Y_train, epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Epoch 1/5
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 9s 4ms/step - accuracy: 0.9056 - loss: 0.3245
Epoch 2/5
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 8s 4ms/step - accuracy: 0.9861 - loss: 0.0442
Epoch 3/5
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 10s 5ms/step - accuracy: 0.9901 - loss: 0.0313
Epoch 4/5
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 8s 4ms/step - accuracy: 0.9926 - loss: 0.0245
Epoch 5/5
1875/1875 ━━━━━━━━━━━━━━━━━━━━ 7s 4ms/step - accuracy: 0.9953 - loss: 0.0163</code></pre>
</div>
</div>
</section>
<section id="학습횟수에-따른-losscost시각화" class="level3">
<h3 class="anchored" data-anchor-id="학습횟수에-따른-losscost시각화">학습횟수에 따른 Loss(Cost)시각화</h3>
<div id="b6e9c9d6" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 저장된 값 확인</span></span>
<span id="cb11-2">history.history</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>{'accuracy': [0.9584500193595886,
  0.9862833619117737,
  0.9898499846458435,
  0.9920166730880737,
  0.9940166473388672],
 'loss': [0.13941822946071625,
  0.04484217241406441,
  0.032598868012428284,
  0.025325138121843338,
  0.01914270594716072]}</code></pre>
</div>
</div>
<div id="e8fce00d" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot 시각화</span></span>
<span id="cb13-2">plt.plot(history.history[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss'</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Train'</span>)</span>
<span id="cb13-3">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The number of Learning'</span>)</span>
<span id="cb13-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Loss'</span>)</span>
<span id="cb13-5">plt.legend()</span>
<span id="cb13-6">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-10-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="모델평가" class="level3">
<h3 class="anchored" data-anchor-id="모델평가">모델평가</h3>
<div id="aaa73651" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">test_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.evaluate(X_test, Y_test, verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb14-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>()</span>
<span id="cb14-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(test_result)</span>
<span id="cb14-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Test Loss = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>test_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> / Test Accuracy = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>test_result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>313/313 - 1s - 3ms/step - accuracy: 0.9909 - loss: 0.0343

[0.03433739021420479, 0.9908999800682068]
Test Loss = 0.03433739021420479 / Test Accuracy = 0.9908999800682068</code></pre>
</div>
</div>
</section>
<section id="예측" class="level3">
<h3 class="anchored" data-anchor-id="예측">예측</h3>
<div id="0aa0b163" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(X_test)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>313/313 ━━━━━━━━━━━━━━━━━━━━ 1s 2ms/step</code></pre>
</div>
</div>
<div id="c4703e2f" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpl</span>
<span id="cb18-2">mpl.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'figure.max_open_warning'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span></span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(predictions)):</span>
<span id="cb18-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np.argmax(predictions[i]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> Y_test[i]:</span>
<span id="cb18-6">        plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb18-7">        plt.imshow(X_test[i])</span>
<span id="cb18-8">        plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"예측</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>argmax(predictions[i])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> / 정답</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>Y_test[i]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-2.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-3.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-4.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-5.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-6.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-7.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-8.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-9.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-10.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-11.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-12.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-13.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-14.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-15.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-16.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-17.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-18.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-19.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-20.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-21.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-22.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-23.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-24.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-25.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-26.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-27.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-28.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-29.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-30.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-31.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-32.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-33.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-34.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-35.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-36.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-37.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-38.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-39.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-40.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-41.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-42.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-43.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-44.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-45.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-46.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-47.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-48.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-49.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-50.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-51.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-52.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-53.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-54.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-55.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-56.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-57.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-58.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-59.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-60.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-61.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-62.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-63.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-64.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-65.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-66.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-67.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-68.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-69.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-70.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-71.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-72.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-73.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-74.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-75.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-76.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-77.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-78.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-79.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-80.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-81.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-82.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-83.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-84.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-85.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-86.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-87.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-88.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-89.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-90.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240622/index_files/figure-html/cell-13-output-91.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>


</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>파이썬</category>
  <category>머신러닝</category>
  <category>딥러닝</category>
  <category>MStudy</category>
  <category>MNIST</category>
  <category>Tensorflow</category>
  <guid>https://kr9268.github.io/posts/meta-dl-creditcard-20240622/</guid>
  <pubDate>Sat, 22 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[공모전] 공공데이터 공모전-6(니켈기준 Plot짜보기)</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/dtcontest-ore-20240621/</link>
  <description><![CDATA[ 





<p>2024년 12회 산업통상자원부 공공데이터 활용 아이디어 공모전 참가 기록.(니켈기준 Plot짜보기)</p>
<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<ul>
<li>2024년 12회 산업통상자원부 공공데이터 활용 아이디어 공모전 참가해보기로 함
<ul>
<li>https://datacontest.kr/apply/applyAdd/3</li>
</ul></li>
<li>각자 광물 하나씩 담당해서 러프하게 보고서 Plot짜보기</li>
</ul>
</section>
<section id="내용정리" class="level2">
<h2 class="anchored" data-anchor-id="내용정리">내용정리</h2>
<section id="지난-회의정리" class="level3">
<h3 class="anchored" data-anchor-id="지난-회의정리">지난 회의정리</h3>
<ul>
<li>국제거래 관련 데이터는 <code>UN Comtrade database</code> 활용하기</li>
<li>아래 4개 광물에 대해 분석 진행하고, HSCODE기준 적용
<ul>
<li><code>리튬</code> : 산화/수산화리튬(282520), 탄산리튬(283691)</li>
<li><code>코발트</code> : 산화/수산화코발트(282200), 황산코발트(283329)</li>
<li><code>망간</code> : 이산화망간(850610)</li>
<li><code>니켈</code> : 산화/수산화니켈(282540), 황산니켈(283324)</li>
</ul></li>
<li>각자 광물을 1~2개 담당해서 <code>공모전 보고서 양식</code>에 맞게 고민해보기
<ul>
<li>분석 배경</li>
<li>어떤 Feature와 모델 사용</li>
<li>기대효과</li>
</ul></li>
</ul>
</section>
<section id="회의내용에-대한-self고찰-및-아이디어-develope" class="level3">
<h3 class="anchored" data-anchor-id="회의내용에-대한-self고찰-및-아이디어-develope">회의내용에 대한 Self고찰 및 아이디어 Develope</h3>
<ul>
<li><p>기존에 니켈에 대해 분석한게 있어서 해당 내용으로 정리해보기</p>
<ul>
<li><p><code>제안배경</code></p>
<ul>
<li>니켈의 용도</li>
<li>니켈의 국가별 소비량 급증(공공데이터포털의 데이터 기준)
<ul>
<li>2011년 대비 2배이상 전체 소비량 증가</li>
<li>중국, 인도네시아를 중심으로 소비량이 대폭 증가함</li>
</ul></li>
<li>니켈의 국가별 생산량 편중(공공데이터포털의 데이터 기준)
<ul>
<li>데이터에 Mine, Refined로 2종류가 있었음</li>
<li>니켈은 해외에서 가공된 형태를 수입하여 사용, 국산화 진행중
<ul>
<li>Refined만 추려서 산출하기로 함</li>
</ul></li>
<li>중국 34.3%, 인도네시아 20.3%로 2개 국가가 과반수</li>
</ul></li>
</ul></li>
<li><p><code>제안배경 요약</code> : 니켈의 소비량 증가와 생산량 편중으로, 공급 리스크가 큰 상황에서 위기요소 탐지의 필요성 대두</p></li>
<li><p><code>고려요소(사용하고자 한 Feature)</code></p>
<ul>
<li><code>생산국 수출량</code> : 광물의 특정 생산국 비중이 높은 점을 고려하여, 해당 국가의 광물 수출량의 이상탐지</li>
<li><code>수입국 수입량</code> : 광물을 수입하는 타 국가의 수입량 증감을 확인하여 이상탐지</li>
<li><code>생산국 판매액</code> : 주요 생산국의 대외 판매액을 기준으로 광물의 가격변동을 탐지
<ul>
<li>기준 : FOB가격(물류나 보험료를 제외한 순수 물품가격)을 판매량으로 나누어 kg당 가격 산출
<ul>
<li>다만 데이터를 보니 Null인 경우가 있어 primaryvalue라는 가격컬럼을 사용키로 함</li>
</ul></li>
</ul></li>
<li><code>BDI(Baltic Dry Index)</code> : 광물이 수입을 통해 조달된다는 점과, 광물운송은 벌크선을 통해 진행됨을 착안하여 물류문제에 대한 이상탐지 요소로 포함
<ul>
<li>벌크선의 수요/가격에 대한 측면뿐 아니라 경기선행지표로도 사용되고 있음(원자재의 이동을 통해 생산증가 등의 예측)</li>
</ul></li>
</ul></li>
<li><p><code>각 Feature의 전처리 방안</code></p>
<ul>
<li><code>Period를 기준으로</code> 국가별 합산(groupby)</li>
<li>사용하고자 하는 컬럼(가격, 수출입량)이 null인 경우에만 drop</li>
<li><code>Exponential smoothing 모델</code>에 넣어 예측값 산출예정으로 yyyymmdd포맷으로 날짜 처리</li>
<li>실제값+예측값을 합친 후 Anomality패키지(<code>R의 AnomalyDetection 이상탐지 패키지</code>)로 이상탐지</li>
<li>각 Period별로 이상치가 발생한 <code>Feature의 수를 합산하여 구간척도로 위기구간을 제안</code> (정상/경계/주의/위기 등)</li>
</ul></li>
<li><p><code>기대효과</code>는 시간부족으로 향후 고민</p>
<ul>
<li>모델에서 예측한 미래구간에서 위기가 탐지되는 경우, 사전 구매 등 광물의 비축 등을 미리 진행</li>
<li>위의 사항을 통한 공급망리스크 회피 및 자국 핵심산업 경쟁력 확보</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="보고내용-jupyter작성-초안" class="level3">
<h3 class="anchored" data-anchor-id="보고내용-jupyter작성-초안">보고내용 Jupyter작성 초안</h3>
<section id="제안배경" class="level4">
<h4 class="anchored" data-anchor-id="제안배경">제안배경</h4>
<ul>
<li>작성시 참고사항 : 관련 현황 및 문제점 등 빅데이터 분석을 구상하고 제안한 배경에 대해서 작성 (활용 분야, 활용빈도, 중요성 등)</li>
</ul>
<ol type="1">
<li><p>니켈은 배터리 및 연료전지 소재, 다양한 촉매, 태양광 지지대의 도금, 내부식성이 필요한 해양구조물 등에 사용 (재생에너지, 친황경자동차 분야에 필수적)</p></li>
<li><p>니켈의 국가별 소비량은 급증하고 있음 (보고서는 하단의 시각화 그래프만 사용)</p></li>
</ol>
<ul>
<li>4차 핵심사업에 소요되는 광물로 2011년 대비 소비량 약 2배 증가</li>
</ul>
<div id="0ad9e571" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 한국광해광업공단_광종별 소비현황에 대한 주소를 하단 `데이터 현황`에서 url부분에 붙여넣기</span></span>
<span id="cb1-6">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/KR9268/db_datagokr/main/komir_consume.csv'</span></span>
<span id="cb1-7">df_consume <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(url, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cp949'</span>, low_memory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb1-8">df_consume_nickel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_consume[df_consume[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광종'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'니켈'</span>]</span>
<span id="cb1-9">df_consume_nickel.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2011 소비량</th>
<th data-quarto-table-cell-role="th">2012 소비량</th>
<th data-quarto-table-cell-role="th">2013 소비량</th>
<th data-quarto-table-cell-role="th">2014 소비량</th>
<th data-quarto-table-cell-role="th">2015 소비량</th>
<th data-quarto-table-cell-role="th">2016 소비량</th>
<th data-quarto-table-cell-role="th">2017 소비량</th>
<th data-quarto-table-cell-role="th">2018 소비량</th>
<th data-quarto-table-cell-role="th">2019 소비량</th>
<th data-quarto-table-cell-role="th">2020 소비량</th>
<th data-quarto-table-cell-role="th">2021 소비량</th>
<th data-quarto-table-cell-role="th">2022 소비량</th>
<th data-quarto-table-cell-role="th">2023 소비량</th>
<th data-quarto-table-cell-role="th">광종</th>
<th data-quarto-table-cell-role="th">국가</th>
<th data-quarto-table-cell-role="th">단위</th>
<th data-quarto-table-cell-role="th">대륙</th>
<th data-quarto-table-cell-role="th">품목</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">224</td>
<td>9.334</td>
<td>8.391</td>
<td>7.965</td>
<td>7.571</td>
<td>6.667</td>
<td>7.021</td>
<td>8.423</td>
<td>7.978</td>
<td>9.052</td>
<td>10.016</td>
<td>6.101</td>
<td>7.152</td>
<td>8.386</td>
<td>니켈</td>
<td>Austria</td>
<td>천톤</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">225</td>
<td>29.794</td>
<td>18.827</td>
<td>26.000</td>
<td>29.129</td>
<td>35.022</td>
<td>31.415</td>
<td>29.080</td>
<td>34.137</td>
<td>35.190</td>
<td>33.392</td>
<td>34.046</td>
<td>25.826</td>
<td>34.825</td>
<td>니켈</td>
<td>Belgium</td>
<td>천톤</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">226</td>
<td>0.157</td>
<td>0.125</td>
<td>0.141</td>
<td>0.137</td>
<td>0.167</td>
<td>0.120</td>
<td>0.114</td>
<td>0.134</td>
<td>0.149</td>
<td>0.179</td>
<td>0.211</td>
<td>0.185</td>
<td>0.149</td>
<td>니켈</td>
<td>Bulgaria</td>
<td>천톤</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">227</td>
<td>3.595</td>
<td>1.891</td>
<td>0.410</td>
<td>3.011</td>
<td>2.882</td>
<td>2.997</td>
<td>2.870</td>
<td>2.163</td>
<td>2.223</td>
<td>2.000</td>
<td>2.297</td>
<td>1.513</td>
<td>1.827</td>
<td>니켈</td>
<td>Czech Republic</td>
<td>천톤</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">228</td>
<td>0.046</td>
<td>0.189</td>
<td>0.063</td>
<td>0.056</td>
<td>0.242</td>
<td>0.372</td>
<td>0.346</td>
<td>0.589</td>
<td>0.544</td>
<td>0.397</td>
<td>0.269</td>
<td>0.560</td>
<td>0.517</td>
<td>니켈</td>
<td>Denmark</td>
<td>천톤</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="d69095dd" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 단위가 여럿인 경우 등 확인 후 통일</span></span>
<span id="cb2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_column <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df_consume_nickel.columns:</span>
<span id="cb2-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'소비량'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> each_column:</span>
<span id="cb2-4">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>each_column<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>df_consume_nickel[each_column]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unique()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>광종 : ['니켈']
국가 : ['Austria' 'Belgium' 'Bulgaria' 'Czech Republic' 'Denmark' 'Finland'
 'France' 'Germany' 'Greece' 'Hungary' 'Italy' 'Macedonia' 'Norway'
 'Poland' 'Portugal' 'Romania' 'Russia' 'Serbia' 'Slovenia' 'Spain'
 'Sweden' 'Switzerland' 'Ukraine' 'United Kingdom' 'South Africa' 'China'
 'Hong Kong' 'India' 'Indonesia' 'Japan' 'Kazakhstan' 'Malaysia'
 'North Korea' 'Philippines' 'Saudi Arabia' 'Singapore' 'South Korea'
 'Taiwan' 'Thailand' 'Turkey' 'United Arab Emirates' 'Vietnam' 'Argentina'
 'Brazil' 'Canada' 'Chile' 'Cuba' 'Mexico' 'U.S.A.' 'Australia'
 'New Zealand']
단위 : ['천톤']
대륙 : ['EUROPE' 'AFRICA' 'ASIA' 'AMERICA' 'OCEANIA']
품목 : ['refined']</code></pre>
</div>
</div>
<div id="b9cade0e" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 단일 항목인 광종, 단위, 품목 제거 (메모리확보 7.6+ KB → 6.4+ KB)</span></span>
<span id="cb4-2">df_consume_nickel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_consume_nickel[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2011 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2012 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2013 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2014 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2015 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2016 소비량'</span>,</span>
<span id="cb4-3">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2018 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'국가'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'대륙'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'품목'</span>]]</span>
<span id="cb4-4">df_consume_nickel.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2011 소비량</th>
<th data-quarto-table-cell-role="th">2012 소비량</th>
<th data-quarto-table-cell-role="th">2013 소비량</th>
<th data-quarto-table-cell-role="th">2014 소비량</th>
<th data-quarto-table-cell-role="th">2015 소비량</th>
<th data-quarto-table-cell-role="th">2016 소비량</th>
<th data-quarto-table-cell-role="th">2017 소비량</th>
<th data-quarto-table-cell-role="th">2018 소비량</th>
<th data-quarto-table-cell-role="th">2019 소비량</th>
<th data-quarto-table-cell-role="th">2020 소비량</th>
<th data-quarto-table-cell-role="th">2021 소비량</th>
<th data-quarto-table-cell-role="th">2022 소비량</th>
<th data-quarto-table-cell-role="th">2023 소비량</th>
<th data-quarto-table-cell-role="th">국가</th>
<th data-quarto-table-cell-role="th">대륙</th>
<th data-quarto-table-cell-role="th">품목</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">224</td>
<td>9.334</td>
<td>8.391</td>
<td>7.965</td>
<td>7.571</td>
<td>6.667</td>
<td>7.021</td>
<td>8.423</td>
<td>7.978</td>
<td>9.052</td>
<td>10.016</td>
<td>6.101</td>
<td>7.152</td>
<td>8.386</td>
<td>Austria</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">225</td>
<td>29.794</td>
<td>18.827</td>
<td>26.000</td>
<td>29.129</td>
<td>35.022</td>
<td>31.415</td>
<td>29.080</td>
<td>34.137</td>
<td>35.190</td>
<td>33.392</td>
<td>34.046</td>
<td>25.826</td>
<td>34.825</td>
<td>Belgium</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">226</td>
<td>0.157</td>
<td>0.125</td>
<td>0.141</td>
<td>0.137</td>
<td>0.167</td>
<td>0.120</td>
<td>0.114</td>
<td>0.134</td>
<td>0.149</td>
<td>0.179</td>
<td>0.211</td>
<td>0.185</td>
<td>0.149</td>
<td>Bulgaria</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">227</td>
<td>3.595</td>
<td>1.891</td>
<td>0.410</td>
<td>3.011</td>
<td>2.882</td>
<td>2.997</td>
<td>2.870</td>
<td>2.163</td>
<td>2.223</td>
<td>2.000</td>
<td>2.297</td>
<td>1.513</td>
<td>1.827</td>
<td>Czech Republic</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">228</td>
<td>0.046</td>
<td>0.189</td>
<td>0.063</td>
<td>0.056</td>
<td>0.242</td>
<td>0.372</td>
<td>0.346</td>
<td>0.589</td>
<td>0.544</td>
<td>0.397</td>
<td>0.269</td>
<td>0.560</td>
<td>0.517</td>
<td>Denmark</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<ul>
<li>전체 소비량 증가</li>
</ul>
<div id="07ee4287" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> koreanize_matplotlib</span>
<span id="cb5-4"></span>
<span id="cb5-5">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb5-6">sns.lineplot(df_consume_nickel.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(numeric_only<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>))</span>
<span id="cb5-7">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'니켈 소비량 추이'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>Text(0.5, 1.0, '니켈 소비량 추이')</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240621/index_files/figure-html/cell-5-output-2.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>국가별 소비량 증가
<ul>
<li>중국, 인도네시아를 중심으로 2011년 대비 소비량 대폭 증가</li>
</ul></li>
</ul>
<div id="918334d3" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">nickel_by_country <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_consume_nickel.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'국가'</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(numeric_only<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-2">nickel_by_country.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2011 소비량</th>
<th data-quarto-table-cell-role="th">2012 소비량</th>
<th data-quarto-table-cell-role="th">2013 소비량</th>
<th data-quarto-table-cell-role="th">2014 소비량</th>
<th data-quarto-table-cell-role="th">2015 소비량</th>
<th data-quarto-table-cell-role="th">2016 소비량</th>
<th data-quarto-table-cell-role="th">2017 소비량</th>
<th data-quarto-table-cell-role="th">2018 소비량</th>
<th data-quarto-table-cell-role="th">2019 소비량</th>
<th data-quarto-table-cell-role="th">2020 소비량</th>
<th data-quarto-table-cell-role="th">2021 소비량</th>
<th data-quarto-table-cell-role="th">2022 소비량</th>
<th data-quarto-table-cell-role="th">2023 소비량</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">국가</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">Argentina</td>
<td>0.974</td>
<td>0.806</td>
<td>0.892</td>
<td>0.501</td>
<td>0.528</td>
<td>0.475</td>
<td>0.535</td>
<td>0.523</td>
<td>0.526</td>
<td>0.274</td>
<td>0.544</td>
<td>0.443</td>
<td>0.452</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Australia</td>
<td>1.600</td>
<td>1.600</td>
<td>1.600</td>
<td>1.600</td>
<td>1.608</td>
<td>1.600</td>
<td>1.600</td>
<td>1.600</td>
<td>1.600</td>
<td>1.600</td>
<td>1.600</td>
<td>1.600</td>
<td>1.600</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Austria</td>
<td>9.334</td>
<td>8.391</td>
<td>7.965</td>
<td>7.571</td>
<td>6.667</td>
<td>7.021</td>
<td>8.423</td>
<td>7.978</td>
<td>9.052</td>
<td>10.016</td>
<td>6.101</td>
<td>7.152</td>
<td>8.386</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Belgium</td>
<td>29.794</td>
<td>18.827</td>
<td>26.000</td>
<td>29.129</td>
<td>35.022</td>
<td>31.415</td>
<td>29.080</td>
<td>34.137</td>
<td>35.190</td>
<td>33.392</td>
<td>34.046</td>
<td>25.826</td>
<td>34.825</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Brazil</td>
<td>26.910</td>
<td>22.455</td>
<td>21.180</td>
<td>26.616</td>
<td>18.062</td>
<td>25.506</td>
<td>22.269</td>
<td>22.376</td>
<td>16.480</td>
<td>12.062</td>
<td>17.697</td>
<td>17.782</td>
<td>11.645</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="114a7124" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 표준편차가 상위 10개 국가 추출</span></span>
<span id="cb8-2">described_nickel_by_country <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nickel_by_country.transpose().describe()</span>
<span id="cb8-3">std_described_nickel_by_country <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> described_nickel_by_country.loc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'std'</span>].sort_values(ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span>
<span id="cb8-4">std_described_nickel_by_country</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>국가
China           440.092028
Indonesia       154.306424
India            18.577287
U.S.A.           16.972706
Taiwan           16.607094
South Africa     12.951598
Germany          12.118787
Japan             9.753820
South Korea       9.739035
Italy             9.129311
Name: std, dtype: float64</code></pre>
</div>
</div>
<div id="1c08c664" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 표준편차 상위 10개국 그래프</span></span>
<span id="cb10-2">index_country <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> std_described_nickel_by_country.index.tolist()</span>
<span id="cb10-3"></span>
<span id="cb10-4">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb10-5">sns.lineplot(nickel_by_country.transpose()[index_country])</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240621/index_files/figure-html/cell-8-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="1aac79af" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 표준편차 상위 10개국 중 중국제외한 그래프</span></span>
<span id="cb11-2">index_country.remove(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'China'</span>)</span>
<span id="cb11-3"></span>
<span id="cb11-4">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb11-5">sns.lineplot(nickel_by_country.transpose()[index_country])</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240621/index_files/figure-html/cell-9-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="052117df" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 표준편차 상위 10개국 중 인도네시아 제외한 그래프</span></span>
<span id="cb12-2">index_country.remove(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Indonesia'</span>)</span>
<span id="cb12-3"></span>
<span id="cb12-4">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb12-5">sns.lineplot(nickel_by_country.transpose()[index_country])</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240621/index_files/figure-html/cell-10-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<ol start="3" type="1">
<li>니켈의 생산량</li>
</ol>
<ul>
<li>주요 2개국 생산량이 58.3%로 편중(인도네시아, 중국, Refined니켈 기준)</li>
</ul>
<div id="6f88a14b" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 한국광해광업공단_광종별 소비현황에 대한 주소를 하단 `데이터 현황`에서 url부분에 붙여넣기</span></span>
<span id="cb13-2">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://raw.githubusercontent.com/KR9268/db_datagokr/main/komir_product_country.csv'</span></span>
<span id="cb13-3">df_product <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(url, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cp949'</span>, low_memory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb13-4">df_product.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2011 생산량</th>
<th data-quarto-table-cell-role="th">2012 생산량</th>
<th data-quarto-table-cell-role="th">2013 생산량</th>
<th data-quarto-table-cell-role="th">2014 생산량</th>
<th data-quarto-table-cell-role="th">2015 생산량</th>
<th data-quarto-table-cell-role="th">2016 생산량</th>
<th data-quarto-table-cell-role="th">2017 생산량</th>
<th data-quarto-table-cell-role="th">2018 생산량</th>
<th data-quarto-table-cell-role="th">2019 생산량</th>
<th data-quarto-table-cell-role="th">2020 생산량</th>
<th data-quarto-table-cell-role="th">2021 생산량</th>
<th data-quarto-table-cell-role="th">2022 생산량</th>
<th data-quarto-table-cell-role="th">2023 생산량</th>
<th data-quarto-table-cell-role="th">광종</th>
<th data-quarto-table-cell-role="th">국가</th>
<th data-quarto-table-cell-role="th">단위</th>
<th data-quarto-table-cell-role="th">대륙</th>
<th data-quarto-table-cell-role="th">품목</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>561.354</td>
<td>800.316</td>
<td>657.1</td>
<td>605.215</td>
<td>787.404</td>
<td>738.612</td>
<td>740.380</td>
<td>760.244</td>
<td>1043.343</td>
<td>619.748</td>
<td>675.269</td>
<td>669.926</td>
<td>542.114</td>
<td>알루미늄</td>
<td>Bosnia</td>
<td>천톤</td>
<td>EUROPE</td>
<td>bauxite</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>0.000</td>
<td>0.000</td>
<td>0.0</td>
<td>0.000</td>
<td>11.900</td>
<td>9.800</td>
<td>12.200</td>
<td>11.800</td>
<td>14.300</td>
<td>14.100</td>
<td>14.500</td>
<td>13.800</td>
<td>13.800</td>
<td>알루미늄</td>
<td>Croatia</td>
<td>천톤</td>
<td>EUROPE</td>
<td>bauxite</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>80.800</td>
<td>90.129</td>
<td>100.0</td>
<td>71.100</td>
<td>70.000</td>
<td>110.000</td>
<td>110.000</td>
<td>110.000</td>
<td>120.760</td>
<td>123.496</td>
<td>142.764</td>
<td>120.000</td>
<td>120.000</td>
<td>알루미늄</td>
<td>France</td>
<td>천톤</td>
<td>EUROPE</td>
<td>bauxite</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2324.000</td>
<td>1815.328</td>
<td>1844.0</td>
<td>1876.000</td>
<td>1831.270</td>
<td>1880.000</td>
<td>1927.145</td>
<td>1559.360</td>
<td>1379.123</td>
<td>1428.639</td>
<td>1227.000</td>
<td>1173.000</td>
<td>869.100</td>
<td>알루미늄</td>
<td>Greece</td>
<td>천톤</td>
<td>EUROPE</td>
<td>bauxite</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>277.800</td>
<td>255.100</td>
<td>93.7</td>
<td>14.400</td>
<td>8.300</td>
<td>16.700</td>
<td>4.000</td>
<td>5.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>알루미늄</td>
<td>Hungary</td>
<td>천톤</td>
<td>EUROPE</td>
<td>bauxite</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="2d4b90eb" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">df_nickel_product <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_product[df_product[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광종'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'니켈'</span>]</span>
<span id="cb14-2">df_nickel_product.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="12">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2011 생산량</th>
<th data-quarto-table-cell-role="th">2012 생산량</th>
<th data-quarto-table-cell-role="th">2013 생산량</th>
<th data-quarto-table-cell-role="th">2014 생산량</th>
<th data-quarto-table-cell-role="th">2015 생산량</th>
<th data-quarto-table-cell-role="th">2016 생산량</th>
<th data-quarto-table-cell-role="th">2017 생산량</th>
<th data-quarto-table-cell-role="th">2018 생산량</th>
<th data-quarto-table-cell-role="th">2019 생산량</th>
<th data-quarto-table-cell-role="th">2020 생산량</th>
<th data-quarto-table-cell-role="th">2021 생산량</th>
<th data-quarto-table-cell-role="th">2022 생산량</th>
<th data-quarto-table-cell-role="th">2023 생산량</th>
<th data-quarto-table-cell-role="th">광종</th>
<th data-quarto-table-cell-role="th">국가</th>
<th data-quarto-table-cell-role="th">단위</th>
<th data-quarto-table-cell-role="th">대륙</th>
<th data-quarto-table-cell-role="th">품목</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">442</td>
<td>3.528</td>
<td>0.728</td>
<td>2.086</td>
<td>4.889</td>
<td>6.309</td>
<td>3.952</td>
<td>5.301</td>
<td>4.204</td>
<td>2.830</td>
<td>3.764</td>
<td>3.615</td>
<td>1.423</td>
<td>0.548</td>
<td>니켈</td>
<td>Albania</td>
<td>천톤</td>
<td>EUROPE</td>
<td>mine</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">443</td>
<td>19.081</td>
<td>19.955</td>
<td>19.579</td>
<td>19.830</td>
<td>10.643</td>
<td>22.034</td>
<td>36.201</td>
<td>43.572</td>
<td>38.530</td>
<td>41.429</td>
<td>42.098</td>
<td>60.360</td>
<td>69.568</td>
<td>니켈</td>
<td>Finland</td>
<td>천톤</td>
<td>EUROPE</td>
<td>mine</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">444</td>
<td>21.100</td>
<td>21.550</td>
<td>19.350</td>
<td>21.410</td>
<td>19.750</td>
<td>19.394</td>
<td>19.080</td>
<td>17.890</td>
<td>13.715</td>
<td>7.060</td>
<td>4.755</td>
<td>1.680</td>
<td>0.000</td>
<td>니켈</td>
<td>Greece</td>
<td>천톤</td>
<td>EUROPE</td>
<td>mine</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">445</td>
<td>7.632</td>
<td>4.436</td>
<td>7.607</td>
<td>6.724</td>
<td>6.650</td>
<td>4.306</td>
<td>7.120</td>
<td>4.791</td>
<td>3.314</td>
<td>3.958</td>
<td>4.735</td>
<td>0.339</td>
<td>0.360</td>
<td>니켈</td>
<td>Kosovo</td>
<td>천톤</td>
<td>EUROPE</td>
<td>mine</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">446</td>
<td>3.600</td>
<td>1.704</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>니켈</td>
<td>Macedonia</td>
<td>천톤</td>
<td>EUROPE</td>
<td>mine</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="4362d7d9" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 단위가 여럿인 경우 등 확인 후 통일</span></span>
<span id="cb15-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_column <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df_nickel_product.columns:</span>
<span id="cb15-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'생산량'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> each_column:</span>
<span id="cb15-4">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>each_column<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>df_nickel_product[each_column]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>unique()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>광종 : ['니켈']
국가 : ['Albania' 'Finland' 'Greece' 'Kosovo' 'Macedonia' 'Norway' 'Poland'
 'Russia' 'Spain' 'Botswana' 'Ivory Coast' 'Madagascar' 'Morocco'
 'South Africa' 'Zambia' 'Zimbabwe' 'China' 'Indonesia' 'Kazakhstan'
 'Myanmar' 'Philippines' 'Turkey' 'Vietnam' 'Brazil' 'Canada' 'Colombia'
 'Cuba' 'Dominican Republic' 'Guatemala' 'U.S.A.' 'Venezuela' 'Australia'
 'New Caledonia' 'Papua New Guinea' 'Austria' 'France' 'Ukraine'
 'United Kingdom' 'India' 'Japan' 'South Korea']
단위 : ['천톤']
대륙 : ['EUROPE' 'AFRICA' 'ASIA' 'AMERICA' 'OCEANIA']
품목 : ['mine' 'refined']</code></pre>
</div>
</div>
<div id="05b44f43" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 단일 항목인 광종, 단위, 품목 제거 (메모리확보 9.4+ KB → 8.4+ KB)</span></span>
<span id="cb17-2">df_nickel_product <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_nickel_product[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2011 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2012 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2013 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2014 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2015 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2016 생산량'</span>,</span>
<span id="cb17-3">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2018 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'국가'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'대륙'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'품목'</span>]]</span>
<span id="cb17-4">df_nickel_product.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2011 생산량</th>
<th data-quarto-table-cell-role="th">2012 생산량</th>
<th data-quarto-table-cell-role="th">2013 생산량</th>
<th data-quarto-table-cell-role="th">2014 생산량</th>
<th data-quarto-table-cell-role="th">2015 생산량</th>
<th data-quarto-table-cell-role="th">2016 생산량</th>
<th data-quarto-table-cell-role="th">2017 생산량</th>
<th data-quarto-table-cell-role="th">2018 생산량</th>
<th data-quarto-table-cell-role="th">2019 생산량</th>
<th data-quarto-table-cell-role="th">2020 생산량</th>
<th data-quarto-table-cell-role="th">2021 생산량</th>
<th data-quarto-table-cell-role="th">2022 생산량</th>
<th data-quarto-table-cell-role="th">2023 생산량</th>
<th data-quarto-table-cell-role="th">국가</th>
<th data-quarto-table-cell-role="th">대륙</th>
<th data-quarto-table-cell-role="th">품목</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">442</td>
<td>3.528</td>
<td>0.728</td>
<td>2.086</td>
<td>4.889</td>
<td>6.309</td>
<td>3.952</td>
<td>5.301</td>
<td>4.204</td>
<td>2.830</td>
<td>3.764</td>
<td>3.615</td>
<td>1.423</td>
<td>0.548</td>
<td>Albania</td>
<td>EUROPE</td>
<td>mine</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">443</td>
<td>19.081</td>
<td>19.955</td>
<td>19.579</td>
<td>19.830</td>
<td>10.643</td>
<td>22.034</td>
<td>36.201</td>
<td>43.572</td>
<td>38.530</td>
<td>41.429</td>
<td>42.098</td>
<td>60.360</td>
<td>69.568</td>
<td>Finland</td>
<td>EUROPE</td>
<td>mine</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">444</td>
<td>21.100</td>
<td>21.550</td>
<td>19.350</td>
<td>21.410</td>
<td>19.750</td>
<td>19.394</td>
<td>19.080</td>
<td>17.890</td>
<td>13.715</td>
<td>7.060</td>
<td>4.755</td>
<td>1.680</td>
<td>0.000</td>
<td>Greece</td>
<td>EUROPE</td>
<td>mine</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">445</td>
<td>7.632</td>
<td>4.436</td>
<td>7.607</td>
<td>6.724</td>
<td>6.650</td>
<td>4.306</td>
<td>7.120</td>
<td>4.791</td>
<td>3.314</td>
<td>3.958</td>
<td>4.735</td>
<td>0.339</td>
<td>0.360</td>
<td>Kosovo</td>
<td>EUROPE</td>
<td>mine</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">446</td>
<td>3.600</td>
<td>1.704</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>Macedonia</td>
<td>EUROPE</td>
<td>mine</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="5149be8b" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 니켈에 대한 국가별 생산량</span></span>
<span id="cb18-2">df2_produce_country_mine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_nickel_product[df_nickel_product[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'품목'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mine'</span>].groupby(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'국가'</span>])[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2011 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2012 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2013 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2014 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2015 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2016 생산량'</span>,</span>
<span id="cb18-3">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2018 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023 생산량'</span>]].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb18-4">df2_produce_country_refined <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_nickel_product[df_nickel_product[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'품목'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refined'</span>].groupby(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'국가'</span>])[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2011 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2012 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2013 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2014 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2015 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2016 생산량'</span>,</span>
<span id="cb18-5">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2018 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023 생산량'</span>]].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span></code></pre></div>
</div>
<div id="7954effe" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 니켈에 대한 국가별 생산량의 총 합계(Mine)</span></span>
<span id="cb19-2">df2_produce_country_total_mine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df2_produce_country_mine[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2011 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2012 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2013 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2014 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2015 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2016 생산량'</span>,</span>
<span id="cb19-3">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2018 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023 생산량'</span>]].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).sort_values(ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb19-4">df2_produce_country_total_mine[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>국가
Indonesia        9543.539
Philippines      4762.154
Russia           3057.635
Australia        2612.548
New Caledonia    2453.547
Canada           2448.002
China            1274.216
Brazil            988.699
Cuba              680.208
South Africa      561.815
dtype: float64</code></pre>
</div>
</div>
<div id="c1d29fbf" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 니켈에 대한 국가별 생산량의 총 합계(Refined)</span></span>
<span id="cb21-2">df2_produce_country_total_refined <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df2_produce_country_refined[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2011 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2012 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2013 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2014 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2015 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2016 생산량'</span>,</span>
<span id="cb21-3">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2018 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023 생산량'</span>]].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).sort_values(ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb21-4">df2_produce_country_total_refined[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre><code>국가
China            8813.411
Indonesia        5204.761
Russia           2458.088
Japan            2295.233
Canada           1742.140
Australia        1521.416
Norway           1178.114
New Caledonia     936.948
Brazil            809.897
Finland           712.412
dtype: float64</code></pre>
</div>
</div>
<div id="2a9f86e8" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 니켈 총생산량 내림차순 기준 상위 10개국 Pie chart (Refined한정)</span></span>
<span id="cb23-2">target_country <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df2_produce_country_total_refined[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>].index.tolist()</span>
<span id="cb23-3">df2_produce_country_total_refined.loc[target_country].plot(kind<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pie'</span>,startangle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">145</span>, autopct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%.1f%%</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, pctdistance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)</span>
<span id="cb23-4">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'국가별 니켈 총생산량 비중(2011~2023,  Refined)'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>Text(0.5, 1.0, '국가별 니켈 총생산량 비중(2011~2023,  Refined)')</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240621/index_files/figure-html/cell-18-output-2.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="분석-내용-및-분석-결과" class="level4">
<h4 class="anchored" data-anchor-id="분석-내용-및-분석-결과">분석 내용 및 분석 결과</h4>
<ul>
<li>작성시 참고사항 : 구체적인 내용을 자유롭게 기술하되, 세부적이고 구체적으로 작성</li>
</ul>
<section id="고려사항사용하고자-한-feature" class="level5">
<h5 class="anchored" data-anchor-id="고려사항사용하고자-한-feature">고려사항(사용하고자 한 Feature)</h5>
<ul>
<li>아래의 상황을 모델에 포함하여 고려하고자 하였습니다
<ul>
<li>생산국 수출량 : 광물의 특정 생산국 비중이 높은 점을 고려하여, 해당 국가의 광물 수출량의 이상탐지</li>
<li>수입국 수입량 : 광물을 수입하는 타 국가의 수입량 증감을 확인하여 이상탐지</li>
<li>생산국 판매액 : 주요 생산국의 대외 판매액을 기준으로 광물의 가격변동을 탐지
<ul>
<li>기준 : FOB가격(물류나 보험료를 제외한 순수 물품가격)을 판매량으로 나누어 kg당 가격 산출</li>
</ul></li>
<li>BDI(Baltic Dry Index) : 광물이 수입을 통해 조달된다는 점과, 광물운송은 벌크선을 통해 진행됨을 착안하여 물류문제에 대한 이상탐지 요소로 포함</li>
</ul></li>
</ul>
<div id="23243eb4" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb25-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> xlwings <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> xw</span>
<span id="cb25-3"></span>
<span id="cb25-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> filter_df(df:pd.DataFrame, from_country:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, export:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>, returnvalue:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, to_country:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb25-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb25-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        dataframe에서 특정 옵션 데이터를 필터링 하기 위한 함수</span></span>
<span id="cb25-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    '''</span></span>
<span id="cb25-8">    flowCode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> export <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'M'</span></span>
<span id="cb25-9">    filter_to_country <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'partnerDesc'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>to_country) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> to_country <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb25-10"></span>
<span id="cb25-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DataFrame복사</span></span>
<span id="cb25-12">    df_copy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[(df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reporterDesc'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>from_country) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> filter_to_country <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'flowCode'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>flowCode)].copy()</span>
<span id="cb25-13"></span>
<span id="cb25-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DataFrame전처리 : 날짜값 변환(str로변환, 연/월 분리)</span></span>
<span id="cb25-15">    df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period'</span>].astype(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'int'</span>).astype(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'str'</span>)</span>
<span id="cb25-16">    df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period_year'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb25-17">    df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period_month'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb25-18">    df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period_dateformat'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.to_datetime(df_copy[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'refPeriodId'</span>], <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y%m</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb25-19"></span>
<span id="cb25-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 반환 컬럼</span></span>
<span id="cb25-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> returnvalue <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb25-22">        df_copy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_copy[returnvalue]</span>
<span id="cb25-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb25-24">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb25-25"></span>
<span id="cb25-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df_copy</span>
<span id="cb25-27"></span>
<span id="cb25-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> preprocessing_kpi_uscomtrade(df:pd.DataFrame, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>):</span>
<span id="cb25-29">    df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'netWgt'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'primaryValue'</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'netWgt'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'primaryValue'</span>]].dropna()</span>
<span id="cb25-30"></span>
<span id="cb25-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출발국가에 따라 기준값 세팅</span></span>
<span id="cb25-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reporterDesc'</span>].unique() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'China'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Indonesia'</span>]:</span>
<span id="cb25-33">        criteria_wt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'netWgt'</span></span>
<span id="cb25-34">        criteria_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'primaryValue'</span></span>
<span id="cb25-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb25-36">        criteria_wt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'netWgt'</span></span>
<span id="cb25-37">        criteria_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'primaryValue'</span></span>
<span id="cb25-38"></span>
<span id="cb25-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기간(period출력)</span></span>
<span id="cb25-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#period = 'period'</span></span>
<span id="cb25-41">    period <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'period_dateformat'</span></span>
<span id="cb25-42"></span>
<span id="cb25-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 산출</span></span>
<span id="cb25-44">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Price'</span>:</span>
<span id="cb25-45">        df_return <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.groupby(period).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(numeric_only<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)[criteria_value] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> df.groupby(period).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(numeric_only<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)[criteria_wt]</span>
<span id="cb25-46">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ExportQty'</span>:</span>
<span id="cb25-47">        df_return <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.groupby(period).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(numeric_only<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)[criteria_wt]</span>
<span id="cb25-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ImportQty'</span>:</span>
<span id="cb25-49">        temp_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb25-50">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_country <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'partnerDesc'</span>].unique():</span>
<span id="cb25-51">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> each_country <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'World'</span>:</span>
<span id="cb25-52">                temp_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'partnerDesc'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>each_country]</span>
<span id="cb25-53">                temp_dict[each_country] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp_df.groupby(period).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(numeric_only<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'netWgt'</span>]</span>
<span id="cb25-54">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> temp_dict</span>
<span id="cb25-55">    </span>
<span id="cb25-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df_return</span></code></pre></div>
</div>
</section>
<section id="지표별-데이터-전처리null제거-및-기준별-groupby-및-계산처리" class="level5">
<h5 class="anchored" data-anchor-id="지표별-데이터-전처리null제거-및-기준별-groupby-및-계산처리">지표별 데이터 전처리(Null제거 및 기준별 Groupby 및 계산처리)</h5>
<ul>
<li>중국과 인도네시아의 수출가격(니켈)</li>
<li>중국과 인도네시아의 수출량(니켈)</li>
<li>국가별 수입량(니켈)</li>
</ul>
<div id="eed2c811" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">wb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xw.Book(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Z:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">GoogleDrive</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">공공데이터 활용 아이디어 공모전</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">282540,283324_merged.csv'</span>)</span>
<span id="cb26-2">sht <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> wb.sheets[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb26-3">range_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sht.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'A2:BL'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(sht.used_range.last_cell.row))</span>
<span id="cb26-4">df_un_nickel_all <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sht.used_range.options(pd.DataFrame,index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).value</span>
<span id="cb26-5">wb.close()</span>
<span id="cb26-6"></span>
<span id="cb26-7">df_un_nickel_all</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">typeCode</th>
<th data-quarto-table-cell-role="th">freqCode</th>
<th data-quarto-table-cell-role="th">refPeriodId</th>
<th data-quarto-table-cell-role="th">refYear</th>
<th data-quarto-table-cell-role="th">refMonth</th>
<th data-quarto-table-cell-role="th">period</th>
<th data-quarto-table-cell-role="th">reporterCode</th>
<th data-quarto-table-cell-role="th">reporterISO</th>
<th data-quarto-table-cell-role="th">reporterDesc</th>
<th data-quarto-table-cell-role="th">flowCode</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">netWgt</th>
<th data-quarto-table-cell-role="th">isNetWgtEstimated</th>
<th data-quarto-table-cell-role="th">grossWgt</th>
<th data-quarto-table-cell-role="th">isGrossWgtEstimated</th>
<th data-quarto-table-cell-role="th">cifvalue</th>
<th data-quarto-table-cell-role="th">fobvalue</th>
<th data-quarto-table-cell-role="th">primaryValue</th>
<th data-quarto-table-cell-role="th">legacyEstimationFlag</th>
<th data-quarto-table-cell-role="th">isReported</th>
<th data-quarto-table-cell-role="th">isAggregate</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>C</td>
<td>M</td>
<td>20110101.0</td>
<td>2011.0</td>
<td>1.0</td>
<td>201101.0</td>
<td>32.0</td>
<td>ARG</td>
<td>Argentina</td>
<td>M</td>
<td>...</td>
<td>1500.000</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>4.060111e+04</td>
<td>0.000</td>
<td>4.060111e+04</td>
<td>0.0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>C</td>
<td>M</td>
<td>20110101.0</td>
<td>2011.0</td>
<td>1.0</td>
<td>201101.0</td>
<td>36.0</td>
<td>AUS</td>
<td>Australia</td>
<td>M</td>
<td>...</td>
<td>120.000</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>1.844344e+04</td>
<td>0.000</td>
<td>1.844344e+04</td>
<td>0.0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>C</td>
<td>M</td>
<td>20110101.0</td>
<td>2011.0</td>
<td>1.0</td>
<td>201101.0</td>
<td>36.0</td>
<td>AUS</td>
<td>Australia</td>
<td>X</td>
<td>...</td>
<td>12000.000</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>0.000000e+00</td>
<td>11942.675</td>
<td>1.194267e+04</td>
<td>0.0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>C</td>
<td>M</td>
<td>20110101.0</td>
<td>2011.0</td>
<td>1.0</td>
<td>201101.0</td>
<td>40.0</td>
<td>AUT</td>
<td>Austria</td>
<td>M</td>
<td>...</td>
<td>0.000</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>5.477600e+02</td>
<td>0.000</td>
<td>5.477600e+02</td>
<td>0.0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>C</td>
<td>M</td>
<td>20110101.0</td>
<td>2011.0</td>
<td>1.0</td>
<td>201101.0</td>
<td>56.0</td>
<td>BEL</td>
<td>Belgium</td>
<td>M</td>
<td>...</td>
<td>6609.260</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>1.813610e+05</td>
<td>0.000</td>
<td>1.813610e+05</td>
<td>0.0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">105246</td>
<td>C</td>
<td>M</td>
<td>20240401.0</td>
<td>2024.0</td>
<td>4.0</td>
<td>202404.0</td>
<td>392.0</td>
<td>JPN</td>
<td>Japan</td>
<td>X</td>
<td>...</td>
<td>90547.000</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>NaN</td>
<td>294094.768</td>
<td>2.940948e+05</td>
<td>0.0</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">105247</td>
<td>C</td>
<td>M</td>
<td>20240401.0</td>
<td>2024.0</td>
<td>4.0</td>
<td>202404.0</td>
<td>376.0</td>
<td>ISR</td>
<td>Israel</td>
<td>M</td>
<td>...</td>
<td>3178.379</td>
<td>True</td>
<td>0.0</td>
<td>False</td>
<td>1.800000e+04</td>
<td>NaN</td>
<td>1.800000e+04</td>
<td>6.0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">105248</td>
<td>C</td>
<td>M</td>
<td>20240401.0</td>
<td>2024.0</td>
<td>4.0</td>
<td>202404.0</td>
<td>376.0</td>
<td>ISR</td>
<td>Israel</td>
<td>M</td>
<td>...</td>
<td>529.730</td>
<td>True</td>
<td>0.0</td>
<td>False</td>
<td>3.000000e+03</td>
<td>NaN</td>
<td>3.000000e+03</td>
<td>6.0</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">105249</td>
<td>C</td>
<td>M</td>
<td>20240401.0</td>
<td>2024.0</td>
<td>4.0</td>
<td>202404.0</td>
<td>376.0</td>
<td>ISR</td>
<td>Israel</td>
<td>M</td>
<td>...</td>
<td>2648.649</td>
<td>True</td>
<td>0.0</td>
<td>False</td>
<td>1.500000e+04</td>
<td>NaN</td>
<td>1.500000e+04</td>
<td>6.0</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">105250</td>
<td>C</td>
<td>M</td>
<td>20240401.0</td>
<td>2024.0</td>
<td>4.0</td>
<td>202404.0</td>
<td>392.0</td>
<td>JPN</td>
<td>Japan</td>
<td>M</td>
<td>...</td>
<td>2502000.000</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>1.017666e+07</td>
<td>NaN</td>
<td>1.017666e+07</td>
<td>0.0</td>
<td>False</td>
<td>True</td>
</tr>
</tbody>
</table>

<p>105251 rows × 47 columns</p>
</div>
</div>
</div>
<div id="7ac8e90c" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 인도네시아의 수출가격, 수출량, 수입량</span></span>
<span id="cb27-2">price_indonesia_raw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> filter_df(df<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_un_nickel_all, from_country<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Indonesia'</span>, to_country<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, export<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, returnvalue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb27-3"></span>
<span id="cb27-4">price_indonesia <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocessing_kpi_uscomtrade(price_indonesia_raw, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Price'</span>)</span>
<span id="cb27-5">export_qty_indonesia <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocessing_kpi_uscomtrade(price_indonesia_raw, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ExportQty'</span>)</span>
<span id="cb27-6">import_qty_from_indonesia <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocessing_kpi_uscomtrade(price_indonesia_raw, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ImportQty'</span>)</span></code></pre></div>
</div>
<div id="48e91fe9" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 중국의 수출가격, 수출량, 수입량</span></span>
<span id="cb28-2">price_china_raw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> filter_df(df<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_un_nickel_all, from_country<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'China'</span>, to_country<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, export<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, returnvalue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb28-3"></span>
<span id="cb28-4">price_china <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocessing_kpi_uscomtrade(price_china_raw, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Price'</span>)</span>
<span id="cb28-5">export_qty_china <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  preprocessing_kpi_uscomtrade(price_china_raw, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ExportQty'</span>)</span>
<span id="cb28-6">import_qty_from_china <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocessing_kpi_uscomtrade(price_china_raw, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ImportQty'</span>)</span></code></pre></div>
</div>
</section>
<section id="각-지표에-대해-예측수행" class="level5">
<h5 class="anchored" data-anchor-id="각-지표에-대해-예측수행">각 지표에 대해 예측수행</h5>
<ul>
<li><p>Exponential smoothing으로 예측</p>
<ul>
<li>타 팀원의 LSTM활용한 모델 등을 활용할 것으로 예상</li>
</ul></li>
<li><p>데이터를 시각화하여 계절성 등을 먼저 확인하고자 함</p></li>
<li><p>데이터 확인용 시각화</p></li>
</ul>
<div id="0b6332e6" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb29-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb29-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> koreanize_matplotlib</span></code></pre></div>
</div>
<div id="05c39b4d" class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span>
<span id="cb30-2">datasource <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(price_china)</span>
<span id="cb30-3"></span>
<span id="cb30-4">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb30-5">plt.xticks(rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>)</span>
<span id="cb30-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#plt.gca().set_xticks(datasource.index)</span></span>
<span id="cb30-7">sns.lineplot(datasource)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240621/index_files/figure-html/cell-24-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>Exponential Smoothing모델로 예측</li>
</ul>
<div id="0e3e4ec4" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ExponentialSmoothing 모델 활용</span></span>
<span id="cb31-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.tsa.holtwinters <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ExponentialSmoothing</span>
<span id="cb31-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb31-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dateutil.relativedelta <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> relativedelta</span>
<span id="cb31-5"></span>
<span id="cb31-6">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> price_china</span>
<span id="cb31-7"></span>
<span id="cb31-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> predict_exponential(df:pd.DataFrame, month_to_expect:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>):</span>
<span id="cb31-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 학습</span></span>
<span id="cb31-10">    model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ExponentialSmoothing(df.values, trend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'add'</span>, seasonal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'add'</span>, seasonal_periods<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb31-11">    fit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit()</span>
<span id="cb31-12"></span>
<span id="cb31-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예측 수행 (12개월)</span></span>
<span id="cb31-14">    forecast <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fit.forecast(steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>month_to_expect)</span>
<span id="cb31-15"></span>
<span id="cb31-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 날짜배열 생성</span></span>
<span id="cb31-17">    months<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb31-18">    start_month <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(df.index)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> relativedelta(months<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb31-19">    end_month <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(df.index) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> relativedelta(months<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>month_to_expect)</span>
<span id="cb31-20">    current_month <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> start_month</span>
<span id="cb31-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> current_month <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> end_month:</span>
<span id="cb31-22">        months.append(current_month)</span>
<span id="cb31-23">        current_month <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> relativedelta(months<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb31-24"></span>
<span id="cb31-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 날짜+예측값 Series 생성</span></span>
<span id="cb31-26">    forecast <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>forecast, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>months)</span>
<span id="cb31-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> forecast</span>
<span id="cb31-28"></span>
<span id="cb31-29">forecast <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> predict_exponential(df<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>price_china, month_to_expect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb31-30">forecast</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<pre><code>2024-01-01    14.324603
2024-02-01    15.397100
2024-03-01    14.578083
2024-04-01    14.589412
2024-05-01    15.382925
2024-06-01    15.244014
2024-07-01    15.578931
2024-08-01    15.535253
2024-09-01    15.241216
2024-10-01    15.326029
2024-11-01    15.416176
2024-12-01    15.462405
dtype: float64</code></pre>
</div>
</div>
<div id="0466d76d" class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예측 결과 시각화</span></span>
<span id="cb33-2">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb33-3">plt.plot(df.index, df.values, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'실제 데이터'</span>)</span>
<span id="cb33-4">plt.plot(forecast.index, forecast, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'예측 데이터'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>)</span>
<span id="cb33-5">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'날짜'</span>)</span>
<span id="cb33-6">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'수급안정화지수'</span>)</span>
<span id="cb33-7">plt.legend()</span>
<span id="cb33-8">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240621/index_files/figure-html/cell-26-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="예측값을-데이터에-추가" class="level5">
<h5 class="anchored" data-anchor-id="예측값을-데이터에-추가">예측값을 데이터에 추가</h5>
<div id="ac6b17a5" class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">price_china_plus_forecast <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([price_china, forecast])</span>
<span id="cb34-2">price_indonesia_plus_forecast <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([price_indonesia, forecast])</span></code></pre></div>
</div>
</section>
<section id="각-지표에-대해-이상탐지-r-abnomality-패키지-활용" class="level5">
<h5 class="anchored" data-anchor-id="각-지표에-대해-이상탐지-r-abnomality-패키지-활용">각 지표에 대해 이상탐지 (R Abnomality 패키지 활용)</h5>
<ul>
<li><p>중국과 인도네시아의 수출가격(니켈) : 기간별 가격(예측치 포함)에 대한 이상탐지</p></li>
<li><p>중국과 인도네시아의 수출량(니켈) : 기간별 수출량(예측치 포함)에 대한 이상탐지</p></li>
<li><p>국가별 수입량(니켈) : 국가별 수입량(예측치 포함)에 대한 이상탐지</p></li>
<li><p>수급안정화지수 : 예측치에 대한 이상탐지</p></li>
<li><p>BDI : 예측치에 대한 이상탐지</p></li>
<li><p>RStudio 등 설치했으나 구동문제가 있어, 팀원 상의 후에도 이 모델을 사용하는 경우 조치 예정</p></li>
</ul>
</section>
<section id="이상탐지-결과-취합-및-위기요소-판단" class="level5">
<h5 class="anchored" data-anchor-id="이상탐지-결과-취합-및-위기요소-판단">이상탐지 결과 취합 및 위기요소 판단</h5>
<ul>
<li>각 지표에 대해 아래와 같은 평가점수를 부여
<ul>
<li>이상없음 0 / 이상탐지 1</li>
</ul></li>
<li>이상 탐지된 지표 수에 따라 구간별 위기상황 부여 (0정상 1경계 2주의 3위기 등)</li>
</ul>
</section>
</section>
<section id="활용데이터" class="level4">
<h4 class="anchored" data-anchor-id="활용데이터">활용데이터</h4>
<ul>
<li>분석 대상이 되는 데이터와 이에 대한 항목을 모두 작성
<ul>
<li>공공데이터포털 수급안정화 지수</li>
</ul></li>
<li>외부 데이터를 활용하였다면 그에 대한 세부적인 내용 기재 및 활용 이유 제시
<ul>
<li>Investing.com BDI지수</li>
<li>UN Comtrade 수출입현황</li>
</ul></li>
</ul>


</section>
</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>공모전</category>
  <category>공공데이터</category>
  <category>분석</category>
  <guid>https://kr9268.github.io/posts/dtcontest-ore-20240621/</guid>
  <pubDate>Fri, 21 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[M_Study_4주차] Convolutional Neural Network</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/meta-dl-creditcard-20240616/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>참여중인 딥러닝 스터디 4주차 기록입니다.</p>
</section>
<section id="주차-과제-설명mnist-설명" class="level2">
<h2 class="anchored" data-anchor-id="주차-과제-설명mnist-설명">3주차 과제 설명(MNIST 설명)</h2>
<ul>
<li><p>Binary(Hypothesis : Sigmoid, CrossEntropy : Y, 1-Y) <br> → Multiclass(Hypothesis : Softmax, CrossEntropy : <img src="https://latex.codecogs.com/png.latex?Y_1">, <img src="https://latex.codecogs.com/png.latex?Y_2">…)</p></li>
<li><p>MNIST</p>
<ul>
<li>데이터사이언스, 딥러닝에서의 기초(코딩의 Hello world와 같음)</li>
<li>사람들의 손글씨 데이터를 모아둔 유명한 데이터 셋</li>
</ul>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tensorflow MNIST로딩 샘플코드</span></span>
<span id="cb1-2">  <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> mnist</span>
<span id="cb1-3"></span>
<span id="cb1-4">  (x_train, y_train), (x_test, y_test) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mnist.load_data()</span>
<span id="cb1-5">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x_train.shape, y_train.shape, y_train[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb1-6"></span>
<span id="cb1-7">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>) (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60000</span>,) <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> </span>
<span id="cb1-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 6만건의 28*28형태의 데이터 (x_train.shape), 6만건의 0차원 형태 데이터(y_train.shape), 0번째 y_train 정답값(5)</span></span></code></pre></div></li>
</ul>
</section>
<section id="주차-과제-설명mnist의-softmax구현" class="level2">
<h2 class="anchored" data-anchor-id="주차-과제-설명mnist의-softmax구현">3주차 과제 설명(MNIST의 Softmax구현)</h2>
<ul>
<li>MNIST의 Softmax구현
<ul>
<li><p>reshape을 사용하는 이유</p>
<ul>
<li>모델에 통과시키기 위해 행렬을 flatten(28*28 → 784*1)한 후, 다시 Visualize할 때 사용</li>
</ul>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">  img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_train[i].reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>)</span>
<span id="cb2-2">  plt.imshow(img, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.cm.binary)</span></code></pre></div></li>
<li><p>Hyper parameter</p>
<ul>
<li>Parameter : W와 b와 같은 학습을 통해 최적화하는 값</li>
<li>Hyper parameter : 모델의 선택(Linear vs Logistic regression), learning_rate, epoch, class(몇개로 나눌지), feature(input data) 등</li>
</ul>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MNIST dataset parameters</span></span>
<span id="cb3-2">  num_classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb3-3">  num_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 784</span></span>
<span id="cb3-4"></span>
<span id="cb3-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Training parameters</span></span>
<span id="cb3-6">  learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb3-7">  steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb3-8">  batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span></span></code></pre></div></li>
<li><p>np.array : list형태의 train data를 수학적 연산에 유리한 numpy로 변환하기 위해 사용</p>
<ul>
<li>권장하는 코딩습관 : 아래와 같이 데이터타입을 명시 (안적어도 float32로 기본지정되긴 함)
<ul>
<li>np.array(x_train) → np.array(x_train, np.float32)</li>
</ul>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">x_train, x_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(x_train, np.float32), np.array(x_test, np.float32)</span></code></pre></div></li>
</ul></li>
<li><p>구조변경(flatten)</p>
<ul>
<li>reshape([-1, num_features]) : flatten 구현
<ul>
<li>784 data에 reshape([-1, 28]) : reshape의 -1 부분은 28이 됨</li>
<li>784 data에 reshape([-1, 784]) : reshape의 -1 부분은 1이 됨</li>
</ul>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># data 구조를 통일</span></span>
<span id="cb5-2">x_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_train.reshape([<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, num_features])</span>
<span id="cb5-3">x_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_test.reshape([<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, num_features])</span>
<span id="cb5-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x_train.shape, x_test.shape)</span>
<span id="cb5-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">784</span>) (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">784</span>)</span></code></pre></div></li>
</ul></li>
<li><p>데이터 전처리(Normalize, Zero-centering)</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">  x_train, x_test  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.</span> , x_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Normalizd</span></span>
<span id="cb6-2">  x_train, x_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x_train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.mean(x_train)), (x_test<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>np.mean(x_test)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Zero-Centering</span></span></code></pre></div></li>
<li><p>Variable 설정</p>
<ul>
<li>W와 b의 Shape은 결정해주어야 함 (W의 차원파악 중요)
<ul>
<li>W : input dimesion, output dimesion</li>
<li>b : number of classes(output dimesion)</li>
</ul>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">  W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.Variable(tf.ones([num_features, num_classes]), name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'weight'</span>)</span>
<span id="cb7-2">  b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.Variable(tf.zeros([num_classes]), name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bias'</span>)</span></code></pre></div></li>
</ul></li>
<li><p>Hypothesis와 평가방법(accuracy) 등 설정</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> softmax(x):</span>
<span id="cb8-2">    z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.matmul(x, W) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="cb8-3">    sm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.nn.softmax(z)</span>
<span id="cb8-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> sm</span>
<span id="cb8-5"></span>
<span id="cb8-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> cross_entropy(y_pred, y_true):</span>
<span id="cb8-7">    y_true <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.one_hot(y_true, depth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_classes)</span>
<span id="cb8-8">    y_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.clip_by_value(y_pred, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>)</span>
<span id="cb8-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> tf.reduce_mean(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>tf.reduce_sum(y_true <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> tf.math.log(y_pred), axis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb8-10"></span>
<span id="cb8-11">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> accuracy(y_pred, y_true):</span>
<span id="cb8-12">    correct_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.equal(tf.argmax(y_pred, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), tf.cast(y_true, tf.int64))</span>
<span id="cb8-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> tf.reduce_mean(tf.cast(correct_prediction, tf.float32))</span></code></pre></div></li>
<li><p>Optimizer</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">  optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.optimizers.SGD(learning_rate)</span>
<span id="cb9-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> run_optimization(x,y):</span>
<span id="cb9-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tape:</span>
<span id="cb9-4">      pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> softmax(x)</span>
<span id="cb9-5">      loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cross_entropy(pred, y)</span>
<span id="cb9-6"></span>
<span id="cb9-7">    gradients <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tape.gradient(loss, [W,b])</span>
<span id="cb9-8"></span>
<span id="cb9-9">    optimizer.apply_gradients(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(gradients, [W,b]))</span></code></pre></div></li>
<li><p>Batch size구현</p>
<ul>
<li><p>아래 코드는 기초적 구현이며, 중복제거나 차례대로 진행되는 기능 등도 있음</p>
<ul>
<li>왜? 데이터가 시점 등에 따라 패턴이 있을 수 있다
<ul>
<li>100개의 데이터를 10등분했을 때, 각 데이터마다 패턴이 있을 수 있음</li>
<li>편향되지 않게 섞는 것이 batch_size의 기본적 컨셉 ```python n_train = x_train.shape[0] # 60000 n_test = x_test.shape[0] # 10000</li>
</ul></li>
</ul>
<p>def train_batch_maker(batch_size): random_idx = np.random.randint(n_train, size = batch_size) # (batch_size,) vector return x_train[random_idx], y_train[random_idx] # (batch_size, 28*28)</p>
<p>def test_batch_maker(batch_size): random_idx = np.random.randint(n_test, size = batch_size) # (batch_size,) vector return x_test[random_idx], y_test[random_idx] # (batch_size, 28*28) ```</p></li>
</ul></li>
<li><p>학습 및 Test</p></li>
</ul>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> step <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(steps):</span>
<span id="cb10-2">  batch_x, batch_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_batch_maker(batch_size)</span>
<span id="cb10-3"></span>
<span id="cb10-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the optimization to update W and b values</span></span>
<span id="cb10-5">  run_optimization(batch_x, batch_y)</span>
<span id="cb10-6"></span>
<span id="cb10-7">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb10-8">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> softmax(batch_x)</span>
<span id="cb10-9">    loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cross_entropy(pred, batch_y)</span>
<span id="cb10-10">    acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy(pred, batch_y)</span>
<span id="cb10-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"step: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>step<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> loss: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>loss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> accuracy: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>acc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb10-12"></span>
<span id="cb10-13">  pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> softmax(x_test)</span>
<span id="cb10-14">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Test Accuracy: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>accuracy(pred, y_test)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb10-15">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> Test Accuracy: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8712000250816345</span></span>
<span id="cb10-16"></span>
<span id="cb10-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Predict 5 images from validaton set.</span></span>
<span id="cb10-18">  num_images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb10-19">  test_images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_test[:num_images]</span>
<span id="cb10-20">  predictions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> softmax(test_images)</span>
<span id="cb10-21"></span>
<span id="cb10-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualize image and model predcition</span></span>
<span id="cb10-23">  plt.figure(figsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb10-24">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(num_images):</span>
<span id="cb10-25">    plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, num_images, i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb10-26">    plt.imshow(np.reshape(test_images[i], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>]), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.cm.binary)</span>
<span id="cb10-27">    plt.xlabel(np.argmax(predictions.numpy()[i]))</span>
<span id="cb10-28"></span>
<span id="cb10-29">  plt.show()</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240616/index_files/figure-html/8027d92f-1-image.png" class="img-fluid figure-img"></p>
<figcaption>image.png</figcaption>
</figure>
</div></li>
</ul>
</section>
<section id="주차-과제-설명mnist의-neural-network구현" class="level2">
<h2 class="anchored" data-anchor-id="주차-과제-설명mnist의-neural-network구현">3주차 과제 설명(MNIST의 Neural Network구현)</h2>
<ul>
<li>MNIST의 Neural Network구현(기초)
<ul>
<li>Sequential : Python의 list 선언과 유사함
<ul>
<li>아래 코드의 경우, 사실상 Hidden layer가 없는 단층 Perceptron</li>
<li>GPT의 경우 하단 모델표에서 Total params가 엄청 많음</li>
</ul>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">  <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Sequential</span>
<span id="cb11-2">  <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.layers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dense</span>
<span id="cb11-3"></span>
<span id="cb11-4">  model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Sequential()</span>
<span id="cb11-5">  model.add(Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigmoid"</span>, input_dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># neuron=2, input_dim=2</span></span>
<span id="cb11-6">  model.add(Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigmoid"</span>))              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output_dim = 1</span></span>
<span id="cb11-7">  model.summary()</span>
<span id="cb11-8"></span>
<span id="cb11-9">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span>Model: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sequential"</span></span>
<span id="cb11-10">    _________________________________________________________________</span>
<span id="cb11-11">    Layer (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>)                Output Shape              Param <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   </span></span>
<span id="cb11-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=================================================================</span></span>
<span id="cb11-13">    dense (Dense)               (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>         </span>
<span id="cb11-14"></span>
<span id="cb11-15">    dense_1 (Dense)             (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>         </span>
<span id="cb11-16"></span>
<span id="cb11-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=================================================================</span></span>
<span id="cb11-18">    Total params: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">36.00</span> Byte)</span>
<span id="cb11-19">    Trainable params: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">36.00</span> Byte)</span>
<span id="cb11-20">    Non<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>trainable params: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.00</span> Byte)</span>
<span id="cb11-21">    _________________________________________________________________</span></code></pre></div>
<ul>
<li>라이브러리를 활용하여 아래와 같이 코드가 간단해짐 (verbose을 0이 아닌값 지정시 진행상태 확인가능)</li>
</ul>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">  model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SGD"</span>,</span>
<span id="cb12-2">                loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'binary_crossentropy'</span>,</span>
<span id="cb12-3">                metrics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>])</span>
<span id="cb12-4"></span>
<span id="cb12-5">  history <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit(x_data, y_data, epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<ul>
<li>모델평가
<ul>
<li>아래와 같이 acc가 낮은 이유는, XOR문제처럼 현재와 같은 단층레이어로는 해결이 어렵기 때문</li>
</ul>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">loss, train_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.evaluate(x_data, y_data, verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb13-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"train_acc = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>train_acc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"loss = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>loss<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-4">predict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(x_data)</span>
<span id="cb13-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(predict)</span>
<span id="cb13-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span>train_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb13-7">  loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6908708810806274</span></span></code></pre></div></li>
</ul></li>
</ul></li>
<li>MNIST의 Neural Network구현(ANN, 인공신경망 Artificial Neural Network)
<ul>
<li>Dense(10, activation = “sigmoid”) : 뉴런이 10개이며 활성화함수가 Sigmoid</li>
<li>Dense(1, activation = “softmax”) : 활성화 함수로 Softmax 사용</li>
<li><strong>중요 포인트</strong>
<ul>
<li>input data의 shape와 일치시키기</li>
<li>output activation은 내가 풀고자 하는 문제에 맞춰 잘 지정해야함
<ul>
<li>Multi-class인데 Sigmoid를 사용한다면 돌아가지 않을 것임 ```python from tensorflow.keras.layers import Flatten</li>
</ul></li>
</ul>
model = Sequential() model.add(Flatten(input_shape=(28,28))) model.add(Dense(10, activation = “sigmoid”)) model.add(Dense(10, activation = “sigmoid”)) model.add(Dense(1, activation = “softmax”)) model.summary() ```</li>
<li>하단 모델표의 dense_2 (Dense)의 Param #의 의미
<ul>
<li>784*10 + 10(bias) : fully-connected layer</li>
</ul>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">Model: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sequential_1"</span></span>
<span id="cb14-2">_________________________________________________________________</span>
<span id="cb14-3">Layer (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>)                Output Shape              Param <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   </span></span>
<span id="cb14-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=================================================================</span></span>
<span id="cb14-5">flatten (Flatten)           (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">784</span>)               <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>         </span>
<span id="cb14-6"></span>
<span id="cb14-7">dense_2 (Dense)             (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)                <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7850</span>      </span>
<span id="cb14-8"></span>
<span id="cb14-9">dense_3 (Dense)             (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)                <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">110</span>       </span>
<span id="cb14-10"></span>
<span id="cb14-11">dense_4 (Dense)             (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)                 <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>        </span>
<span id="cb14-12"></span>
<span id="cb14-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=================================================================</span></span>
<span id="cb14-14">Total params: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7971</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">31.14</span> KB)</span>
<span id="cb14-15">Trainable params: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7971</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">31.14</span> KB)</span>
<span id="cb14-16">Non<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>trainable params: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.00</span> Byte)</span></code></pre></div></li>
</ul></li>
<li>Neural Network를 잘 사용하려면
<ul>
<li>하이퍼 파라미터 튜닝 : Activation fuction 어떤 것, 뉴런/레이어 갯수 등 설정
<ul>
<li>일반적으로 괜찮다고 알려진 값으로 지정해야 모델성능이 쓸만해짐</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="주차-정리" class="level2">
<h2 class="anchored" data-anchor-id="주차-정리">4주차 정리</h2>
<section id="deep-neural-network-convolution-nn" class="level3">
<h3 class="anchored" data-anchor-id="deep-neural-network-convolution-nn">Deep Neural Network (Convolution NN)</h3>
<ul>
<li>딥러닝은 비선형적 관계를 잘 묘사함
<ul>
<li>과거에는 숫자데이터(금리, 고용률 등)만 다룰 수 있었음</li>
<li>이미지 등 비정형데이터를 잘 다룰 수 있게됨</li>
</ul></li>
<li>CNN(Convolutional Neural Network)
<ul>
<li><p>이미지를 분류, 처리하는 기술</p>
<ul>
<li>분류(Classification) : 대상이 어디에 속하는지 분류</li>
<li>식별(Detection) : 사진에서의 어떤 객체를 분류하고, 그 객체가 어디에 속하는지 분류</li>
<li>이러한 분류와 식별을 응용하여 자율주행 자동차, 얼굴인식App 등 구현 가능 (CNN Architecture영향을 받아 발전)<br>
</li>
</ul></li>
<li><p>CNN의 구성</p>
<ul>
<li>특성추출(feature learning)
<ul>
<li>사진은 많은 정보를 포함해 계산량이 너무 많아지므로, 특성추출을 통해 압축이 필요함</li>
<li>CNN은 모델이 이런 정보에서 어느 부분이 중요한지 찾게 만듦</li>
<li><strong>특성추출로 압축된 정보를 Neural Network에 넣어, 원본사진 넣은 것과 동일한 것처럼, 빠르고 가볍게 돌아감</strong><br> (예를 들어 자율주행에 활용하기 위해서는 짧은 시간에 처리해야함)</li>
<li>Convolution alyer(정보압축) / Pooling layer(정보버림) 등의 반복</li>
</ul></li>
<li>Classification
<ul>
<li>Flatten / Fully-connected / Softmax 등 3주차까지 배운 내용</li>
</ul></li>
</ul></li>
<li><p>Convolution layer</p>
<ul>
<li>Source(X)에 Kernel(W)행렬을 곱해 Result(Y)를 만드는것과 같음
<ul>
<li>원본이미지(Source)의 손실을 최소화하며 잘 압축하는 좋은Kernel값을 찾고자 함</li>
<li>아다마르곱 활용 : 매칭되는 칸의 숫자끼리 곱하여 더함<br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240616/index_files/figure-html/00653178-1-image-4.png" class="img-fluid" alt="image-4.png"></li>
</ul></li>
<li>Convolution layer를 통과해 (28,28)이 (14,14)가 되어도 특징 식별 가능
<ul>
<li>CNN은, 마스크 쓴 사람의 일부 얼굴 특징만으로 사람을 판단하는 것과 같은 방법을 차용</li>
</ul></li>
<li>CNN이 잘 작동하기 위한 가정
<ul>
<li>Spatial Locality : 사진의 일부만 봐도 식별이 가능하다</li>
<li>Positional invariance : 이미지에서 사과 등 객체가 어디에 있던 사과임
<ul>
<li>예외 상황 : 엑스레이의 흰색이 위치에 따라 심장, 간 등 다름</li>
</ul></li>
</ul></li>
</ul></li>
<li><p>Convolution layer 추가설명</p>
<ul>
<li>image(32,32,3)를 filter(3,3,3)가 움직이며 아다마르곱으로 처리
<ul>
<li>kernel과 filter는 동일한 의미로 사용 <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240616/index_files/figure-html/00653178-2-image-5.png" class="img-fluid" alt="image-5.png"></li>
<li>(32X32X3)image에 (5X5X3)filter 적용시 output은 (28X28X1)
<ul>
<li>output은 activation map임(매핑을 했다는 것)</li>
</ul></li>
<li>(32X32X3)image에 (5X5X3)filter 4개를 적용하는 이유? <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240616/index_files/figure-html/00653178-3-image-6.png" class="img-fluid" alt="image-6.png">
<ul>
<li>필터가 필요했던 이유는 정보 압축 → 정보가 작아지며 손실 발생 (코끼리의 일부만을 보는 것과 같음)</li>
<li>각 부분의 정보(4개의 filter)를 모두 모아서 정확히 알 수 있음 (4개의 filter라는 서로 다른 각도에서 본 코끼리를 합쳐서 보게되는 것)</li>
</ul></li>
</ul></li>
</ul></li>
<li><p>Nested Conv-layers(Convolution layer에 대한 문제)</p>
<ul>
<li>Layer를 여러번 통과하여 너무 작아지는 문제(get smaller quickly) + 4k와 같은 큰 데이터의 계산량 문제</li>
<li>이러한 문제를 방지하기 위해 stride와 padding이라는 parameter를 추가</li>
</ul></li>
<li><p>Stride</p>
<ul>
<li>(Input - Filter) / stride + 1
<ul>
<li>(7x7)image에 (3X3)filter, stride 1 → (7-3)/1 + 1 = (5X5)</li>
<li>(7x7)image에 (3X3)filter, stride 2 → (7-3)/2 + 1 = (3X3)</li>
<li>(7x7)image에 (3X3)filter, stride 3 → (7-3)/3 + 1 = (2.33X2.33)
<ul>
<li>output 소수인 것은 불가, padding(가장 자리에 0을 붙여줌)을 사용</li>
</ul></li>
</ul></li>
<li><strong>(Input - Filter + 2 <img src="https://latex.codecogs.com/png.latex?*"> Padding) / stride + 1</strong>
<ul>
<li>Padding을 2배하는 이유는 양쪽 테두리에 각 1개씩 추가되기 때문</li>
</ul></li>
</ul></li>
<li><p>예시</p>
<ul>
<li>Input (32x32x3) / 10 Filter(5X5) / stride 1, pad 2
<ul>
<li>Output size(=32X32X10) : (32-5+2*2)/1 + 1 → (32X32) → 10개의 필터</li>
<li>Number of Parameter(=760) : (Filter (5X5) * Input의 차원 3 + Bias 1) → (5<em>5</em>3+1) → 필터 10개 → (5<em>5</em>3+1) * 10</li>
<li>Number of Parameter if fully-connected(=31,467,520) : (32<em>32</em>10)<em>(32</em>32*3_1)
<ul>
<li>Fully-connected로 31,467,520개 파라미터가 필요했다면, CNN으로 760개 파라미터로 가능해짐</li>
</ul></li>
</ul></li>
</ul></li>
<li><p>관례적으로 filter size는 정사각형이지만 직사각형도 가능하다</p></li>
<li><p>Pooling Layer : 쓸모없는 정보를 버림</p>
<ul>
<li>Pooling Layer의 종류
<ul>
<li>Max pooling : 제일 큰 수만 가져옴</li>
<li>Average pooling : 평균 가져옴</li>
<li>Parameters 0개 (숫자를 찾는게 아닌 버림. 학습이 일어나지 않음)</li>
</ul></li>
<li>Pooling Layer의 특징
<ul>
<li>파라미터수가 0 (학습이 일어나지 않는다, Kernel[Filter]처럼 좋은 숫자를 찾는 작업이 없기 때문)</li>
</ul></li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="final-project-설명" class="level3">
<h3 class="anchored" data-anchor-id="final-project-설명">Final project 설명</h3>
<ul>
<li><p>28만건의 신용카드 데이터로 만들기</p></li>
<li><p>금융데이터는 privacy이슈가 있어 공개시 익명화되어있음</p>
<ul>
<li>단위가 다르면 연봉, 자산 여부를 역추적할 수 있어, PCA를 통해 익명화 가능
<ul>
<li>PCA : 데이터 익명화기법은 아니고 처리기법</li>
<li>V1, V2와 같은 세상에 존재하지 않는 축으로 변환하기때문에 익명화에 좋다</li>
<li>원래는 상관관계를 0이 되게만드는 테크닉</li>
</ul></li>
</ul></li>
<li><p>Missing value 처리</p>
<ul>
<li>평균,최빈,중앙 값 중 프로젝트에 가장 적합한 값 사용하여 대치</li>
</ul></li>
<li><p>상관관계 파악 (Heatmap 분석)</p>
<ul>
<li>과제의 금융데이터는 PCA로 인해 상관관계가 이미 사라져있음</li>
</ul></li>
<li><p>데이터의 구조 파악</p>
<ul>
<li>class : 0정상 1이상거래 (0.17%만이 이상거래 → 모델평가시 고려)</li>
</ul></li>
<li><p>불필요한 컬럼 삭제</p></li>
<li><p>Target이 합쳐져있는 원본데이터이므로 X, Y로 나누는 작업 필요</p></li>
<li><p>모델 평가</p>
<ul>
<li>99프로가 정상거래인데 99프로 정상임을 맞췄다면, 단순히 모델이 좋다고 보기 어려움
<ul>
<li>Precision, Recall, F1-Score → 이상거래를 몇건 맞췄는지 볼 수 있음</li>
</ul></li>
</ul></li>
<li><p>평가지표는 f1-score를 사용 예정</p>
<ul>
<li>바꾸고싶다면 사유 명시(어떤 부분을 중요하게 생각하여 Recall을 기준으로 삼았다)</li>
</ul></li>
</ul>


</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>파이썬</category>
  <category>머신러닝</category>
  <category>딥러닝</category>
  <category>MStudy</category>
  <guid>https://kr9268.github.io/posts/meta-dl-creditcard-20240616/</guid>
  <pubDate>Sun, 16 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[공모전] 공공데이터 공모전-5(UN Comtrade API)</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/dtcontest-ore-20240616/</link>
  <description><![CDATA[ 





<p>2024년 12회 산업통상자원부 공공데이터 활용 아이디어 공모전 참가 기록.(UNComtradeAPI)</p>
<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<ul>
<li>2024년 12회 산업통상자원부 공공데이터 활용 아이디어 공모전 참가해보기로 함
<ul>
<li>https://datacontest.kr/apply/applyAdd/3</li>
</ul></li>
<li>UN Comtrade 사이트로 데이터 받기가 너무 번거로워서 API쪽 확인 후 Jupyter제작</li>
</ul>
</section>
<section id="내용정리" class="level2">
<h2 class="anchored" data-anchor-id="내용정리">내용정리</h2>
<section id="도입목적" class="level3">
<h3 class="anchored" data-anchor-id="도입목적">도입목적</h3>
<ul>
<li>US Comtrade Database 사이트에서 직접 데이터를 받는 경우, 오류가 여러번 발생
<ul>
<li>정확한 사유없이 다시 시도하라는 메시지여서 해결방법 찾기가 어려움</li>
</ul></li>
<li>API를 제공하는 것을 확인
<ul>
<li>비용없이 사용가능한 API도 있는 것으로 확인하여 활용</li>
</ul></li>
</ul>
</section>
<section id="필수사항" class="level3">
<h3 class="anchored" data-anchor-id="필수사항">필수사항</h3>
<ul>
<li>comtradeapicall 파이썬 패키지 설치</li>
<li>API Subscription Key 발급 : UN Comtrade Developer에서 발급 (https://comtradedeveloper.un.org/)
<ul>
<li>가입 후 사용하고자 하는 API를 Subscription</li>
<li>Profile 메뉴에서 Subscription내역이 보이고, Show로 Key를 확인할 수 있음</li>
</ul></li>
</ul>
</section>
<section id="사용방법" class="level3">
<h3 class="anchored" data-anchor-id="사용방법">사용방법</h3>
<ul>
<li>첫번째 칸에서 필수정보 입력 후 실행</li>
</ul>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">    subscription_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'your api key'</span></span>
<span id="cb1-2">    directory <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'your download directory'</span></span></code></pre></div>
<ul>
<li>두번째 칸에서 조회정보 입력 후 실행</li>
</ul>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">    hscode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'288512,281325'</span></span>
<span id="cb2-2">    flow_code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'M,X'</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># M : Import / X : Export</span></span></code></pre></div>
<ul>
<li>원하는 기능으로 이동하여 진행
<ul>
<li>저장없이 데이터 일부 확인 → <code>Subscription key 필요없는 일부 데이터 확인용 코드</code>로 이동
<ul>
<li>조회조건(월)입력 후 바로 아래 칸 실행</li>
</ul></li>
<li><strong>특정 연도</strong> 데이터 저장 필요 → <code>Subscription key 필요한 다운로드 코드</code>로 이동
<ul>
<li><code>조회조건 입력 (연단위)</code>에서 <code>4자리 연도</code> 입력하거나, <code>조회조건 입력 (월단위)</code>에서 <code>6자리 연월</code> 입력</li>
<li>입력 후 <code>CSV파일 저장(1개월씩 저장)</code> 부분 실행</li>
</ul></li>
<li><strong>특정 월</strong> 데이터 저장 필요 → <code>Subscription key 필요한 다운로드 코드</code> (반복문없이 1건 실행)`로 이동
<ul>
<li><code># 조회조건 입력 (월단위)</code>에서 <code>6자리 연월</code> 입력</li>
<li>입력 후 <code>CSV파일 저장(1개월씩 저장)</code> 부분 실행</li>
</ul></li>
</ul></li>
<li>받아진 데이터의 Row 확인 (한번에 너무 많은 행 받으면 Block당하므로 점검용)
<ul>
<li>실행하면 저장된 파일들에 대해 정보 제공</li>
</ul>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">  The <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">282540</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">283324_202404.</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">csv</span> has <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">136</span> rows.</span>
<span id="cb3-2">  The total : <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">970.</span></span></code></pre></div></li>
<li>데이터 프레임 합치기
<ul>
<li>실행하면 저장되어있는 파일을 하나로 합친다</li>
</ul></li>
</ul>
</section>
<section id="github-reposiroty주소" class="level3">
<h3 class="anchored" data-anchor-id="github-reposiroty주소">github reposiroty주소</h3>
<p><a href="https://github.com/KR9268/UnComtradeAPI">https://github.com/KR9268/UnComtradeAPI</a></p>
</section>
<section id="샘플코드패키지-및-함수" class="level3">
<h3 class="anchored" data-anchor-id="샘플코드패키지-및-함수">샘플코드(패키지 및 함수)</h3>
</section>
</section>
<section id="기본실행코드-api-key-및-조회조건-등-입력" class="level2">
<h2 class="anchored" data-anchor-id="기본실행코드-api-key-및-조회조건-등-입력">기본실행코드 (API Key 및 조회조건 등 입력)</h2>
<div id="1760335c" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> comtradeapicall</span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb4-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb4-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> clear_output</span>
<span id="cb4-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb4-8"></span>
<span id="cb4-9">subscription_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'your api key'</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># comtrade api subscription key (from comtradedeveloper.un.org)</span></span>
<span id="cb4-10"></span>
<span id="cb4-11">directory <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'your download directory'</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># output directory for downloaded files </span></span>
<span id="cb4-12">proxy_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;PROXY URL&gt;'</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># optional if you need proxy url</span></span></code></pre></div>
</div>
<section id="조회조건-입력" class="level3">
<h3 class="anchored" data-anchor-id="조회조건-입력">조회조건 입력</h3>
<div id="4e292ab4" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">hscode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'282540,283324'</span></span>
<span id="cb5-2">flow_code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'M,X'</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># M : Import / X : Export</span></span></code></pre></div>
</div>
</section>
<section id="subscription-key-필요없는-일부-데이터-확인용-코드" class="level3">
<h3 class="anchored" data-anchor-id="subscription-key-필요없는-일부-데이터-확인용-코드">Subscription key 필요없는 일부 데이터 확인용 코드</h3>
<div id="4cec9a99" class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조회조건 입력</span></span>
<span id="cb6-2">total_period <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'202401,202402,202403,202404'</span></span></code></pre></div>
</div>
<div id="256a19d8" class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">mydf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> comtradeapicall.previewFinalData(typeCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C'</span>, freqCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'M'</span>, clCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HS'</span>, period<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>total_period,</span>
<span id="cb7-2">                                        reporterCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, cmdCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hscode, flowCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>flow_code, partnerCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb7-3">                                        partner2Code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb7-4">                                        customsCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, motCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, maxRecords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>, format_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'JSON'</span>,</span>
<span id="cb7-5">                                        aggregateBy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, breakdownMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'classic'</span>, countOnly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, includeDesc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-6">mydf</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">typeCode</th>
<th data-quarto-table-cell-role="th">freqCode</th>
<th data-quarto-table-cell-role="th">refPeriodId</th>
<th data-quarto-table-cell-role="th">refYear</th>
<th data-quarto-table-cell-role="th">refMonth</th>
<th data-quarto-table-cell-role="th">period</th>
<th data-quarto-table-cell-role="th">reporterCode</th>
<th data-quarto-table-cell-role="th">reporterISO</th>
<th data-quarto-table-cell-role="th">reporterDesc</th>
<th data-quarto-table-cell-role="th">flowCode</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">netWgt</th>
<th data-quarto-table-cell-role="th">isNetWgtEstimated</th>
<th data-quarto-table-cell-role="th">grossWgt</th>
<th data-quarto-table-cell-role="th">isGrossWgtEstimated</th>
<th data-quarto-table-cell-role="th">cifvalue</th>
<th data-quarto-table-cell-role="th">fobvalue</th>
<th data-quarto-table-cell-role="th">primaryValue</th>
<th data-quarto-table-cell-role="th">legacyEstimationFlag</th>
<th data-quarto-table-cell-role="th">isReported</th>
<th data-quarto-table-cell-role="th">isAggregate</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>C</td>
<td>M</td>
<td>20240101</td>
<td>2024</td>
<td>1</td>
<td>202401</td>
<td>36</td>
<td>AUS</td>
<td>Australia</td>
<td>M</td>
<td>...</td>
<td>20000.00</td>
<td>False</td>
<td>20600.0</td>
<td>False</td>
<td>291960.098</td>
<td>290906.941</td>
<td>291960.098</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>C</td>
<td>M</td>
<td>20240101</td>
<td>2024</td>
<td>1</td>
<td>202401</td>
<td>36</td>
<td>AUS</td>
<td>Australia</td>
<td>M</td>
<td>...</td>
<td>20000.00</td>
<td>False</td>
<td>20600.0</td>
<td>False</td>
<td>291960.098</td>
<td>290906.941</td>
<td>291960.098</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>C</td>
<td>M</td>
<td>20240101</td>
<td>2024</td>
<td>1</td>
<td>202401</td>
<td>76</td>
<td>BRA</td>
<td>Brazil</td>
<td>M</td>
<td>...</td>
<td>1576.83</td>
<td>True</td>
<td>0.0</td>
<td>False</td>
<td>47901.000</td>
<td>47267.000</td>
<td>47901.000</td>
<td>6</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>C</td>
<td>M</td>
<td>20240101</td>
<td>2024</td>
<td>1</td>
<td>202401</td>
<td>76</td>
<td>BRA</td>
<td>Brazil</td>
<td>M</td>
<td>...</td>
<td>1520.00</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>45083.000</td>
<td>44570.000</td>
<td>45083.000</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>C</td>
<td>M</td>
<td>20240101</td>
<td>2024</td>
<td>1</td>
<td>202401</td>
<td>76</td>
<td>BRA</td>
<td>Brazil</td>
<td>M</td>
<td>...</td>
<td>55.83</td>
<td>True</td>
<td>0.0</td>
<td>False</td>
<td>1696.000</td>
<td>1580.000</td>
<td>1696.000</td>
<td>6</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">495</td>
<td>C</td>
<td>M</td>
<td>20240101</td>
<td>2024</td>
<td>1</td>
<td>202401</td>
<td>842</td>
<td>USA</td>
<td>USA</td>
<td>M</td>
<td>...</td>
<td>23000.00</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>384800.000</td>
<td>381720.000</td>
<td>384800.000</td>
<td>0</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">496</td>
<td>C</td>
<td>M</td>
<td>20240101</td>
<td>2024</td>
<td>1</td>
<td>202401</td>
<td>792</td>
<td>TUR</td>
<td>Türkiye</td>
<td>M</td>
<td>...</td>
<td>133887.00</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>599898.000</td>
<td>448243.000</td>
<td>599898.000</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">497</td>
<td>C</td>
<td>M</td>
<td>20240101</td>
<td>2024</td>
<td>1</td>
<td>202401</td>
<td>792</td>
<td>TUR</td>
<td>Türkiye</td>
<td>M</td>
<td>...</td>
<td>19887.00</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>89176.000</td>
<td>65031.000</td>
<td>89176.000</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">498</td>
<td>C</td>
<td>M</td>
<td>20240101</td>
<td>2024</td>
<td>1</td>
<td>202401</td>
<td>792</td>
<td>TUR</td>
<td>Türkiye</td>
<td>M</td>
<td>...</td>
<td>30000.00</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>140402.000</td>
<td>101488.000</td>
<td>140402.000</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">499</td>
<td>C</td>
<td>M</td>
<td>20240101</td>
<td>2024</td>
<td>1</td>
<td>202401</td>
<td>792</td>
<td>TUR</td>
<td>Türkiye</td>
<td>M</td>
<td>...</td>
<td>48000.00</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>217920.000</td>
<td>157511.000</td>
<td>217920.000</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
</tbody>
</table>

<p>500 rows × 47 columns</p>
</div>
</div>
</div>
</section>
<section id="subscription-key-필요한-다운로드-코드" class="level3">
<h3 class="anchored" data-anchor-id="subscription-key-필요한-다운로드-코드">Subscription key 필요한 다운로드 코드</h3>
<ul>
<li><strong>너무 자주, 많이 호출하면 밴당할 수 있음</strong></li>
<li>조회조건 입력은 연단위, 월단위 중 하나만 실행</li>
</ul>
<div id="afb9ae30" class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조회조건 입력 (연단위) - Year Total Period생성기</span></span>
<span id="cb8-2">year_txt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017'</span></span>
<span id="cb8-3">total_period <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb8-5">    total_period.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>year_txt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(i)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>zfill(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>['201712',
 '201711',
 '201710',
 '201709',
 '201708',
 '201707',
 '201706',
 '201705',
 '201704',
 '201703',
 '201702',
 '201701']</code></pre>
</div>
</div>
<div id="d60987bf" class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조회조건 입력 (월단위)</span></span>
<span id="cb10-2">total_period <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'201706'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'201705'</span>]</span></code></pre></div>
</div>
<div id="ce586ea7" class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CSV파일 저장(1개월씩 저장)</span></span>
<span id="cb11-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_period <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> total_period:</span>
<span id="cb11-3">    mydf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> comtradeapicall.getFinalData(subscription_key, typeCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C'</span>, freqCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'M'</span>, clCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HS'</span>, period<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>each_period,</span>
<span id="cb11-4">                                        reporterCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, cmdCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hscode, flowCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>flow_code, partnerCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb11-5">                                        partner2Code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb11-6">                                        customsCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, motCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, maxRecords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'250000'</span>, format_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'JSON'</span>,</span>
<span id="cb11-7">                                        aggregateBy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, breakdownMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'classic'</span>, countOnly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, includeDesc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-8">    mydf.to_csv(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>hscode<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>each_period<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.csv'</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb11-9">    clear_output()</span>
<span id="cb11-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>hscode<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>each_period<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.csv'</span>)</span>
<span id="cb11-11">    time.sleep(random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>282540,283324_201705.csv</code></pre>
</div>
</div>
</section>
<section id="subscription-key-필요한-다운로드-코드-반복문없이-1건-실행" class="level3">
<h3 class="anchored" data-anchor-id="subscription-key-필요한-다운로드-코드-반복문없이-1건-실행">Subscription key 필요한 다운로드 코드 (반복문없이 1건 실행)</h3>
<div id="ccae520a" class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 조회조건 입력 (월단위)</span></span>
<span id="cb13-2">period_manual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'202404'</span></span></code></pre></div>
</div>
<div id="65cbdaf5" class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CSV파일 저장(1개월씩 저장)</span></span>
<span id="cb14-2">mydf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> comtradeapicall.getFinalData(subscription_key, typeCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C'</span>, freqCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'M'</span>, clCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'HS'</span>, period<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>period_manual,</span>
<span id="cb14-3">                                        reporterCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, cmdCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hscode, flowCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>flow_code, partnerCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb14-4">                                        partner2Code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb14-5">                                        customsCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, motCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, maxRecords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'250000'</span>, format_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'JSON'</span>,</span>
<span id="cb14-6">                                        aggregateBy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, breakdownMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'classic'</span>, countOnly<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, includeDesc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb14-7">mydf.to_csv(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>hscode<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>period_manual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.csv'</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb14-8">mydf</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">typeCode</th>
<th data-quarto-table-cell-role="th">freqCode</th>
<th data-quarto-table-cell-role="th">refPeriodId</th>
<th data-quarto-table-cell-role="th">refYear</th>
<th data-quarto-table-cell-role="th">refMonth</th>
<th data-quarto-table-cell-role="th">period</th>
<th data-quarto-table-cell-role="th">reporterCode</th>
<th data-quarto-table-cell-role="th">reporterISO</th>
<th data-quarto-table-cell-role="th">reporterDesc</th>
<th data-quarto-table-cell-role="th">flowCode</th>
<th data-quarto-table-cell-role="th">...</th>
<th data-quarto-table-cell-role="th">netWgt</th>
<th data-quarto-table-cell-role="th">isNetWgtEstimated</th>
<th data-quarto-table-cell-role="th">grossWgt</th>
<th data-quarto-table-cell-role="th">isGrossWgtEstimated</th>
<th data-quarto-table-cell-role="th">cifvalue</th>
<th data-quarto-table-cell-role="th">fobvalue</th>
<th data-quarto-table-cell-role="th">primaryValue</th>
<th data-quarto-table-cell-role="th">legacyEstimationFlag</th>
<th data-quarto-table-cell-role="th">isReported</th>
<th data-quarto-table-cell-role="th">isAggregate</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>C</td>
<td>M</td>
<td>20240401</td>
<td>2024</td>
<td>4</td>
<td>202404</td>
<td>757</td>
<td>CHE</td>
<td>Switzerland</td>
<td>M</td>
<td>...</td>
<td>130.000</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>1866.447</td>
<td>NaN</td>
<td>1866.447</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>C</td>
<td>M</td>
<td>20240401</td>
<td>2024</td>
<td>4</td>
<td>202404</td>
<td>757</td>
<td>CHE</td>
<td>Switzerland</td>
<td>X</td>
<td>...</td>
<td>11.638</td>
<td>True</td>
<td>0.0</td>
<td>False</td>
<td>NaN</td>
<td>1203.627</td>
<td>1203.627</td>
<td>6</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>C</td>
<td>M</td>
<td>20240401</td>
<td>2024</td>
<td>4</td>
<td>202404</td>
<td>757</td>
<td>CHE</td>
<td>Switzerland</td>
<td>X</td>
<td>...</td>
<td>11.000</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>NaN</td>
<td>1137.675</td>
<td>1137.675</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>C</td>
<td>M</td>
<td>20240401</td>
<td>2024</td>
<td>4</td>
<td>202404</td>
<td>757</td>
<td>CHE</td>
<td>Switzerland</td>
<td>X</td>
<td>...</td>
<td>0.638</td>
<td>True</td>
<td>0.0</td>
<td>False</td>
<td>NaN</td>
<td>65.952</td>
<td>65.952</td>
<td>6</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>C</td>
<td>M</td>
<td>20240401</td>
<td>2024</td>
<td>4</td>
<td>202404</td>
<td>842</td>
<td>USA</td>
<td>USA</td>
<td>M</td>
<td>...</td>
<td>217523.000</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>4915370.000</td>
<td>4866083.000</td>
<td>4915370.000</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">131</td>
<td>C</td>
<td>M</td>
<td>20240401</td>
<td>2024</td>
<td>4</td>
<td>202404</td>
<td>300</td>
<td>GRC</td>
<td>Greece</td>
<td>M</td>
<td>...</td>
<td>24.000</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>26.819</td>
<td>NaN</td>
<td>26.819</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">132</td>
<td>C</td>
<td>M</td>
<td>20240401</td>
<td>2024</td>
<td>4</td>
<td>202404</td>
<td>300</td>
<td>GRC</td>
<td>Greece</td>
<td>M</td>
<td>...</td>
<td>24.000</td>
<td>False</td>
<td>0.0</td>
<td>False</td>
<td>26.819</td>
<td>NaN</td>
<td>26.819</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">133</td>
<td>C</td>
<td>M</td>
<td>20240401</td>
<td>2024</td>
<td>4</td>
<td>202404</td>
<td>36</td>
<td>AUS</td>
<td>Australia</td>
<td>M</td>
<td>...</td>
<td>495415.000</td>
<td>False</td>
<td>502653.0</td>
<td>False</td>
<td>303606.306</td>
<td>276999.633</td>
<td>303606.306</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">134</td>
<td>C</td>
<td>M</td>
<td>20240401</td>
<td>2024</td>
<td>4</td>
<td>202404</td>
<td>36</td>
<td>AUS</td>
<td>Australia</td>
<td>M</td>
<td>...</td>
<td>600.000</td>
<td>False</td>
<td>1038.0</td>
<td>False</td>
<td>2845.630</td>
<td>2153.520</td>
<td>2845.630</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">135</td>
<td>C</td>
<td>M</td>
<td>20240401</td>
<td>2024</td>
<td>4</td>
<td>202404</td>
<td>36</td>
<td>AUS</td>
<td>Australia</td>
<td>M</td>
<td>...</td>
<td>494815.000</td>
<td>False</td>
<td>501615.0</td>
<td>False</td>
<td>300760.676</td>
<td>274846.113</td>
<td>300760.676</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
</tbody>
</table>

<p>136 rows × 47 columns</p>
</div>
</div>
</div>
</section>
<section id="받아진-데이터의-row수-확인" class="level3">
<h3 class="anchored" data-anchor-id="받아진-데이터의-row수-확인">받아진 데이터의 Row수 확인</h3>
<ul>
<li>한번에 너무 많이 받으면 Block당할 수 있으니 받은 데이터 Row수 확인 필요</li>
</ul>
<div id="9a82b42e" class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">total_rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb15-2"></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Iterate over all files in the directory</span></span>
<span id="cb15-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> filename <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> os.listdir(directory):</span>
<span id="cb15-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> filename.startswith((hscode)) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> filename.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.csv'</span>):  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if the file is a CSV file and starts with the specified prefixes</span></span>
<span id="cb15-6">        filepath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(directory, filename)</span>
<span id="cb15-7">        df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(filepath)</span>
<span id="cb15-8">        num_rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df)</span>
<span id="cb15-9">        total_rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> num_rows</span>
<span id="cb15-10">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'The file </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>filename<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> has </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>num_rows<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> rows.'</span>)</span>
<span id="cb15-11"></span>
<span id="cb15-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the total number of rows</span></span>
<span id="cb15-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'The total : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>total_rows<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>The file 282540,283324_201705.csv has 136 rows.
The file 282540,283324_201706.csv has 698 rows.
The file 282540,283324_202404.csv has 136 rows.
The total : 970.</code></pre>
</div>
</div>
</section>
<section id="데이터프레임합치기" class="level3">
<h3 class="anchored" data-anchor-id="데이터프레임합치기">데이터프레임합치기</h3>
<div id="b6ebb997" class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize an empty list to store the dataframes</span></span>
<span id="cb17-2">dfs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Iterate over all files in the directory</span></span>
<span id="cb17-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> filename <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> os.listdir(directory):</span>
<span id="cb17-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> filename.startswith((hscode)) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> filename.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.csv'</span>):  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if the file is a CSV file and starts with the specified prefixes</span></span>
<span id="cb17-7">        filepath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(directory, filename)</span>
<span id="cb17-8">        df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(filepath)</span>
<span id="cb17-9">        dfs.append(df)</span>
<span id="cb17-10"></span>
<span id="cb17-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Concatenate all the dataframes in the list into a single dataframe</span></span>
<span id="cb17-12">merged_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat(dfs, ignore_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb17-13">merged_df.to_csv(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>hscode<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_merged.csv'</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
</div>


</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>공모전</category>
  <category>공공데이터</category>
  <category>분석</category>
  <category>UN ComtradeAPI</category>
  <guid>https://kr9268.github.io/posts/dtcontest-ore-20240616/</guid>
  <pubDate>Sun, 16 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[M_Study_3주차과제2] Neural Network로 MNIST다루기</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/</link>
  <description><![CDATA[ 





<p>스터디 진행하며 진행한 과제 기록(MNIST, Neural Network)</p>
<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>참여중인 딥러닝 스터디 3주차 기록입니다.</p>
<ul>
<li>Neural Network로 MNIST다루기</li>
<li>강사님이 주신 샘플코드 참고해서, 나에게 맞추거나 추가공부 진행</li>
</ul>
</section>
<section id="과제-작성-neuralnetwork-nonlinear" class="level2">
<h2 class="anchored" data-anchor-id="과제-작성-neuralnetwork-nonlinear">과제 작성 (NeuralNetwork / NonLinear)</h2>
<div id="8168521b" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Sequential</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> layers</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> keras.utils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> to_categorical</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> mnist</span></code></pre></div>
</div>
<section id="mnist-dataset로딩-및-전처리" class="level3">
<h3 class="anchored" data-anchor-id="mnist-dataset로딩-및-전처리">Mnist Dataset로딩 및 전처리</h3>
<div id="71a27e70" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">(x_train, y_train), (x_test, y_test) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mnist.load_data()</span>
<span id="cb2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (x_train, y_train, x_test, y_test):</span>
<span id="cb2-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(i.shape)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(60000, 28, 28)
(60000,)
(10000, 28, 28)
(10000,)</code></pre>
</div>
</div>
<div id="a4ef5eb8" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Shape 오류 발생하여 원핫인코딩 수행</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># X는 (28, 28)인데 Y는 그냥 정답(5면 5)여서 그런듯 함</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ValueError: Arguments `target` and `output` must have the same rank (ndim). Received: target.shape=(None,), output.shape=(None, 10)</span></span>
<span id="cb4-4"></span>
<span id="cb4-5">x_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_train.reshape((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb4-6">y_train_one_hot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> to_categorical(y_train, num_classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb4-7"></span>
<span id="cb4-8">x_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_test.reshape((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb4-9">y_test_one_hot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> to_categorical(y_test, num_classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</div>
</section>
<section id="모델구성" class="level3">
<h3 class="anchored" data-anchor-id="모델구성">모델구성</h3>
<ul>
<li>Codestral에게 MNIST데이터셋에 적합한 파라미터와 레이어로 조정해달라고 하여 맞춤</li>
<li>수업 때 거의 ReLU에요라고 들었는데 마지막 빼고는 거의 ReLU가 사용되었음</li>
<li>Softmax는 주로 마지막 층에 쓰인다고 들은 적이 있는데 여기서도 동일하게 되었음<br> (추가로 알아볼때도 주로 마지막레이어에 쓰인다는 내용 다수 확인)</li>
</ul>
<div id="644402c8" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 구성</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mistral에게 Mnist데이터셋이 적합한 레이어와 파라메터로 구성해달라고 해서 조정</span></span>
<span id="cb5-3">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Sequential([</span>
<span id="cb5-4">    layers.Input((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)),</span>
<span id="cb5-5">    layers.Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'same'</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb5-6">    layers.BatchNormalization(),</span>
<span id="cb5-7">    layers.Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'same'</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb5-8">    layers.BatchNormalization(),</span>
<span id="cb5-9">    layers.MaxPooling2D((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)),</span>
<span id="cb5-10">    layers.Dropout(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>),</span>
<span id="cb5-11">    layers.Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'same'</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb5-12">    layers.BatchNormalization(),</span>
<span id="cb5-13">    layers.MaxPooling2D((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)),</span>
<span id="cb5-14">    layers.Dropout(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>),</span>
<span id="cb5-15">    layers.Flatten(),</span>
<span id="cb5-16">    layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb5-17">    layers.BatchNormalization(),</span>
<span id="cb5-18">    layers.Dropout(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb5-19">    layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'softmax'</span>)</span>
<span id="cb5-20">])</span>
<span id="cb5-21">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(optimizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'adam'</span>,</span>
<span id="cb5-22">              loss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'binary_crossentropy'</span>,</span>
<span id="cb5-23">              metrics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>])</span>
<span id="cb5-24"></span>
<span id="cb5-25">model.summary()</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="font-weight: bold">Model: "sequential_14"</span>
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓
┃<span style="font-weight: bold"> Layer (type)                    </span>┃<span style="font-weight: bold"> Output Shape           </span>┃<span style="font-weight: bold">       Param # </span>┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩
│ conv2d_40 (<span style="color: #0087ff; text-decoration-color: #0087ff">Conv2D</span>)              │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">28</span>, <span style="color: #00af00; text-decoration-color: #00af00">28</span>, <span style="color: #00af00; text-decoration-color: #00af00">32</span>)     │           <span style="color: #00af00; text-decoration-color: #00af00">320</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ batch_normalization_52          │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">28</span>, <span style="color: #00af00; text-decoration-color: #00af00">28</span>, <span style="color: #00af00; text-decoration-color: #00af00">32</span>)     │           <span style="color: #00af00; text-decoration-color: #00af00">128</span> │
│ (<span style="color: #0087ff; text-decoration-color: #0087ff">BatchNormalization</span>)            │                        │               │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ conv2d_41 (<span style="color: #0087ff; text-decoration-color: #0087ff">Conv2D</span>)              │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">28</span>, <span style="color: #00af00; text-decoration-color: #00af00">28</span>, <span style="color: #00af00; text-decoration-color: #00af00">64</span>)     │        <span style="color: #00af00; text-decoration-color: #00af00">18,496</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ batch_normalization_53          │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">28</span>, <span style="color: #00af00; text-decoration-color: #00af00">28</span>, <span style="color: #00af00; text-decoration-color: #00af00">64</span>)     │           <span style="color: #00af00; text-decoration-color: #00af00">256</span> │
│ (<span style="color: #0087ff; text-decoration-color: #0087ff">BatchNormalization</span>)            │                        │               │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ max_pooling2d_27 (<span style="color: #0087ff; text-decoration-color: #0087ff">MaxPooling2D</span>) │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">14</span>, <span style="color: #00af00; text-decoration-color: #00af00">14</span>, <span style="color: #00af00; text-decoration-color: #00af00">64</span>)     │             <span style="color: #00af00; text-decoration-color: #00af00">0</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout_39 (<span style="color: #0087ff; text-decoration-color: #0087ff">Dropout</span>)            │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">14</span>, <span style="color: #00af00; text-decoration-color: #00af00">14</span>, <span style="color: #00af00; text-decoration-color: #00af00">64</span>)     │             <span style="color: #00af00; text-decoration-color: #00af00">0</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ conv2d_42 (<span style="color: #0087ff; text-decoration-color: #0087ff">Conv2D</span>)              │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">14</span>, <span style="color: #00af00; text-decoration-color: #00af00">14</span>, <span style="color: #00af00; text-decoration-color: #00af00">128</span>)    │        <span style="color: #00af00; text-decoration-color: #00af00">73,856</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ batch_normalization_54          │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">14</span>, <span style="color: #00af00; text-decoration-color: #00af00">14</span>, <span style="color: #00af00; text-decoration-color: #00af00">128</span>)    │           <span style="color: #00af00; text-decoration-color: #00af00">512</span> │
│ (<span style="color: #0087ff; text-decoration-color: #0087ff">BatchNormalization</span>)            │                        │               │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ max_pooling2d_28 (<span style="color: #0087ff; text-decoration-color: #0087ff">MaxPooling2D</span>) │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">7</span>, <span style="color: #00af00; text-decoration-color: #00af00">7</span>, <span style="color: #00af00; text-decoration-color: #00af00">128</span>)      │             <span style="color: #00af00; text-decoration-color: #00af00">0</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout_40 (<span style="color: #0087ff; text-decoration-color: #0087ff">Dropout</span>)            │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">7</span>, <span style="color: #00af00; text-decoration-color: #00af00">7</span>, <span style="color: #00af00; text-decoration-color: #00af00">128</span>)      │             <span style="color: #00af00; text-decoration-color: #00af00">0</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ flatten_14 (<span style="color: #0087ff; text-decoration-color: #0087ff">Flatten</span>)            │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">6272</span>)           │             <span style="color: #00af00; text-decoration-color: #00af00">0</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_27 (<span style="color: #0087ff; text-decoration-color: #0087ff">Dense</span>)                │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">256</span>)            │     <span style="color: #00af00; text-decoration-color: #00af00">1,605,888</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ batch_normalization_55          │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">256</span>)            │         <span style="color: #00af00; text-decoration-color: #00af00">1,024</span> │
│ (<span style="color: #0087ff; text-decoration-color: #0087ff">BatchNormalization</span>)            │                        │               │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout_41 (<span style="color: #0087ff; text-decoration-color: #0087ff">Dropout</span>)            │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">256</span>)            │             <span style="color: #00af00; text-decoration-color: #00af00">0</span> │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_28 (<span style="color: #0087ff; text-decoration-color: #0087ff">Dense</span>)                │ (<span style="color: #00d7ff; text-decoration-color: #00d7ff">None</span>, <span style="color: #00af00; text-decoration-color: #00af00">10</span>)             │         <span style="color: #00af00; text-decoration-color: #00af00">2,570</span> │
└─────────────────────────────────┴────────────────────────┴───────────────┘
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="font-weight: bold"> Total params: </span><span style="color: #00af00; text-decoration-color: #00af00">1,703,050</span> (6.50 MB)
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="font-weight: bold"> Trainable params: </span><span style="color: #00af00; text-decoration-color: #00af00">1,702,090</span> (6.49 MB)
</pre>
</div>
<div class="cell-output cell-output-display">
<pre style="white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace"><span style="font-weight: bold"> Non-trainable params: </span><span style="color: #00af00; text-decoration-color: #00af00">960</span> (3.75 KB)
</pre>
</div>
</div>
</section>
<section id="모델학습-및-학습과정-시각화" class="level3">
<h3 class="anchored" data-anchor-id="모델학습-및-학습과정-시각화">모델학습 및 학습과정 시각화</h3>
<div id="a586ca26" class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">history <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit(x_train, y_train_one_hot, epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb6-2">history.history</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>{'accuracy': [0.9526000022888184,
  0.9849333167076111,
  0.9872333407402039,
  0.9904000163078308,
  0.9906499981880188,
  0.9917166829109192,
  0.9925500154495239,
  0.9933333396911621,
  0.9935333132743835,
  0.9948333501815796],
 'loss': [0.09701579809188843,
  0.014779138378798962,
  0.01159658282995224,
  0.009130637161433697,
  0.008214634843170643,
  0.007283014710992575,
  0.0065074339509010315,
  0.005834747105836868,
  0.005641818046569824,
  0.004907044116407633]}</code></pre>
</div>
</div>
<div id="57a7afcb" class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">plt.plot(history.history[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss'</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Train loss'</span>)</span>
<span id="cb8-2">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'The number of learning'</span>)</span>
<span id="cb8-3">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Cost'</span>)</span>
<span id="cb8-4">plt.legend()</span>
<span id="cb8-5">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-7-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="모델평가-및-모델-활용한-예측" class="level3">
<h3 class="anchored" data-anchor-id="모델평가-및-모델-활용한-예측">모델평가 및 모델 활용한 예측</h3>
<ul>
<li>모델평가</li>
</ul>
<div id="d6872357" class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">model.evaluate(x_test, y_test_one_hot, verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>[0.003361478913575411, 0.994700014591217]</code></pre>
</div>
</div>
<ul>
<li>예측</li>
</ul>
<div id="5f6ef8a1" class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">y_predict_one_hot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(x_test)</span>
<span id="cb11-2">y_predict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax(y_predict_one_hot, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb11-3">y_predict</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>313/313 ━━━━━━━━━━━━━━━━━━━━ 3s 10ms/step</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>array([7, 2, 1, ..., 4, 5, 6], dtype=int64)</code></pre>
</div>
</div>
<div id="894ef30f" class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">y_test</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)</code></pre>
</div>
</div>
</section>
<section id="추가-예측치가-틀린값-추출-후-시각화해보기" class="level3">
<h3 class="anchored" data-anchor-id="추가-예측치가-틀린값-추출-후-시각화해보기">[추가] 예측치가 틀린값 추출 후 시각화해보기</h3>
<ul>
<li>예측 틀린 값 확인</li>
</ul>
<div id="8cba8e5c" class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb16-2"></span>
<span id="cb16-3">df_answersheet <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(y_test, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y_test(정답)'</span>])</span>
<span id="cb16-4">df_answersheet[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y_pred(예측)'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax(y_predict_one_hot, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb16-5">df_answersheet[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'비교'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (df_answersheet[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y_test(정답)'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> df_answersheet[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y_pred(예측)'</span>])</span>
<span id="cb16-6">df_answersheet</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Y_test(정답)</th>
<th data-quarto-table-cell-role="th">Y_pred(예측)</th>
<th data-quarto-table-cell-role="th">비교</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>7</td>
<td>7</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2</td>
<td>2</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>1</td>
<td>1</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>0</td>
<td>0</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>4</td>
<td>4</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">9995</td>
<td>2</td>
<td>2</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9996</td>
<td>3</td>
<td>3</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">9997</td>
<td>4</td>
<td>4</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9998</td>
<td>5</td>
<td>5</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">9999</td>
<td>6</td>
<td>6</td>
<td>True</td>
</tr>
</tbody>
</table>

<p>10000 rows × 3 columns</p>
</div>
</div>
</div>
<div id="95096666" class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">df_answersheet[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'비교'</span>].value_counts()</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>비교
True     9947
False      53
Name: count, dtype: int64</code></pre>
</div>
</div>
<ul>
<li>예측 틀린 값들의 시각화 및 정답/예측치 비교</li>
</ul>
<div id="b96cc66d" class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">idx_false <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_answersheet[df_answersheet[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'비교'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>].index</span>
<span id="cb19-2">idx_false</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>Index([ 445,  449,  947, 1014, 1232, 1242, 1247, 1709, 1878, 1901, 2035, 2070,
       2118, 2130, 2135, 2414, 2454, 2597, 2654, 2896, 2939, 2953, 3422, 3520,
       3808, 3985, 4027, 4176, 4284, 4571, 4639, 4699, 4740, 4761, 5749, 5955,
       6571, 6576, 6597, 6625, 8408, 9009, 9015, 9019, 9587, 9620, 9638, 9642,
       9664, 9679, 9692, 9698, 9729],
      dtype='int64')</code></pre>
</div>
</div>
<div id="dc588030" class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> koreanize_matplotlib</span>
<span id="cb21-2"></span>
<span id="cb21-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화로 Validation 확인</span></span>
<span id="cb21-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> idx_false.tolist():</span>
<span id="cb21-5">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb21-6"></span>
<span id="cb21-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 확인</span></span>
<span id="cb21-8">    plt.xlabel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"정답:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>y_test[i]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> | 예상:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>y_predict[i]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb21-9">    plt.imshow(np.reshape(x_test[i], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>]), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.cm.binary)</span>
<span id="cb21-10">    plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-2.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-3.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-4.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-5.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-6.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-7.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-8.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-9.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-10.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-11.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-12.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-13.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-14.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-15.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-16.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-17.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-18.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-19.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-20.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-21.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-22.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-23.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-24.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-25.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-26.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-27.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-28.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-29.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-30.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-31.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-32.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-33.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-34.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-35.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-36.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-37.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-38.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-39.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-40.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-41.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-42.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-43.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-44.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-45.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-46.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-47.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-48.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-49.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-50.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-51.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-52.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/index_files/figure-html/cell-14-output-53.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>


</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>파이썬</category>
  <category>머신러닝</category>
  <category>딥러닝</category>
  <category>MStudy</category>
  <category>MNIST</category>
  <category>Tensorflow</category>
  <guid>https://kr9268.github.io/posts/meta-dl-creditcard-20240615_2/</guid>
  <pubDate>Sat, 15 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[M_Study_3주차과제1] Softmax로 MNIST다루기</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/meta-dl-creditcard-20240615_1/</link>
  <description><![CDATA[ 





<p>스터디 진행하며 진행한 과제 기록(MNIST, Softmax)</p>
<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>참여중인 딥러닝 스터디 3주차 기록입니다.</p>
<ul>
<li>Softmax로 MNIST다루기</li>
<li>강사님이 주신 샘플코드 참고해서, 나에게 맞추거나 추가공부 진행</li>
</ul>
</section>
<section id="과제-작성-softmax-linear" class="level2">
<h2 class="anchored" data-anchor-id="과제-작성-softmax-linear">과제 작성 (Softmax / Linear)</h2>
<div id="c2c7d438" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> mnist</span></code></pre></div>
</div>
<section id="mnist-dataset로딩-및-전처리" class="level3">
<h3 class="anchored" data-anchor-id="mnist-dataset로딩-및-전처리">Mnist Dataset로딩 및 전처리</h3>
<div id="3cc2dc4b" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">(x_train, y_train), (x_test, y_test) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mnist.load_data()</span>
<span id="cb2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (x_train, y_train, x_test, y_test):</span>
<span id="cb2-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(i.shape)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(60000, 28, 28)
(60000,)
(10000, 28, 28)
(10000,)</code></pre>
</div>
</div>
<section id="float변환" class="level4">
<h4 class="anchored" data-anchor-id="float변환">float변환</h4>
<div id="d17a0531" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">x_train, x_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(x_train, np.float32), np.array(x_test, np.float32)</span></code></pre></div>
</div>
</section>
<section id="flatten" class="level4">
<h4 class="anchored" data-anchor-id="flatten">Flatten</h4>
<div id="9ca4ba93" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Flatten (num_features=784)</span></span>
<span id="cb5-2">num_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">784</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 28*28 (Data의 Shape)</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Flatten전 : '</span>, x_train.shape, x_test.shape)</span>
<span id="cb5-5">x_train, x_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_train.reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, num_features), x_test.reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, num_features)</span>
<span id="cb5-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Flatten후 : '</span>, x_train.shape, x_test.shape)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Flatten전 :  (60000, 28, 28) (10000, 28, 28)
Flatten후 :  (60000, 784) (10000, 784)</code></pre>
</div>
</div>
</section>
<section id="normalize" class="level4">
<h4 class="anchored" data-anchor-id="normalize">Normalize</h4>
<div id="8b98cd1a" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Normalize (0~255사이의 값을 0~1 사이의 값으로)</span></span>
<span id="cb7-2">x_train, x_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.</span>, x_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.</span></span></code></pre></div>
</div>
</section>
</section>
<section id="함수-및-파라메터-설정" class="level3">
<h3 class="anchored" data-anchor-id="함수-및-파라메터-설정">함수 및 파라메터 설정</h3>
<div id="28184919" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parameters</span></span>
<span id="cb8-2">learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb8-3">training_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb8-4">batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span></span>
<span id="cb8-5"></span>
<span id="cb8-6">num_classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># MNIST의 0~9 숫자 10개</span></span>
<span id="cb8-7">num_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">784</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 28*28 (Data의 Shape)</span></span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Variables</span></span>
<span id="cb8-10">W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.Variable(tf.ones([num_features, num_classes]), name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'weight'</span>)</span>
<span id="cb8-11">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.Variable(tf.zeros([num_classes]), name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bias'</span>)</span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Functions</span></span>
<span id="cb8-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> softmax(x):</span>
<span id="cb8-15">    z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.matmul(x, W) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="cb8-16">    sm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.nn.softmax(z)</span>
<span id="cb8-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> sm</span>
<span id="cb8-18"></span>
<span id="cb8-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> cross_entropy(y_pred, y_true):</span>
<span id="cb8-20">    y_true <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.one_hot(y_true, depth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_classes)</span>
<span id="cb8-21">    y_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.clip_by_value(y_pred, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clip_by_value에서 1e-9 최소값지정사유 : </span></span>
<span id="cb8-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> tf.reduce_mean(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>tf.reduce_sum(y_true <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> tf.math.log(y_pred), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</div>
<ul>
<li><p>tf.nn.softmax : 0~1 사이로 출력</p></li>
<li><p>tf.one_hot(y_true, depth=num_classes) : y_true인 대상을 depth에 맞춰 원핫인코딩</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 샘플</span></span>
<span id="cb9-2">  tf.one_hot([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], depth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>).numpy()</span>
<span id="cb9-3">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> array([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>]], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>float32)</span></code></pre></div></li>
<li><p>tf.clip_by_value(y_pred, 1e-9, 1.) : y_pred인 대상을 제시한 min, max에 맞춰 변환</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 샘플</span></span>
<span id="cb10-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환 전</span></span>
<span id="cb10-3">  t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.constant([[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tf.float32)</span>
<span id="cb10-4">  t.numpy()</span>
<span id="cb10-5">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> array([[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>,  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>,  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb10-6">     [ <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>,  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>,  <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.</span>]], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>float32)</span>
<span id="cb10-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환 후</span></span>
<span id="cb10-8">  tf.clip_by_value(t, clip_value_min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, clip_value_max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).numpy()</span>
<span id="cb10-9">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;</span> array([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb10-10">     [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>]], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>float32)</span></code></pre></div></li>
</ul>
<div id="fb36658f" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optimization</span></span>
<span id="cb11-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> accuracy(y_pred, y_true):</span>
<span id="cb11-3">    correct_prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.equal(tf.argmax(y_pred, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), tf.cast(y_true, tf.int64))</span>
<span id="cb11-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> tf.reduce_mean(tf.cast(correct_prediction, tf.float32), axis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb11-5"></span>
<span id="cb11-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> batch_maker(text, data_row, batch_size):</span>
<span id="cb11-7">    random_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.randint(data_row, size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> batch_size)</span>
<span id="cb11-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x_train[random_idx], y_train[random_idx]</span>
<span id="cb11-9"></span>
<span id="cb11-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> run_optimization(x, y):</span>
<span id="cb11-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> g:</span>
<span id="cb11-12">        pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> softmax(x)</span>
<span id="cb11-13">        cost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cross_entropy(pred, y)</span>
<span id="cb11-14"></span>
<span id="cb11-15">    gradients <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> g.gradient(cost, [W, b])</span>
<span id="cb11-16"></span>
<span id="cb11-17">    optimizer.apply_gradients(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(gradients, [W, b]))</span>
<span id="cb11-18"></span>
<span id="cb11-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optimizer (Stochastic Gradient Descent)</span></span>
<span id="cb11-20">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.optimizers.SGD(learning_rate)</span>
<span id="cb11-21"></span>
<span id="cb11-22"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> step <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(training_steps): <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># training_steps = 1000로 위에서 지정해둠</span></span>
<span id="cb11-23">    batch_x, batch_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> batch_maker(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'training'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60000</span>, batch_size) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># batch_size = 256로 위에서 지정해둠</span></span>
<span id="cb11-24"></span>
<span id="cb11-25">    run_optimization(batch_x, batch_y)</span>
<span id="cb11-26"></span>
<span id="cb11-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb11-28">        pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> softmax(batch_x)</span>
<span id="cb11-29">        cost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cross_entropy(pred, batch_y)</span>
<span id="cb11-30">        acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy(pred, batch_y)</span>
<span id="cb11-31">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Step : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>step<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> | loss : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>cost<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> / accuracy : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>acc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Step : 0 | loss : 2.287696123123169 / accuracy : 0.6875
Step : 100 | loss : 1.5578452348709106 / accuracy : 0.7578125
Step : 200 | loss : 1.188745379447937 / accuracy : 0.8359375
Step : 300 | loss : 1.010088324546814 / accuracy : 0.796875
Step : 400 | loss : 0.8610934019088745 / accuracy : 0.859375
Step : 500 | loss : 0.807215690612793 / accuracy : 0.8359375
Step : 600 | loss : 0.7144550085067749 / accuracy : 0.8671875
Step : 700 | loss : 0.7559677362442017 / accuracy : 0.81640625
Step : 800 | loss : 0.6656553745269775 / accuracy : 0.8515625
Step : 900 | loss : 0.59657222032547 / accuracy : 0.8828125</code></pre>
</div>
</div>
</section>
<section id="학습-후-validationtest" class="level3">
<h3 class="anchored" data-anchor-id="학습-후-validationtest">학습 후 Validation(Test)</h3>
<div id="a06dd500" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># W와 b가 학습된 model로 Validation(Test Dataset사용)</span></span>
<span id="cb13-2">prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> softmax(x_test)</span>
<span id="cb13-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Test accuracy : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>accuracy(prediction, y_test)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Test accuracy : 0.8716999888420105</code></pre>
</div>
</div>
</section>
<section id="추가적으로-검증기능-구현해보기" class="level3">
<h3 class="anchored" data-anchor-id="추가적으로-검증기능-구현해보기">추가적으로 검증기능 구현해보기</h3>
<ul>
<li>추가적으로, 아래의 기능을 구현해보았음
<ul>
<li>number_to_look을 입력하여 원하는 횟수만큼 모델검증</li>
<li>randint를 활용하여 랜덤추출, tested_list로 추출내역 관리하여 중복회피</li>
<li>pyplot으로 형태/예측/정답을 시각화</li>
</ul></li>
</ul>
<div id="e1bb8562" class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> koreanize_matplotlib</span>
<span id="cb15-2"></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시각화로 Validation 확인</span></span>
<span id="cb15-4">number_to_look <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb15-5">tested_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb15-6"></span>
<span id="cb15-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(number_to_look):</span>
<span id="cb15-8">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb15-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 테스트할 데이터 랜덤추출</span></span>
<span id="cb15-10">    idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb15-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tested_list:</span>
<span id="cb15-12">        idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, y_test.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb15-13">        tested_list.append(idx)</span>
<span id="cb15-14"></span>
<span id="cb15-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 결과 확인</span></span>
<span id="cb15-16">    plt.xlabel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"예상:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>argmax(prediction[idx])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> | 정답:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>y_test[idx]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb15-17">    plt.imshow(np.reshape(x_test[idx], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>]), cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.cm.binary)</span>
<span id="cb15-18">    plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_1/index_files/figure-html/cell-10-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_1/index_files/figure-html/cell-10-output-2.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_1/index_files/figure-html/cell-10-output-3.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240615_1/index_files/figure-html/cell-10-output-4.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>


</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>파이썬</category>
  <category>머신러닝</category>
  <category>딥러닝</category>
  <category>MStudy</category>
  <category>MNIST</category>
  <guid>https://kr9268.github.io/posts/meta-dl-creditcard-20240615_1/</guid>
  <pubDate>Sat, 15 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[공모전] 공공데이터 공모전-4(모델에 대한 Feature개발 및 평가지표)</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/dtcontest-ore-20240615/</link>
  <description><![CDATA[ 





<p>2024년 12회 산업통상자원부 공공데이터 활용 아이디어 공모전 참가 기록.(모델에 대한 Feature개발 및 평가지표)</p>
<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<ul>
<li>2024년 12회 산업통상자원부 공공데이터 활용 아이디어 공모전 참가해보기로 함
<ul>
<li>https://datacontest.kr/apply/applyAdd/3</li>
</ul></li>
<li>분석 대상 광물에 대한 HSCODE 등 기준 고민</li>
<li>모델 평가지표에 대한 고민 : Recall</li>
<li>모델에 사용할 지표 개발에 대한 부분 (UN Comtrade 활용)
<ul>
<li>생산국 수출량</li>
<li>생산국 판매가격</li>
<li>수입국 수입량</li>
</ul></li>
</ul>
</section>
<section id="내용정리" class="level2">
<h2 class="anchored" data-anchor-id="내용정리">내용정리</h2>
<section id="지난-회의정리" class="level3">
<h3 class="anchored" data-anchor-id="지난-회의정리">지난 회의정리</h3>
<ul>
<li>모델링에 사용할 지표 중 <code>시장위험지수</code> 제거에 대한 동의
<ul>
<li>수급안정화지수에 공통항목이 많아 추이가 비슷하여 제외</li>
</ul></li>
<li>Feature 중 하나로 <code>BDI지수</code> 추가</li>
<li>Feature로 사용할 데이터를 추가로 발굴
<ul>
<li><a href="https://comtradeplus.un.org/TradeFlow">UN Comtrade database</a>에서도 활용할 데이터 있는지 검토(타 팀원 제보)</li>
</ul></li>
<li>잘 만들어진 기존 모델들을 잘 사용하는 방안 고려
<ul>
<li>이상요소 탐지에 R AnomalyDetection패키지 사용 (타 팀원이 적용예정)</li>
</ul></li>
</ul>
</section>
<section id="회의내용에-대한-self고찰-및-아이디어-develope" class="level3">
<h3 class="anchored" data-anchor-id="회의내용에-대한-self고찰-및-아이디어-develope">회의내용에 대한 Self고찰 및 아이디어 Develope</h3>
<ul>
<li>분석할 광물에 대해 어떤 기준을 적용할지 고민
<ul>
<li>UN Comtrade를 활용할 때 어떤 HSCODE를 적용할지에 대한 고민
<ul>
<li>한국무역통계진흥원에서 제공하는 <a href="https://www.bandtrass.or.kr/hsnavi.do?page=F&amp;site=">HSCODE분류서비스</a>를 활용해, 가장 신고율이 높은 HSCODE 채택
<ul>
<li>‘이차전지용’ 등 여러 용도가 있음에도 가장 높은 신고율은 ’기타’인 것으로 확인해 이 로직은 <code>Drop</code></li>
</ul></li>
<li>현대경제연구원의 <a href="https://www.hri.co.kr/kor/report/report-view.html?mode=2&amp;uid=97723&amp;find_field=total&amp;find_word=2%EC%B0%A8%EC%A0%84%EC%A7%80&amp;page=1">2차전지 보고서</a> 중 품목별 HSCODE 내용이 있어 활용 검토
<ul>
<li><strong>핵심사업에 사용될 광물에 대한 분석</strong>이라는 점에서, 2차전지 컨셉 차용이 나쁘지 않은 것으로 보여 <code>활용제안 예정</code>
<ul>
<li>산화/수산화리튬(282520), 산화/수산화코발트(282200), 황산코발트(283329)</li>
<li>탄산리튬(283691), 이산화망간(850610), 산화/수산화니켈(282540), 황산니켈(283324)</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
<li>모델링에 사용할 평가기준에 대한 분석
<ul>
<li>위험요소 탐지에 대한 모델이므로 <code>Recall 사용으로 제안 예정</code>
<ul>
<li>위기로 ’판정’하는게 많아져야 위기를 놓치지 않을 확률이 크므로 Recall이 맞다고 생각했음</li>
</ul></li>
</ul></li>
<li>모델링에 사용할 Feature에 대한 생각 (<code>아래의 3개 지표를 개발하여 활용하도록 의견제안 예정</code>)
<ul>
<li>UN Comtrade의 요소를 바탕으로 아래의 지표를 생성하는 것을 고려
<ul>
<li><code>생산국 수출량</code> : 각 광물의 생산량 상위 국가를 from기준으로 하여 수출(공급)량 판단</li>
<li><code>생산국 판매가격</code> : 각 광물의 판매가격을 수출량으로 나누어 kg당 단가로 판단
<ul>
<li>가격은 CIF, FOB중 기타비용을 제외하는 FOB를 우선고려, 데이터를 보고 추가결정</li>
</ul></li>
<li><code>수입국 수입량</code> : 특정 국가에서 수입량 변동이 급격히 변동(상승)하는 것 탐지</li>
</ul></li>
</ul></li>
</ul>


</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>공모전</category>
  <category>공공데이터</category>
  <category>분석</category>
  <guid>https://kr9268.github.io/posts/dtcontest-ore-20240615/</guid>
  <pubDate>Sat, 15 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[공모전] 공공데이터 공모전-3(사용할 피쳐 재분석)</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/dtcontest-ore-20240612/</link>
  <description><![CDATA[ 





<p>2024년 12회 산업통상자원부 공공데이터 활용 아이디어 공모전 참가 기록.(지표 및 사용할 데이터에 대한 고민)</p>
<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<ul>
<li>2024년 12회 산업통상자원부 공공데이터 활용 아이디어 공모전 참가해보기로 함
<ul>
<li>https://datacontest.kr/apply/applyAdd/3</li>
</ul></li>
<li>사용하기로 한 지표에 대한 재조사 및 통합사용하기로 의견제안 예정</li>
<li>모델의 Feature로 원자재의 벌크운송에 대한 운임지수(BDI)사용 의견제안 예정</li>
</ul>
</section>
<section id="내용정리" class="level2">
<h2 class="anchored" data-anchor-id="내용정리">내용정리</h2>
<section id="지난-회의정리" class="level3">
<h3 class="anchored" data-anchor-id="지난-회의정리">지난 회의정리</h3>
<ul>
<li>모델링에 사용할 지표 2가지 선정
<ul>
<li>수급안정화지수</li>
<li>시장위험지수</li>
</ul></li>
<li>광물별 가격 영향 미치는 요소 생각해보기</li>
<li>모델링 관련 아이디어</li>
</ul>
</section>
<section id="회의내용에-대한-self고찰-및-아이디어-develope" class="level3">
<h3 class="anchored" data-anchor-id="회의내용에-대한-self고찰-및-아이디어-develope">회의내용에 대한 Self고찰 및 아이디어 Develope</h3>
<ul>
<li>모델링에 사용할 지표에 대한 분석
<ul>
<li>데이터를 살펴보다보니 둘의 움직임이 거의 같게 나타남</li>
<li>가격리스크, 중장기적 시계 등 공통적인 요소가 서로 많은 지표임을 발견</li>
<li>포함항목을 좀 더 구체적으로 명시한 <code>수급안정화지수로 통합사용 하는 것으로 의견 제안 예정</code>
<ul>
<li>광종별 중장기 가격리스크, 세계 수급비율(공급/소비), 세계 공급(매장)편중도, 국내 수입증가율, 국내 수입국 편중도 등</li>
</ul></li>
</ul></li>
</ul>
<div id="71278759" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> koreanize_matplotlib</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-5"></span>
<span id="cb1-6">df_source <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'비교_한국광해광업공단_수급안정화지수_코발트_20240520 (1).csv'</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cp949'</span>)</span>
<span id="cb1-7">df_source[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'기간'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'시장위험지수'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'수급안정화지수'</span>]].plot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'기간'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240612/index_files/figure-html/cell-2-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li><p>광물별 고려요소 및 모델링에 쓸 데이터 관련 아이디어</p>
<ol type="1">
<li>고려대상 광물들의 세계 생산량 비중 등을 고려할 때 <code>국제수송(수입)을 고려</code>해야할 것으로 보임
<ul>
<li>조사를 통해 <code>상하이 컨테이너 운임지수(SCFI)</code>를 확인, 국가별 운임지수에 대한 가중치를 반영한 지표로 주요 수입국에 대해 반영 고려
<ul>
<li>그러나 광물운송의 특성상 컨테이너로 운송하지 않기 때문에 다른 지수를 모색</li>
</ul></li>
<li>벌크선에 대한 지수인 <code>발틱운임지수(BDI)</code> 도입 검토
<ul>
<li>공급 대비 운송량에 대한 수요를 알 수 있음</li>
<li>벌크선은 광물, 곡물 등을 운송하므로 원자재에 대한 글로벌 수요와 공급을 간접적으로 측정 원자재 소요에 대한 미래의 경제선행지표로도 간주되기도 함</li>
<li>구체적인 운송수요가 있을 때만 예약되는 벌크선 특성상 특정 목적에 의해 조정되는 경우가 적음</li>
<li>위키백과에서 위의 내용들 발췌 : https://en.wikipedia.org/wiki/Baltic_Dry_Index</li>
</ul></li>
<li><code>발틱운임지수(BDI)를 데이터로 사용하는 것으로 의견 제안 예정</code></li>
</ul></li>
<li>주요 생산국에 대한 여러 요소의 고려
<ul>
<li>전쟁, 전염병, 인건비 등을 대상으로 고려할 수는 없을지에 대한 고민
<ul>
<li>수치화하기 어렵거나, 자료를 구하기 어려울 것으로 보여 일단 Drop</li>
</ul></li>
</ul></li>
</ol></li>
</ul>


</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>공모전</category>
  <category>공공데이터</category>
  <category>분석</category>
  <category>공공데이터API</category>
  <category>github</category>
  <guid>https://kr9268.github.io/posts/dtcontest-ore-20240612/</guid>
  <pubDate>Mon, 10 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[M_Study_3주차] Multi-class Classification / Artificial Neural Network</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/meta-dl-creditcard-20240609/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>참여중인 딥러닝 스터디 3주차 기록입니다.</p>
</section>
<section id="주차-과제-설명" class="level2">
<h2 class="anchored" data-anchor-id="주차-과제-설명">2주차 과제 설명</h2>
<ul>
<li>tf.random.set_seed(2024)
<ul>
<li>서로 다른 모델을 비교하는 경우, 시작점이 다른 것 때문에 성능우위가 다르게 측정되는 경우 발생 (같은 성능임에도 다르게 나오거나, 좋은 모델이 더 나쁜 모델로 오인되는 경우)</li>
<li>이러한 경우를 방지하고자, set_seed로 같은 지점에서 시작하게 할 수 있음</li>
<li>딥러닝은 복잡한 다차원의 함수이므로, 좋은 시작점에 따라 달라질 수 있음 (좋은 Optimizer를 사용하고 좋은 데이터를 쓴다면 차이는 줄어들 수 있음)</li>
</ul></li>
<li>Matrix Multiplication
<ul>
<li>A(1,2), B(2,1)와 같은 Matrix에서, A의 열(,2)과 B의 행(2,)의 숫자가 같아야 가능</li>
</ul></li>
<li>Cost function에서 마이너스(-)를 붙이는 경우
<ul>
<li>높을수록 안좋은 척도여야 할 때, 계산식이 높을수록 좋은 값인 경우 붙여서 변환</li>
</ul></li>
<li>Learning rate
<ul>
<li>GD에서 안정적으로 최적점에 가게하기 위해 학습률을 조정</li>
<li>사람이 지정하는 hyper parameter, 경험에 의해 넣는 경우가 많다(정답은 없음)</li>
</ul></li>
<li>Confusion Matrix
<ul>
<li>Recall, Precision 으로 표현하는 것은 경영진 등에는 와닿지 않을 수 있으므로 시각화하여 보여주면 좋음</li>
</ul></li>
</ul>
</section>
<section id="주차-과제-logistic-regression-코드-작성한-것" class="level2">
<h2 class="anchored" data-anchor-id="주차-과제-logistic-regression-코드-작성한-것">2주차 과제 Logistic regression 코드 작성한 것</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train data</span></span>
<span id="cb1-6">X_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb1-7">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>],</span>
<span id="cb1-8">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb1-9">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>],</span>
<span id="cb1-10">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>],</span>
<span id="cb1-11">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>]],</span>
<span id="cb1-12">                   dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)</span>
<span id="cb1-13">Y_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],</span>
<span id="cb1-14">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],</span>
<span id="cb1-15">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],</span>
<span id="cb1-16">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb1-17">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb1-18">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],],</span>
<span id="cb1-19">                   dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 회귀선 작성 전 분포확인</span></span>
<span id="cb1-22">colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> L <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> Y_train]</span>
<span id="cb1-23">plt.scatter(X_train[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], X_train[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Logistics regression'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/1b6f06d5-4-image.png" class="img-fluid figure-img"></p>
<figcaption>image.png</figcaption>
</figure>
</div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 학습</span></span>
<span id="cb2-2">tf.random.set_seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>)</span>
<span id="cb2-3">W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.Variable(tf.random.normal([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>))</span>
<span id="cb2-4">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.Variable(tf.random.normal([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>))</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> hypothesis(X):</span>
<span id="cb2-7">    z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.matmul(X, W) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="cb2-8">    sigmoid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tf.exp(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>z))</span>
<span id="cb2-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> sigmoid</span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> cost_fn(H, Y):</span>
<span id="cb2-12">    cost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>tf.reduce_mean(Y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>tf.math.log(H) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>tf.math.log(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>H))</span>
<span id="cb2-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> cost</span>
<span id="cb2-14"></span>
<span id="cb2-15">learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb2-16">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.optimizers.SGD(learning_rate)</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> step <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5001</span>):</span>
<span id="cb2-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> g:</span>
<span id="cb2-20">        pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hypothesis(X_train)</span>
<span id="cb2-21">        cost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cost_fn(pred, Y_train)</span>
<span id="cb2-22"></span>
<span id="cb2-23">        gradients <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> g.gradient(cost, [W,b])</span>
<span id="cb2-24">    </span>
<span id="cb2-25">    optimizer.apply_gradients(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(gradients, [W, b]))</span>
<span id="cb2-26"></span>
<span id="cb2-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb2-28">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Step=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>step<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, Cost = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>cost<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, W=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>W<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>numpy()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, b = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>numpy()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb2-29"></span>
<span id="cb2-30">w_hat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> W.numpy()</span>
<span id="cb2-31">b_hat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b.numpy()</span></code></pre></div>
<blockquote class="blockquote">
<p>Step=1, Cost = 0.7932398319244385, W=[[-0.10415223] [0.68125504]], b = [0.3810195] <br> Step=1001, Cost = 0.5122759938240051, W=[[0.1809378] [0.55177015]], b = [-0.97815347] <br> Step=2001, Cost = 0.39883172512054443, W=[[0.5135696] [0.6884617]], b = [-1.9777462] <br> Step=3001, Cost = 0.32507583498954773, W=[[0.7515713] [0.8368167]], b = [-2.7877953] <br> Step=4001, Cost = 0.27400580048561096, W=[[0.9350327] [0.97824335]], b = [-3.4628296] <br> Step=5001, Cost = 0.2367737740278244, W=[[1.0848083] [1.1075894]], b = [-4.039375]</p>
</blockquote>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Slope(Coefficient) 확인</span></span>
<span id="cb3-2">slope <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w_hat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>w_hat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb3-3">xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(X_train[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]),np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(X_train[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># min과 max 사이 구간의 숫자를 생성. x값</span></span>
<span id="cb3-4">yy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>slope<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b_hat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>w_hat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]                             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># xx(x값)입력하여 y값 생성</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># train data분포</span></span>
<span id="cb3-7">plt.scatter(X_train[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], X_train[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Logistics regression'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 분류선(Decision Boundary)확인</span></span>
<span id="cb3-10">plt.plot(xx, yy, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Decision Boundary'</span>)</span>
<span id="cb3-11">plt.legend()</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/1b6f06d5-1-image-2.png" class="img-fluid figure-img"></p>
<figcaption>image-2.png</figcaption>
</figure>
</div>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confusion matrix</span></span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> confusion_matrix</span>
<span id="cb4-3"></span>
<span id="cb4-4">X_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],</span>
<span id="cb4-5">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>],</span>
<span id="cb4-6">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb4-7">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>],</span>
<span id="cb4-8">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>],</span>
<span id="cb4-9">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>]],</span>
<span id="cb4-10">                   dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)</span>
<span id="cb4-11">Y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],</span>
<span id="cb4-12">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],</span>
<span id="cb4-13">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb4-14">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],</span>
<span id="cb4-15">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb4-16">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],],</span>
<span id="cb4-17">                   dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)</span>
<span id="cb4-18"></span>
<span id="cb4-19">Y_actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Y_test</span>
<span id="cb4-20">Y_predicted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hypothesis(X_test)</span>
<span id="cb4-21">Y_predicted_binary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.where(Y_predicted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-22"></span>
<span id="cb4-23">CM_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> confusion_matrix(Y_actual, Y_predicted_binary, labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) </span>
<span id="cb4-24">CM_array</span></code></pre></div>
<blockquote class="blockquote">
<p>array([[2, 2],<br> [1, 1]], dtype=int64)</p>
</blockquote>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confusion matrix 시각화(seaborn)</span></span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb5-4"></span>
<span id="cb5-5">class_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Negative'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Positive'</span>]</span>
<span id="cb5-6">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb5-7">sns.heatmap(CM_array, annot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Blues'</span>,</span>
<span id="cb5-8">            xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>class_labels, yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>class_labels)</span>
<span id="cb5-9"></span>
<span id="cb5-10">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Confusion Matrix'</span>)</span>
<span id="cb5-11">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb5-12">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'True'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/1b6f06d5-2-image-3.png" class="img-fluid figure-img"></p>
<figcaption>image-3.png</figcaption>
</figure>
</div>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confusion matrix 시각화(Scikit-learn)</span></span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> confusion_matrix, ConfusionMatrixDisplay</span>
<span id="cb6-3"></span>
<span id="cb6-4">disp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ConfusionMatrixDisplay(confusion_matrix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>CM_array, display_labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb6-5">disp.plot(cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.cm.Blues)</span>
<span id="cb6-6">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Confusion Matrix'</span>)</span>
<span id="cb6-7">plt.show()</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/1b6f06d5-3-image-4.png" class="img-fluid figure-img"></p>
<figcaption>image-4.png</figcaption>
</figure>
</div>
</section>
<section id="multi-class-classfication-regression" class="level2">
<h2 class="anchored" data-anchor-id="multi-class-classfication-regression">Multi-class Classfication regression</h2>
<ul>
<li><p>2가지 분류가 아닌 3가지 이상의 분류(A,B,C로 나누는 신용등급 등)</p></li>
<li><p>Binary classification과 달리 하나의 Decision boundary로는 해결 불가</p></li>
<li><p>One vs All(Rest)</p>
<ul>
<li>하나의 대상과, 아닌 것’들’로 Binary Classification을 여러번 수행</li>
<li>예를 들어 a, b, c 3가지를 분류하는 경우
<ul>
<li>아래와 같은 같은 3개의 식으로 표현할 수 있고,<br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/00653178-3-image.png" class="img-fluid" alt="image.png"></li>
<li>아래와 같이 하나의 행렬로 한번에 표현할 수 있다 <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/00653178-1-image-2.png" class="img-fluid" alt="image-2.png"></li>
</ul></li>
<li>Softmax : 각 결과값(<img src="https://latex.codecogs.com/png.latex?H_a,%20H_b,%20H_c">)의 비율(확률)이 나오게 됨(총합이 1)</li>
</ul></li>
<li><p>Cross entropy cost function</p>
<ul>
<li><p><strong>정보량은 확률에 반비례한다고 정의</strong> (정보량= $ 1 p$)</p>
<ul>
<li>특정 성씨의 사람을 뽑는다고 할 때, 한국의 주요 성씨인 김씨<img src="https://latex.codecogs.com/png.latex?1%20%5Cover%2010"> vs 소수 성씨인 남궁씨<img src="https://latex.codecogs.com/png.latex?1%20%5Cover%20100"></li>
</ul></li>
<li><p>로그를 취하여 전개하면 Cross entropy 식이 된다</p></li>
<li><p>Entropy : Measure for uncertainty (불확실성의 측정) <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/00653178-2-image-3.png" class="img-fluid" alt="image-3.png"></p></li>
<li><p>Case별 Cross entropy(cost function)</p>
<ul>
<li>출력값(결과값 softmax)과 실제값이 비슷한 경우 : 특정 값 산출</li>
<li>출력값(결과값 softmax)과 실제값이 완전히 다른 경우 : 무한대</li>
<li>출력값(결과값 softmax)과 실제값이 완전히 동일한 경우 : 0</li>
</ul></li>
<li><p>Cross entropy를 개인이 직접구현한다면 놓칠 수 있는 부분(cross entropy의 무한대)의 문제</p>
<ul>
<li>파이토치 등 많은 사람이 참여한 패키지를 사용하면 방지할 수 있음</li>
<li>컴퓨터에서의 Zero division error 등의 경우, 텐서플로우 등 패키지에선 분모에 0.00001등을 더하여 실제값엔 영향이 작게하며 오류 제거</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="softmax" class="level1">
<h1>Softmax</h1>
<ul>
<li><p>Multi class 분류에서 많이 하는 것 : 이미지 분류</p>
<ul>
<li>Image X가 함수f(x)[모델]를 통과하여 Label Y(Class)로 산출</li>
<li>Image데이터는 컴퓨터에게는 숫자로 이루어진 행렬로 보여짐</li>
</ul></li>
<li><p>아래의 경우에서 W의 차원은? (<img src="https://latex.codecogs.com/png.latex?Y=W*X+B">) → (10*3072)</p>
<ul>
<li>X : Image (3072<em>1) (실제로는 32[가로] </em> 32[세로] * 3[RGB])</li>
<li>Y : 고양이/자동차/새 등 Label (10 * 1)</li>
<li>B : (10*1)</li>
</ul></li>
<li><p>계산속도를 높이기 위한 방법</p>
<ul>
<li>곱하기 한번으로 값이 나오게끔 계산횟수를 줄임<br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/c12fd90a-1-image.png" class="img-fluid" alt="image.png"></li>
</ul></li>
<li><p>Flatten</p>
<ul>
<li>(2, 2)를 (4, 1)로 변경</li>
</ul></li>
<li><p>학습한 W를 시각화하면, 분류하고자 하는 것의 형태가 어느정도보임(고양이 분류를 위한 W라면 고양이 실루엣)</p></li>
<li><p>Softmax 함수</p>
<ul>
<li>Exponetial(<img src="https://latex.codecogs.com/png.latex?e">)의 사용
<ul>
<li>음수가 Score로 나와서 확률적 해석에 방해되는 상황을 방지하기 위해 사용</li>
</ul></li>
<li>Sigmoid가 Binary classification에 대한 함수인 것과 달리, Multi-class에 대해 사용 가능</li>
</ul></li>
</ul>
</section>
<section id="loss-function" class="level1">
<h1>Loss function</h1>
<ul>
<li>0/1 Loss (가장 원시적)
<ul>
<li>맞으면 0, 틀리면 1</li>
<li>문제점 : 적게 틀린 것(고양이를 다른 동물로)과 많이 틀린 것(고양이를 자동차로)의 패널티가 같음</li>
</ul></li>
<li>Log loss
<ul>
<li>틀린/맞춘 정도에 따라 패널티를 부여</li>
</ul></li>
<li>Exponetial loss
<ul>
<li>틀렸을 때 더 강한 패널티(기울기)</li>
</ul></li>
<li>Hinge loss
<ul>
<li>SVM(Support Vector Machine)에서 많이 사용</li>
</ul></li>
</ul>
</section>
<section id="cross-entropy" class="level1">
<h1>Cross entropy</h1>
<ul>
<li>Binary 상황에서의 Cross entropy 수식 <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/83629cdf-2-image.png" class="img-fluid" alt="image.png"></li>
<li>Multi class 상황에서의 Cross entropy 수식<br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/83629cdf-1-image-2.png" class="img-fluid" alt="image-2.png"></li>
</ul>
</section>
<section id="stochastic-gradient-descent" class="level1">
<h1>Stochastic Gradient Descent</h1>
<ul>
<li>Stochastic Gradient Descent : 데이터를 메모리 상황에 맞게 쪼개서 넣는 방식
<ul>
<li>예를 들어, 메모리 1GB/학습할 데이터 100GB 라면 데이터를 쪼개서 넣는 것</li>
<li>학습용 메모리 확보의 어려움 : V-Ram(그래픽카드 메모리)는 D-Ram(일반 램)보다 매우 비쌈</li>
<li>데이터는 많으므로 확보된 메모리에 맞게 데이터를 쪼개서 GD 진행</li>
</ul></li>
<li>Batch size(Minibatch) : 나눈 데이터의 단위
<ul>
<li>예를 들어 100을 1씩 나누었다면, Minibatch가 1이다 와 같이 표현함</li>
<li>Batch size는 2의 배수로 넣는 것이 관례</li>
<li>1만개의 데이터를 100으로 나누었다면, 경사하강법(GD)을 100회 진행</li>
</ul></li>
<li>Epoch, Step
<ul>
<li>100만개의 데이터를 1만개로 나눴고, 1만개를 100회 넣어 전체데이터를 1번 넣었다면?
<ul>
<li>1 Epoch (모든 데이터가 다 들어가야 1 epoch)</li>
<li>100 Step (데이터를 넣은 횟수)</li>
<li>Step횟수 &gt; Epoch횟수</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="neural-networks" class="level1">
<h1>Neural Networks</h1>
<ul>
<li><p>이미지나 오디오, 텍스트 등 비정형데이터를 처리하기 위해 만들어진 아키텍쳐</p></li>
<li><p>MLP : XOR문제를 풀 수 없는 상황에서, 사람의 신경망에서 착안하여 해결</p>
<ul>
<li>중간 신경망(hidden layer)하여, Multi Layer Perceptron(MLP)</li>
<li>위에서 진행한 Multi classification은 1 layer라면, MLP는 layer가 더 추가된 것</li>
<li>다양한 관계를 복합적으로 표현</li>
</ul></li>
<li><p>중간에 Activation function을 넣어 비선형성을 추가</p>
<ul>
<li>Sigmoid, tanh, ReLU 등 (ReLU를 많이 사용)</li>
</ul></li>
<li><p>Forward pass vs Back propagation</p>
<ul>
<li>Forward pass : 순서대로 계산</li>
<li>Back propagation : 뒤에서부터 앞쪽으로 미분(시작값은 1)
<ul>
<li>Chain rule를 활용
<ul>
<li>Upstream gradient에 Local grandient를 곱해 Downstream gradient가 나옴</li>
</ul></li>
<li>Forward pass대비 계산량이 적은 이점이 있다
<ul>
<li>Parameter <img src="https://latex.codecogs.com/png.latex?W_1">(계산량 10만), <img src="https://latex.codecogs.com/png.latex?W_2">(계산량 5만)가 있을 때,
<ul>
<li>Forward pass가 <img src="https://latex.codecogs.com/png.latex?W_1">의 중복계산이 발생</li>
<li>Back propagation은 Upstream의 값을 저장해두었다가 사용, 필요한 계산만 추가계산</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
<li><p>Patterns in Gradient Flow</p>
<ul>
<li>계산노드의 고정 : 미리 정해두면 Backpropagation미분계산을 빠르게 진행할 수 있음
<ul>
<li>1.0 Tensorflow가 Flexble하지 않지만 빠른 이유는 이런 계산노드의 고정 때문</li>
</ul></li>
<li>add gate(gradient distributor) : Upstream을 그대로 downstream으로</li>
<li>mul gate(swap multiplier) : downstream을 upstream에 곱해 반대쪽 downstream으로</li>
<li>copy gate(gradient adder)</li>
<li>max gate(gradient router)</li>
</ul></li>
</ul>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>파이썬</category>
  <category>머신러닝</category>
  <category>딥러닝</category>
  <category>MStudy</category>
  <guid>https://kr9268.github.io/posts/meta-dl-creditcard-20240609/</guid>
  <pubDate>Sun, 09 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[공모전] 공공데이터 공모전-2(github온라인db)</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/dtcontest-ore-20240610/</link>
  <description><![CDATA[ 





<p>2024년 12회 산업통상자원부 공공데이터 활용 아이디어 공모전 참가 기록.(+github활용한 온라인db구축)</p>
<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<ul>
<li>2024년 12회 산업통상자원부 공공데이터 활용 아이디어 공모전 참가해보기로 함
<ul>
<li>https://datacontest.kr/apply/applyAdd/3</li>
</ul></li>
<li>단순 API로딩이 아니라, 각자 바로 데이터를 로딩할 수 있는 매체에 대한 고민 후 구현
<ul>
<li>코딩이 익숙하지 않은 팀원이 쉽게 이용할 수 있도록하고, readme에 바로 사용할 수 있게 샘플코드 제공</li>
<li>github를 활용해 pandas에서 바로 로딩할 수 있도록 구현</li>
</ul></li>
</ul>
</section>
<section id="내용정리" class="level2">
<h2 class="anchored" data-anchor-id="내용정리">내용정리</h2>
<section id="도입목적" class="level3">
<h3 class="anchored" data-anchor-id="도입목적">도입목적</h3>
<ul>
<li>본격적으로 모델 학습을 하기 전, 데이터 이용 편의를 증진하고자 함</li>
<li>팀원들이 R이나 통계분석에는 익숙하나 파이썬 코딩에는 익숙하지않아, 최대한 모델링에 집중하도록 지원
<ul>
<li>하나의 repository에서 원하는 데이터를 한번에 확인 가능</li>
<li>업데이트 일자를 표기하여 얼마나 최신 데이터인지 확인 가능</li>
</ul></li>
<li>데이터를 하나의 페이지에서 통합관리(공공데이터 홈페이지 접속 등 불필요)</li>
<li>개인서버(NAS)에서 매일 특정시간 구동하여 별도의 수작업없이 자동으로 최신화</li>
</ul>
</section>
<section id="구동방식" class="level3">
<h3 class="anchored" data-anchor-id="구동방식">구동방식</h3>
<ul>
<li>공공데이터 리스트와 API키가 저장된 json파일 로딩</li>
<li>지정된 공공데이터를 다운로드하고 csv파일로 저장</li>
<li>바로 로딩하기위한 파일 주소생성, 업데이트 날짜 저장</li>
<li>README 파일에 파일주소와 업데이트 날짜 등 업데이트</li>
<li>git_push함수로 github repository에 자동업로드</li>
</ul>
</section>
<section id="github-reposiroty주소" class="level3">
<h3 class="anchored" data-anchor-id="github-reposiroty주소">github reposiroty주소</h3>
<p><a href="https://github.com/KR9268/db_datagokr">https://github.com/KR9268/db_datagokr</a></p>
</section>
<section id="샘플코드패키지-및-함수" class="level3">
<h3 class="anchored" data-anchor-id="샘플코드패키지-및-함수">샘플코드(패키지 및 함수)</h3>
<div id="298e7956" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> subprocess</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> json_load(json_path, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utf-8'</span>):</span>
<span id="cb1-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(json_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>encoding) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb1-11">        json_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb1-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> json_data</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> request_and_to_json(url):</span>
<span id="cb1-15">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(url)</span>
<span id="cb1-16">    json_ob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(response.text)</span>
<span id="cb1-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> json_ob</span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> chk_json_status_of_data_go_kr(json_obj):</span>
<span id="cb1-20">    other_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'currentCount'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'matchCount'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'page'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'perPage'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'totalCount'</span>]</span>
<span id="cb1-21">    result_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb1-22">    </span>
<span id="cb1-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_column <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> other_data:</span>
<span id="cb1-24">        result_dict[each_column] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json_obj[each_column]  </span>
<span id="cb1-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result_dict </span>
<span id="cb1-26"></span>
<span id="cb1-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> download_from_data_go_kr_with_json(url):</span>
<span id="cb1-28">    json_ob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request_and_to_json(url)</span>
<span id="cb1-29"></span>
<span id="cb1-30">    json_status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chk_json_status_of_data_go_kr(json_ob)</span>
<span id="cb1-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> json_status[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'currentCount'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> json_status[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'totalCount'</span>]:</span>
<span id="cb1-32">        url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> url.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'perPage=1'</span>,<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'perPage=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>json_status[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"totalCount"</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb1-33">        json_ob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request_and_to_json(url)</span>
<span id="cb1-34"></span>
<span id="cb1-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> json_ob</span>
<span id="cb1-36"></span>
<span id="cb1-37"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> update_readme(new_content_list):</span>
<span id="cb1-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the README.md file in read mode</span></span>
<span id="cb1-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'README.md'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utf-8'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb1-40">        lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.readlines()</span>
<span id="cb1-41"></span>
<span id="cb1-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the index of the line that starts with '* 데이터 현황'</span></span>
<span id="cb1-43">    index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">next</span>((i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, line <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(lines) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> line.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'* 데이터 현황'</span>)), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb1-44"></span>
<span id="cb1-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If the line is found, remove the following lines and insert new content</span></span>
<span id="cb1-46">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> index <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb1-47">        lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lines[:index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the following lines</span></span>
<span id="cb1-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#lines.extend(new_content) # Insert new content</span></span>
<span id="cb1-49">        lines.extend(new_content_list) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Insert new content</span></span>
<span id="cb1-50"></span>
<span id="cb1-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the README.md file in write mode and write the updated content</span></span>
<span id="cb1-52">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'README.md'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>, encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utf-8'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb1-53">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.writelines(lines)</span>
<span id="cb1-54"></span>
<span id="cb1-55"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> git_push():</span>
<span id="cb1-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a list of all .csv files in the current directory</span></span>
<span id="cb1-57">    csv_files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [f <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> os.listdir(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> f.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.csv'</span>)]</span>
<span id="cb1-58"></span>
<span id="cb1-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Stage all .csv files</span></span>
<span id="cb1-60">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> csv_files:</span>
<span id="cb1-61">        subprocess.call([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'git'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'add'</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>])</span>
<span id="cb1-62"></span>
<span id="cb1-63">    subprocess.call([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'git'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'add'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'README.md'</span>])</span>
<span id="cb1-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Commit the changes with a message</span></span>
<span id="cb1-65">    subprocess.call([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'git'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'commit'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-m'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Automatic commit'</span>])</span>
<span id="cb1-66"></span>
<span id="cb1-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Push the changes to the remote repository</span></span>
<span id="cb1-68">    subprocess.call([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'git'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'push'</span>])</span></code></pre></div>
</div>
</section>
<section id="샘플코드메인코드" class="level3">
<h3 class="anchored" data-anchor-id="샘플코드메인코드">샘플코드(메인코드)</h3>
<div id="2a362ba2" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># json load</span></span>
<span id="cb2-2">serviceKey <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json_load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'option.json'</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'serviceKey'</span>]</span>
<span id="cb2-3">db_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json_load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'db_list.json'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cp949'</span>)</span></code></pre></div>
</div>
<div id="5a783f4f" class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># main</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 작업하기</span></span>
<span id="cb3-4">txt_for_readme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>]</span>
<span id="cb3-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> db_list:</span>
<span id="cb3-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다운로드</span></span>
<span id="cb3-7">    url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>each[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'base_url'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>each[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'address_get'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">?page=1&amp;perPage=1&amp;serviceKey=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>serviceKey<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-8">    json_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> download_from_data_go_kr_with_json(url)</span>
<span id="cb3-9">    result_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chk_json_status_of_data_go_kr(json_data)</span>
<span id="cb3-10">    </span>
<span id="cb3-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 저장</span></span>
<span id="cb3-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'currentCount'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> result_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'totalCount'</span>]:</span>
<span id="cb3-13">        pd.json_normalize(json_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>]).to_csv(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>each[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'file_name_to'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.csv"</span>,encoding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cp949'</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-14"></span>
<span id="cb3-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 파일주소 및 이름, 업데이트시간 저장</span></span>
<span id="cb3-16">    owner <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'KR9268'</span></span>
<span id="cb3-17">    repo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'db_datagokr'</span></span>
<span id="cb3-18">    branch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main'</span></span>
<span id="cb3-19">    file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>each[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'file_name_to'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.csv"</span></span>
<span id="cb3-20"></span>
<span id="cb3-21">    url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://raw.githubusercontent.com/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>owner<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>repo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>branch<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-22"></span>
<span id="cb3-23">    txt_for_readme.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  *  </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>datetime<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>strftime(datetime.now(),<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">업데이트 : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>each[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb3-24">    time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-25"></span>
<span id="cb3-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 업데이트 내역과 파일 git push</span></span>
<span id="cb3-27">update_readme(txt_for_readme)</span>
<span id="cb3-28">git_push()</span></code></pre></div>
</div>


</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>공모전</category>
  <category>공공데이터</category>
  <category>분석</category>
  <category>공공데이터API</category>
  <category>github</category>
  <guid>https://kr9268.github.io/posts/dtcontest-ore-20240610/</guid>
  <pubDate>Sat, 08 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[공모전] 공공데이터 공모전-1(대상광물 분석, 공공데이터API)</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/dtcontest-ore-20240608/</link>
  <description><![CDATA[ 





<p>2024년 12회 산업통상자원부 공공데이터 활용 아이디어 공모전 참가 기록.(+공공데이터 API활용샘플)</p>
<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<ul>
<li>2024년 12회 산업통상자원부 공공데이터 활용 아이디어 공모전 참가해보기로 함
<ul>
<li>https://datacontest.kr/apply/applyAdd/3</li>
</ul></li>
<li>공공데이터를 csv로 저장하지 않고 API로 활용해보기로 함</li>
</ul>
</section>
<section id="내용정리" class="level2">
<h2 class="anchored" data-anchor-id="내용정리">내용정리</h2>
<section id="과제-요약" class="level3">
<h3 class="anchored" data-anchor-id="과제-요약">과제 요약</h3>
<ul>
<li><code>과제명</code> : 핵심 광물별 공급위기 요소 탐지 모델 개발</li>
<li><code>과제 개요</code> : 핵심광물별 가격 변동성, 시세, 생산·수입국 현황 등으로 핵심 광물별로 공급 리스크를 줄일 수 있는 위기 요소 탐지 분석 모델 개발</li>
<li><code>제출 서류</code> : 분석 결과보고서(양식활용), 분석 코드, 근거데이터 파일</li>
<li><code>활용 계획</code> : 전기차 배터리, 반도체 등 첨단산업 민간기업에 다양한 핵심광물 수급현황 위기 요소 탐지에 대한 분석 방법, 결과 등을 제공하여 안정적인 수급리스크 정보지원 강화</li>
<li><code>유의사항</code>
<ul>
<li>핵심광물의 수급현황 등을 기반으로 위기요소 탐지 분석
<ul>
<li>광물가격 급등 등 변동성, 국제시세, 주요 생산·수입국 현황, 수입량·수입금액·수입의존도, 국내 비축확보율, 재자원화율 및 국내 주요 수요기업 정보 등</li>
</ul></li>
<li>인터넷에 공개되어 있는 모든 가용 데이터를 사용하여 자유롭게 작성
<ul>
<li>단, 사용한 데이터는 출처를 표기하여 근거데이터로 제출<br>(참고 사이트 : 관세청, 외교부, 기재부, 산업부, 무역협회, 수출입은행 등)</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="분석대상-광물선정" class="level3">
<h3 class="anchored" data-anchor-id="분석대상-광물선정">분석대상 광물선정</h3>
<ul>
<li>공모전 인지 및 시작이 늦어서, <code>최대한 효율적</code>으로 진행하고자 함(1달이내 남음)</li>
<li>분석대상 광물을 공모전에 언급된 모든 광물보다는, <code>중요한 광물 위주</code>로 진행해보고자 함
<ul>
<li>공모전에 언급된 광물 : 텅스텐, 코발트, 리튬, 망간, 니켈</li>
</ul></li>
<li>고려 요소
<ul>
<li>업종별 소요량 등을 기준으로 가장 공통적인/주요한 광물을 찾아보고자 함</li>
<li><strong>상기 자료는 찾기가 어려워, 생산량, 소비량, 수출입물량을 기준으로 상대적 비교를 해보고자 함</strong></li>
</ul></li>
</ul>
</section>
<section id="공공데이터포털-api사용을-위한-파이썬-함수-작성" class="level3">
<h3 class="anchored" data-anchor-id="공공데이터포털-api사용을-위한-파이썬-함수-작성">공공데이터포털 API사용을 위한 파이썬 함수 작성</h3>
<ul>
<li>API로 데이터 호출해보니 아래의 내용을 확인할 수 있었음
<ul>
<li>호출 url의 ’perPage’를 활용해 한번에 가져올 <code>데이터 수(행)을 정할 수 있음</code></li>
<li>호출된 json에서 currentCount와 totalCount로 <code>가져온 데이터와 전체 데이터를 확인할 수 있음</code></li>
</ul></li>
<li>확인한 내용을 기반으로, 공공데이터포털에서 <code>json을 지원하는 데이터는 별도 조작없이 가능하게 하자는 목적</code>으로 함수작성함
<ul>
<li>일단 1개만 호출하여 전체 데이터 수량을 확인하고, perPage값을 바꿔 전체 데이터를 불러옴</li>
</ul></li>
</ul>
<div id="30fb2bf5" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> request_and_to_json(url):</span>
<span id="cb1-6">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(url)</span>
<span id="cb1-7">    json_ob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(response.text)</span>
<span id="cb1-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> json_ob</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> chk_json_status_of_data_go_kr(json_obj):</span>
<span id="cb1-11">    other_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'currentCount'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'matchCount'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'page'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'perPage'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'totalCount'</span>]</span>
<span id="cb1-12">    result_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb1-13">    </span>
<span id="cb1-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> each_column <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> other_data:</span>
<span id="cb1-15">        result_dict[each_column] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json_obj[each_column]  </span>
<span id="cb1-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result_dict </span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> download_from_data_go_kr_with_json(url):</span>
<span id="cb1-19">    json_ob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request_and_to_json(url)</span>
<span id="cb1-20"></span>
<span id="cb1-21">    json_status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> chk_json_status_of_data_go_kr(json_ob)</span>
<span id="cb1-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> json_status[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'currentCount'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> json_status[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'totalCount'</span>]:</span>
<span id="cb1-23">        url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> url.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'perPage=1'</span>,<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'perPage=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>json_status[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"totalCount"</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb1-24">        json_ob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> request_and_to_json(url)</span>
<span id="cb1-25"></span>
<span id="cb1-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> json_ob</span></code></pre></div>
</div>
<div id="ebc946ef" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># API사용을 위한 개인키 입력</span></span>
<span id="cb2-2">serviceKey <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'(개인키)'</span></span></code></pre></div>
</div>
</section>
<section id="개별분석" class="level3">
<h3 class="anchored" data-anchor-id="개별분석">개별분석</h3>
<section id="광종별-소요량" class="level4">
<h4 class="anchored" data-anchor-id="광종별-소요량">광종별 소요량</h4>
<ul>
<li>공공데이터포털 - 한국광해광업공단_광종별 소비현황 <br> https://www.data.go.kr/data/3070245/fileData.do#tab-layer-file</li>
</ul>
<div id="5c2c4e8e" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">base_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://api.odcloud.kr/api'</span></span>
<span id="cb3-2">address_get <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/3070245/v1/uddi:d950e6bc-e6a0-407c-baad-dfa87d739ff1_202004091120'</span></span>
<span id="cb3-3">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>base_url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>address_get<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">?page=1&amp;perPage=1&amp;serviceKey=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>serviceKey<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb3-4">json_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> download_from_data_go_kr_with_json(url)</span>
<span id="cb3-5">chk_json_status_of_data_go_kr(json_1)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>{'currentCount': 410,
 'matchCount': 410,
 'page': 1,
 'perPage': 410,
 'totalCount': 410}</code></pre>
</div>
</div>
<div id="274a3005" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">df_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.json_normalize(json_1[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>])</span>
<span id="cb5-2">df_1</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2011 소비량</th>
<th data-quarto-table-cell-role="th">2012 소비량</th>
<th data-quarto-table-cell-role="th">2013 소비량</th>
<th data-quarto-table-cell-role="th">2014 소비량</th>
<th data-quarto-table-cell-role="th">2015 소비량</th>
<th data-quarto-table-cell-role="th">2016 소비량</th>
<th data-quarto-table-cell-role="th">2017 소비량</th>
<th data-quarto-table-cell-role="th">2018 소비량</th>
<th data-quarto-table-cell-role="th">2019 소비량</th>
<th data-quarto-table-cell-role="th">2020 소비량</th>
<th data-quarto-table-cell-role="th">2021 소비량</th>
<th data-quarto-table-cell-role="th">2022 소비량</th>
<th data-quarto-table-cell-role="th">2023 소비량</th>
<th data-quarto-table-cell-role="th">광종</th>
<th data-quarto-table-cell-role="th">국가</th>
<th data-quarto-table-cell-role="th">단위</th>
<th data-quarto-table-cell-role="th">대륙</th>
<th data-quarto-table-cell-role="th">품목</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>293.867</td>
<td>253.700</td>
<td>201.000</td>
<td>225.800</td>
<td>220.751</td>
<td>226.106</td>
<td>247.578</td>
<td>260.381</td>
<td>246.674</td>
<td>190.106</td>
<td>198.989</td>
<td>337.973</td>
<td>272.189</td>
<td>알루미늄</td>
<td>Austria</td>
<td>천톤</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>10.200</td>
<td>10.200</td>
<td>10.200</td>
<td>29.598</td>
<td>21.898</td>
<td>30.197</td>
<td>27.001</td>
<td>27.052</td>
<td>31.673</td>
<td>29.178</td>
<td>39.481</td>
<td>3.276</td>
<td>2.400</td>
<td>알루미늄</td>
<td>Belarus</td>
<td>천톤</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>382.312</td>
<td>344.280</td>
<td>236.780</td>
<td>202.967</td>
<td>231.648</td>
<td>184.982</td>
<td>212.039</td>
<td>233.065</td>
<td>181.368</td>
<td>138.809</td>
<td>204.808</td>
<td>257.193</td>
<td>160.985</td>
<td>알루미늄</td>
<td>Belgium</td>
<td>천톤</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>52.188</td>
<td>53.527</td>
<td>60.645</td>
<td>87.027</td>
<td>109.824</td>
<td>110.526</td>
<td>109.522</td>
<td>111.927</td>
<td>119.211</td>
<td>95.958</td>
<td>128.057</td>
<td>121.134</td>
<td>97.254</td>
<td>알루미늄</td>
<td>Bulgaria</td>
<td>천톤</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>77.771</td>
<td>83.684</td>
<td>76.755</td>
<td>66.065</td>
<td>24.672</td>
<td>52.033</td>
<td>96.463</td>
<td>112.930</td>
<td>136.757</td>
<td>143.869</td>
<td>159.163</td>
<td>135.867</td>
<td>129.308</td>
<td>알루미늄</td>
<td>Croatia</td>
<td>천톤</td>
<td>EUROPE</td>
<td>refined</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">405</td>
<td>939.000</td>
<td>892.000</td>
<td>935.000</td>
<td>962.000</td>
<td>931.000</td>
<td>788.980</td>
<td>829.000</td>
<td>1800.000</td>
<td>1800.000</td>
<td>950.000</td>
<td>878.000</td>
<td>973.000</td>
<td>911.000</td>
<td>아연</td>
<td>U.S.A.</td>
<td>천톤</td>
<td>AMERICA</td>
<td>slab</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">406</td>
<td>0.000</td>
<td>0.520</td>
<td>0.514</td>
<td>0.304</td>
<td>0.449</td>
<td>0.316</td>
<td>0.312</td>
<td>0.235</td>
<td>0.235</td>
<td>0.299</td>
<td>0.350</td>
<td>0.360</td>
<td>0.371</td>
<td>아연</td>
<td>Uruguay</td>
<td>천톤</td>
<td>AMERICA</td>
<td>slab</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">407</td>
<td>10.430</td>
<td>6.656</td>
<td>9.014</td>
<td>4.872</td>
<td>2.246</td>
<td>1.994</td>
<td>0.685</td>
<td>0.596</td>
<td>0.596</td>
<td>0.442</td>
<td>0.360</td>
<td>0.300</td>
<td>0.370</td>
<td>아연</td>
<td>Venezuela</td>
<td>천톤</td>
<td>AMERICA</td>
<td>slab</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">408</td>
<td>207.319</td>
<td>116.293</td>
<td>180.000</td>
<td>174.400</td>
<td>176.000</td>
<td>178.000</td>
<td>145.000</td>
<td>146.700</td>
<td>146.700</td>
<td>135.000</td>
<td>122.000</td>
<td>125.000</td>
<td>96.000</td>
<td>아연</td>
<td>Australia</td>
<td>천톤</td>
<td>OCEANIA</td>
<td>slab</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">409</td>
<td>11.023</td>
<td>9.275</td>
<td>8.844</td>
<td>7.238</td>
<td>6.876</td>
<td>8.684</td>
<td>10.631</td>
<td>11.550</td>
<td>11.550</td>
<td>10.653</td>
<td>10.332</td>
<td>9.407</td>
<td>6.405</td>
<td>아연</td>
<td>New Zealand</td>
<td>천톤</td>
<td>OCEANIA</td>
<td>slab</td>
</tr>
</tbody>
</table>

<p>410 rows × 18 columns</p>
</div>
</div>
</div>
<div id="102fce0c" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 광종 및 소비량 확인</span></span>
<span id="cb6-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df_1[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광종'</span>].unique())</span>
<span id="cb6-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df_1.columns)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['알루미늄' '카드뮴' '동' '연' '니켈' '주석' '아연']
Index(['2011 소비량', '2012 소비량', '2013 소비량', '2014 소비량', '2015 소비량', '2016 소비량',
       '2017 소비량', '2018 소비량', '2019 소비량', '2020 소비량', '2021 소비량', '2022 소비량',
       '2023 소비량', '광종', '국가', '단위', '대륙', '품목'],
      dtype='object')</code></pre>
</div>
</div>
<div id="a15c5c66" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># str처리된 float값 변환</span></span>
<span id="cb8-2">df_1[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2011 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2012 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2013 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2014 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2015 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2016 소비량'</span>,</span>
<span id="cb8-3">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2018 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022 소비량'</span>,</span>
<span id="cb8-4">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023 소비량'</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_1[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2011 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2012 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2013 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2014 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2015 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2016 소비량'</span>,</span>
<span id="cb8-5">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2018 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022 소비량'</span>,</span>
<span id="cb8-6">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023 소비량'</span>]].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)</span>
<span id="cb8-7">df_1.info()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 410 entries, 0 to 409
Data columns (total 18 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   2011 소비량  409 non-null    float64
 1   2012 소비량  410 non-null    float64
 2   2013 소비량  410 non-null    float64
 3   2014 소비량  410 non-null    float64
 4   2015 소비량  410 non-null    float64
 5   2016 소비량  410 non-null    float64
 6   2017 소비량  410 non-null    float64
 7   2018 소비량  410 non-null    float64
 8   2019 소비량  410 non-null    float64
 9   2020 소비량  410 non-null    float64
 10  2021 소비량  410 non-null    float64
 11  2022 소비량  410 non-null    float64
 12  2023 소비량  410 non-null    float64
 13  광종        410 non-null    object 
 14  국가        410 non-null    object 
 15  단위        410 non-null    object 
 16  대륙        410 non-null    object 
 17  품목        410 non-null    object 
dtypes: float64(13), object(5)
memory usage: 57.8+ KB</code></pre>
</div>
</div>
<div id="e65afe5c" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 광종별 소비량</span></span>
<span id="cb10-2">df1_consume <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_1.groupby(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광종'</span>])[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2011 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2012 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2013 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2014 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2015 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2016 소비량'</span>,</span>
<span id="cb10-3">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2018 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021 소비량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022 소비량'</span>,</span>
<span id="cb10-4">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023 소비량'</span>]].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb10-5">df1_consume</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2011 소비량</th>
<th data-quarto-table-cell-role="th">2012 소비량</th>
<th data-quarto-table-cell-role="th">2013 소비량</th>
<th data-quarto-table-cell-role="th">2014 소비량</th>
<th data-quarto-table-cell-role="th">2015 소비량</th>
<th data-quarto-table-cell-role="th">2016 소비량</th>
<th data-quarto-table-cell-role="th">2017 소비량</th>
<th data-quarto-table-cell-role="th">2018 소비량</th>
<th data-quarto-table-cell-role="th">2019 소비량</th>
<th data-quarto-table-cell-role="th">2020 소비량</th>
<th data-quarto-table-cell-role="th">2021 소비량</th>
<th data-quarto-table-cell-role="th">2022 소비량</th>
<th data-quarto-table-cell-role="th">2023 소비량</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">광종</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">니켈</td>
<td>1651.690</td>
<td>1729.344</td>
<td>1794.140</td>
<td>1579.073</td>
<td>1730.944</td>
<td>1855.296</td>
<td>2090.518</td>
<td>2339.103</td>
<td>2430.139</td>
<td>2442.837</td>
<td>2962.181</td>
<td>3003.505</td>
<td>3171.547</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">동</td>
<td>19488.142</td>
<td>20281.667</td>
<td>21085.937</td>
<td>22704.666</td>
<td>22716.929</td>
<td>23112.305</td>
<td>23236.699</td>
<td>23825.029</td>
<td>23937.201</td>
<td>24764.119</td>
<td>24777.553</td>
<td>25897.648</td>
<td>27632.445</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">아연</td>
<td>12510.399</td>
<td>12055.051</td>
<td>12885.691</td>
<td>13796.903</td>
<td>13784.174</td>
<td>13863.425</td>
<td>14058.430</td>
<td>14021.779</td>
<td>14021.779</td>
<td>13603.269</td>
<td>13257.980</td>
<td>13839.233</td>
<td>14185.938</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">알루미늄</td>
<td>44428.294</td>
<td>47851.313</td>
<td>50670.176</td>
<td>54045.963</td>
<td>56775.631</td>
<td>59293.053</td>
<td>59905.431</td>
<td>62043.652</td>
<td>62608.661</td>
<td>63407.663</td>
<td>68102.645</td>
<td>67853.241</td>
<td>68826.117</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">연</td>
<td>10459.383</td>
<td>10506.481</td>
<td>11288.386</td>
<td>10863.942</td>
<td>11293.988</td>
<td>11533.887</td>
<td>12240.931</td>
<td>12354.902</td>
<td>12686.026</td>
<td>11897.099</td>
<td>14463.857</td>
<td>14831.478</td>
<td>14532.497</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">주석</td>
<td>372.530</td>
<td>353.471</td>
<td>355.130</td>
<td>389.926</td>
<td>363.759</td>
<td>380.857</td>
<td>375.021</td>
<td>373.503</td>
<td>362.765</td>
<td>380.887</td>
<td>374.583</td>
<td>359.100</td>
<td>344.361</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">카드뮴</td>
<td>23933.352</td>
<td>23396.250</td>
<td>27150.332</td>
<td>28807.514</td>
<td>27119.446</td>
<td>27233.503</td>
<td>26733.110</td>
<td>24011.194</td>
<td>20911.834</td>
<td>19882.427</td>
<td>19813.410</td>
<td>19521.471</td>
<td>19994.543</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="8489e293" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb11-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> koreanize_matplotlib</span>
<span id="cb11-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb11-4"></span>
<span id="cb11-5">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb11-6">sns.heatmap(df1_consume, annot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, fmt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".0f"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240608/index_files/figure-html/cell-9-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>상대적으로 알루미늄의 소비량이 가장 많음
<ul>
<li>공모전 조원에게 받은 한국지질자원연구서의 보고서에 따르면, 지각 내에 3번째로 많이 들어있음 (2022.02 비철금속 비축 효과성/타당성 평가분석 및 중장기 정부비축방향)</li>
<li>항공, 건축, 전기, 내화 등 다양한 용도로 사용되고 있으며, 4차 핵심사업의 용도로는 부합하지 않는 것으로 판단됨</li>
</ul></li>
</ul>
<div id="0a38a33b" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df_1[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광종'</span>].unique():</span>
<span id="cb12-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ore <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'알루미늄'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> ore <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'카드뮴'</span>:</span>
<span id="cb12-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb12-4">    df1_consume.loc[ore].plot()</span>
<span id="cb12-5">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240608/index_files/figure-html/cell-10-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>알루미늄을 제외하고 소비량이 상승하고 있는 광물 위주로 추림
<ul>
<li>앞서 알루미늄에 대한 시각과 같이 4차 핵심사업의 용도로는 <code>니켈</code>만이 유력</li>
</ul></li>
</ul>
<div id="ccecbf6f" class="cell" data-execution_count="84">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">df1_consume.loc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'니켈'</span>].plot()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240608/index_files/figure-html/cell-11-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="광종별-생산량" class="level4">
<h4 class="anchored" data-anchor-id="광종별-생산량">광종별 생산량</h4>
<ul>
<li>공공데이터포털 - 한국광해광업공단_광종별 국가별 생산량 <br> https://www.data.go.kr/data/3070256/fileData.do#/API%20%EB%AA%A9%EB%A1%9D/getuddi%3A6d31d5bc-5487-4fa1-a335-90f9d9623cc8_202004080953</li>
</ul>
<div id="5f585727" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">base_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://api.odcloud.kr/api'</span></span>
<span id="cb14-2">address_get <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/3070256/v1/uddi:6d31d5bc-5487-4fa1-a335-90f9d9623cc8_202004080953'</span></span>
<span id="cb14-3">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>base_url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>address_get<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">?page=1&amp;perPage=1&amp;serviceKey=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>serviceKey<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb14-4"></span>
<span id="cb14-5">json_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> download_from_data_go_kr_with_json(url)</span>
<span id="cb14-6">chk_json_status_of_data_go_kr(json_2)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>{'currentCount': 695,
 'matchCount': 695,
 'page': 1,
 'perPage': 695,
 'totalCount': 695}</code></pre>
</div>
</div>
<div id="eded5228" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">df_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.json_normalize(json_2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>])</span>
<span id="cb16-2">df_2</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2011 생산량</th>
<th data-quarto-table-cell-role="th">2012 생산량</th>
<th data-quarto-table-cell-role="th">2013 생산량</th>
<th data-quarto-table-cell-role="th">2014 생산량</th>
<th data-quarto-table-cell-role="th">2015 생산량</th>
<th data-quarto-table-cell-role="th">2016 생산량</th>
<th data-quarto-table-cell-role="th">2017 생산량</th>
<th data-quarto-table-cell-role="th">2018 생산량</th>
<th data-quarto-table-cell-role="th">2019 생산량</th>
<th data-quarto-table-cell-role="th">2020 생산량</th>
<th data-quarto-table-cell-role="th">2021 생산량</th>
<th data-quarto-table-cell-role="th">2022 생산량</th>
<th data-quarto-table-cell-role="th">2023 생산량</th>
<th data-quarto-table-cell-role="th">광종</th>
<th data-quarto-table-cell-role="th">국가</th>
<th data-quarto-table-cell-role="th">단위</th>
<th data-quarto-table-cell-role="th">대륙</th>
<th data-quarto-table-cell-role="th">품목</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>561.354</td>
<td>800.316</td>
<td>657.100</td>
<td>605.215</td>
<td>787.404</td>
<td>738.612</td>
<td>740.380</td>
<td>760.244</td>
<td>1043.343</td>
<td>619.748</td>
<td>675.269</td>
<td>669.926</td>
<td>542.114</td>
<td>알루미늄</td>
<td>Bosnia</td>
<td>천톤</td>
<td>EUROPE</td>
<td>bauxite</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>11.900</td>
<td>9.800</td>
<td>12.200</td>
<td>11.800</td>
<td>14.300</td>
<td>14.100</td>
<td>14.500</td>
<td>13.800</td>
<td>13.800</td>
<td>알루미늄</td>
<td>Croatia</td>
<td>천톤</td>
<td>EUROPE</td>
<td>bauxite</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>80.800</td>
<td>90.129</td>
<td>100.000</td>
<td>71.100</td>
<td>70.000</td>
<td>110.000</td>
<td>110.000</td>
<td>110.000</td>
<td>120.760</td>
<td>123.496</td>
<td>142.764</td>
<td>120.000</td>
<td>120.000</td>
<td>알루미늄</td>
<td>France</td>
<td>천톤</td>
<td>EUROPE</td>
<td>bauxite</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>2324.000</td>
<td>1815.328</td>
<td>1844.000</td>
<td>1876.000</td>
<td>1831.270</td>
<td>1880.000</td>
<td>1927.145</td>
<td>1559.360</td>
<td>1379.123</td>
<td>1428.639</td>
<td>1227.000</td>
<td>1173.000</td>
<td>869.100</td>
<td>알루미늄</td>
<td>Greece</td>
<td>천톤</td>
<td>EUROPE</td>
<td>bauxite</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>277.800</td>
<td>255.100</td>
<td>93.700</td>
<td>14.400</td>
<td>8.300</td>
<td>16.700</td>
<td>4.000</td>
<td>5.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>알루미늄</td>
<td>Hungary</td>
<td>천톤</td>
<td>EUROPE</td>
<td>bauxite</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">690</td>
<td>662.151</td>
<td>648.619</td>
<td>651.637</td>
<td>649.218</td>
<td>683.118</td>
<td>691.400</td>
<td>598.438</td>
<td>620.202</td>
<td>654.971</td>
<td>685.400</td>
<td>639.843</td>
<td>569.613</td>
<td>502.000</td>
<td>아연</td>
<td>Canada</td>
<td>천톤</td>
<td>AMERICA</td>
<td>slab</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">691</td>
<td>322.116</td>
<td>323.569</td>
<td>322.781</td>
<td>320.924</td>
<td>326.834</td>
<td>321.166</td>
<td>327.000</td>
<td>335.942</td>
<td>393.418</td>
<td>368.200</td>
<td>357.000</td>
<td>328.727</td>
<td>344.151</td>
<td>아연</td>
<td>Mexico</td>
<td>천톤</td>
<td>AMERICA</td>
<td>slab</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">692</td>
<td>313.714</td>
<td>319.280</td>
<td>346.361</td>
<td>336.454</td>
<td>335.422</td>
<td>341.518</td>
<td>312.339</td>
<td>333.677</td>
<td>356.925</td>
<td>318.619</td>
<td>320.000</td>
<td>349.500</td>
<td>346.072</td>
<td>아연</td>
<td>Peru</td>
<td>천톤</td>
<td>AMERICA</td>
<td>slab</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">693</td>
<td>248.000</td>
<td>261.000</td>
<td>233.000</td>
<td>180.000</td>
<td>172.000</td>
<td>126.000</td>
<td>132.000</td>
<td>116.000</td>
<td>115.000</td>
<td>180.000</td>
<td>216.000</td>
<td>216.000</td>
<td>220.000</td>
<td>아연</td>
<td>U.S.A.</td>
<td>천톤</td>
<td>AMERICA</td>
<td>slab</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">694</td>
<td>517.000</td>
<td>508.000</td>
<td>504.000</td>
<td>488.000</td>
<td>489.000</td>
<td>470.000</td>
<td>471.000</td>
<td>491.000</td>
<td>436.000</td>
<td>447.300</td>
<td>432.512</td>
<td>385.032</td>
<td>467.044</td>
<td>아연</td>
<td>Australia</td>
<td>천톤</td>
<td>OCEANIA</td>
<td>slab</td>
</tr>
</tbody>
</table>

<p>695 rows × 18 columns</p>
</div>
</div>
</div>
<div id="1735d88b" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 광종 및 생산량 확인</span></span>
<span id="cb17-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df_2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광종'</span>].unique())</span>
<span id="cb17-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df_2.columns)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['알루미늄' '안티모니' '카드뮴' '동' '금' '연' '몰리브덴' '니켈' '은' '주석' '아연']
Index(['2011 생산량', '2012 생산량', '2013 생산량', '2014 생산량', '2015 생산량', '2016 생산량',
       '2017 생산량', '2018 생산량', '2019 생산량', '2020 생산량', '2021 생산량', '2022 생산량',
       '2023 생산량', '광종', '국가', '단위', '대륙', '품목'],
      dtype='object')</code></pre>
</div>
</div>
<div id="85645c5c" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># str처리된 float값 변환</span></span>
<span id="cb19-2">df_2[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2011 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2012 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2013 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2014 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2015 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2016 생산량'</span>,</span>
<span id="cb19-3">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2018 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022 생산량'</span>,</span>
<span id="cb19-4">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023 생산량'</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_2[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2011 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2012 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2013 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2014 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2015 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2016 생산량'</span>,</span>
<span id="cb19-5">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2018 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022 생산량'</span>,</span>
<span id="cb19-6">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023 생산량'</span>]].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)</span>
<span id="cb19-7">df_2.info()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 695 entries, 0 to 694
Data columns (total 18 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   2011 생산량  691 non-null    float64
 1   2012 생산량  695 non-null    float64
 2   2013 생산량  695 non-null    float64
 3   2014 생산량  695 non-null    float64
 4   2015 생산량  695 non-null    float64
 5   2016 생산량  695 non-null    float64
 6   2017 생산량  695 non-null    float64
 7   2018 생산량  695 non-null    float64
 8   2019 생산량  695 non-null    float64
 9   2020 생산량  695 non-null    float64
 10  2021 생산량  695 non-null    float64
 11  2022 생산량  694 non-null    float64
 12  2023 생산량  694 non-null    float64
 13  광종        695 non-null    object 
 14  국가        695 non-null    object 
 15  단위        695 non-null    object 
 16  대륙        695 non-null    object 
 17  품목        695 non-null    object 
dtypes: float64(13), object(5)
memory usage: 97.9+ KB</code></pre>
</div>
</div>
<div id="876b107f" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 광종별 생산량</span></span>
<span id="cb21-2">df2_produce <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_2.groupby(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광종'</span>])[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2011 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2012 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2013 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2014 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2015 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2016 생산량'</span>,</span>
<span id="cb21-3">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2018 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022 생산량'</span>,</span>
<span id="cb21-4">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023 생산량'</span>]].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb21-5">df2_produce</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2011 생산량</th>
<th data-quarto-table-cell-role="th">2012 생산량</th>
<th data-quarto-table-cell-role="th">2013 생산량</th>
<th data-quarto-table-cell-role="th">2014 생산량</th>
<th data-quarto-table-cell-role="th">2015 생산량</th>
<th data-quarto-table-cell-role="th">2016 생산량</th>
<th data-quarto-table-cell-role="th">2017 생산량</th>
<th data-quarto-table-cell-role="th">2018 생산량</th>
<th data-quarto-table-cell-role="th">2019 생산량</th>
<th data-quarto-table-cell-role="th">2020 생산량</th>
<th data-quarto-table-cell-role="th">2021 생산량</th>
<th data-quarto-table-cell-role="th">2022 생산량</th>
<th data-quarto-table-cell-role="th">2023 생산량</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">광종</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">금</td>
<td>2570.328</td>
<td>2644.576</td>
<td>2886.315</td>
<td>3017.911</td>
<td>3083.170</td>
<td>3180.769</td>
<td>3.238410e+03</td>
<td>3.263709e+03</td>
<td>3.211746e+03</td>
<td>3.066197e+03</td>
<td>3.041123e+03</td>
<td>3.147309e+03</td>
<td>3.138277e+03</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">니켈</td>
<td>3467.292</td>
<td>4140.150</td>
<td>4538.125</td>
<td>3925.512</td>
<td>3970.324</td>
<td>3839.161</td>
<td>4.229470e+03</td>
<td>4.623132e+03</td>
<td>4.964282e+03</td>
<td>4.972969e+03</td>
<td>5.467607e+03</td>
<td>6.303324e+03</td>
<td>7.216948e+03</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">동</td>
<td>35816.170</td>
<td>37138.574</td>
<td>39170.057</td>
<td>41019.128</td>
<td>42338.447</td>
<td>43631.801</td>
<td>4.364408e+04</td>
<td>4.403226e+04</td>
<td>4.399504e+04</td>
<td>4.471063e+04</td>
<td>4.588754e+04</td>
<td>4.758409e+04</td>
<td>5.004668e+04</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">몰리브덴</td>
<td>268.602</td>
<td>266.883</td>
<td>278.853</td>
<td>303.501</td>
<td>296.261</td>
<td>283.849</td>
<td>2.915410e+02</td>
<td>2.731790e+02</td>
<td>2.764260e+02</td>
<td>2.893510e+02</td>
<td>2.688010e+02</td>
<td>2.858460e+02</td>
<td>2.804480e+02</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">아연</td>
<td>25676.388</td>
<td>25887.690</td>
<td>26613.454</td>
<td>27099.928</td>
<td>27286.373</td>
<td>26155.233</td>
<td>2.563553e+04</td>
<td>2.541092e+04</td>
<td>2.568426e+04</td>
<td>2.614851e+04</td>
<td>2.747017e+04</td>
<td>2.712567e+04</td>
<td>2.750890e+04</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">안티모니</td>
<td>156163.000</td>
<td>174973.000</td>
<td>192551.000</td>
<td>158041.000</td>
<td>155999.000</td>
<td>165096.000</td>
<td>1.590890e+05</td>
<td>1.601380e+05</td>
<td>1.227800e+05</td>
<td>1.142970e+05</td>
<td>8.946900e+04</td>
<td>8.533900e+04</td>
<td>8.443900e+04</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">알루미늄</td>
<td>295511.409</td>
<td>308026.690</td>
<td>351054.187</td>
<td>311065.456</td>
<td>328534.809</td>
<td>341423.066</td>
<td>3.746015e+05</td>
<td>4.011228e+05</td>
<td>4.261662e+05</td>
<td>4.469730e+05</td>
<td>4.548925e+05</td>
<td>4.549827e+05</td>
<td>4.715010e+05</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">연</td>
<td>15435.226</td>
<td>15814.869</td>
<td>16593.862</td>
<td>16246.173</td>
<td>15871.816</td>
<td>16294.015</td>
<td>1.629023e+04</td>
<td>1.651490e+04</td>
<td>1.688362e+04</td>
<td>1.626823e+04</td>
<td>1.897150e+04</td>
<td>2.043378e+04</td>
<td>1.952917e+04</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">은</td>
<td>23282.594</td>
<td>24903.406</td>
<td>26174.528</td>
<td>27279.117</td>
<td>27848.245</td>
<td>28038.988</td>
<td>2.643421e+04</td>
<td>2.651451e+04</td>
<td>2.625192e+04</td>
<td>2.425894e+04</td>
<td>2.563196e+04</td>
<td>2.477051e+04</td>
<td>2.527272e+04</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">주석</td>
<td>670.472</td>
<td>662.043</td>
<td>648.298</td>
<td>694.752</td>
<td>669.020</td>
<td>639.671</td>
<td>7.081480e+02</td>
<td>7.180450e+02</td>
<td>7.278870e+02</td>
<td>7.277420e+02</td>
<td>7.273120e+02</td>
<td>6.603090e+02</td>
<td>6.635190e+02</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">카드뮴</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>2.532580e+07</td>
<td>2.817260e+07</td>
<td>2.505329e+07</td>
<td>2.473016e+07</td>
<td>2.486415e+07</td>
<td>2.447090e+07</td>
<td>2.477489e+07</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<ul>
<li>앞서 소비량 분석에서 4차 핵심산업에 부합하지 않을 것으로 배제했던 광물을 제외하고 확인</li>
</ul>
<div id="0202e8b5" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df_2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광종'</span>].unique():</span>
<span id="cb22-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'동'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'연'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'주석'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'아연'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'알루미늄'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'카드뮴'</span>]:</span>
<span id="cb22-3">        df2_produce.loc[ore].plot()</span>
<span id="cb22-4">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240608/index_files/figure-html/cell-17-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>생산량이 감소하고 있는 안티모니는 어떤 금속인지에 대해 조사
<ul>
<li>방염, 페인트 합금, 고무 등에 사용되는 것으로, 안티모니도 대상에서 배제</li>
</ul></li>
</ul>
<div id="30bb249e" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df_2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광종'</span>].unique():</span>
<span id="cb23-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'동'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'연'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'주석'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'아연'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'알루미늄'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'카드뮴'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'안티모니'</span>]:</span>
<span id="cb23-3">        df2_produce.loc[ore].plot()</span>
<span id="cb23-4">plt.legend()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240608/index_files/figure-html/cell-18-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="35524eb5" class="cell" data-execution_count="54">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 니켈에 대한 국가별 생산량</span></span>
<span id="cb24-2">df2_produce_country <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_2[df_2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광종'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'니켈'</span>].groupby(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'국가'</span>])[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2011 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2012 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2013 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2014 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2015 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2016 생산량'</span>,</span>
<span id="cb24-3">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2018 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022 생산량'</span>,</span>
<span id="cb24-4">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023 생산량'</span>]].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb24-5">df2_produce_country</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="54">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">2011 생산량</th>
<th data-quarto-table-cell-role="th">2012 생산량</th>
<th data-quarto-table-cell-role="th">2013 생산량</th>
<th data-quarto-table-cell-role="th">2014 생산량</th>
<th data-quarto-table-cell-role="th">2015 생산량</th>
<th data-quarto-table-cell-role="th">2016 생산량</th>
<th data-quarto-table-cell-role="th">2017 생산량</th>
<th data-quarto-table-cell-role="th">2018 생산량</th>
<th data-quarto-table-cell-role="th">2019 생산량</th>
<th data-quarto-table-cell-role="th">2020 생산량</th>
<th data-quarto-table-cell-role="th">2021 생산량</th>
<th data-quarto-table-cell-role="th">2022 생산량</th>
<th data-quarto-table-cell-role="th">2023 생산량</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">국가</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">Albania</td>
<td>3.528</td>
<td>0.728</td>
<td>2.086</td>
<td>4.889</td>
<td>6.309</td>
<td>3.952</td>
<td>5.301</td>
<td>4.204</td>
<td>2.830</td>
<td>3.764</td>
<td>3.615</td>
<td>1.423</td>
<td>0.548</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Australia</td>
<td>325.227</td>
<td>407.700</td>
<td>433.872</td>
<td>403.943</td>
<td>378.205</td>
<td>323.656</td>
<td>293.966</td>
<td>274.539</td>
<td>265.220</td>
<td>285.144</td>
<td>249.845</td>
<td>251.507</td>
<td>241.140</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Austria</td>
<td>0.500</td>
<td>0.500</td>
<td>0.500</td>
<td>0.600</td>
<td>0.700</td>
<td>0.700</td>
<td>0.700</td>
<td>0.700</td>
<td>0.700</td>
<td>0.700</td>
<td>0.700</td>
<td>1.000</td>
<td>1.000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Botswana</td>
<td>15.675</td>
<td>17.948</td>
<td>22.848</td>
<td>14.952</td>
<td>16.788</td>
<td>16.878</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Brazil</td>
<td>117.801</td>
<td>148.344</td>
<td>130.611</td>
<td>160.924</td>
<td>159.906</td>
<td>155.788</td>
<td>137.303</td>
<td>130.454</td>
<td>109.944</td>
<td>136.633</td>
<td>136.788</td>
<td>142.700</td>
<td>131.400</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Canada</td>
<td>361.470</td>
<td>358.551</td>
<td>380.471</td>
<td>378.353</td>
<td>384.236</td>
<td>393.333</td>
<td>369.061</td>
<td>323.373</td>
<td>317.894</td>
<td>282.033</td>
<td>235.219</td>
<td>191.807</td>
<td>214.341</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">China</td>
<td>559.536</td>
<td>684.172</td>
<td>803.857</td>
<td>638.237</td>
<td>554.597</td>
<td>537.173</td>
<td>723.282</td>
<td>841.119</td>
<td>957.049</td>
<td>857.237</td>
<td>912.392</td>
<td>974.155</td>
<td>1044.821</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Colombia</td>
<td>75.636</td>
<td>103.188</td>
<td>98.772</td>
<td>82.400</td>
<td>73.400</td>
<td>74.170</td>
<td>81.200</td>
<td>86.200</td>
<td>81.200</td>
<td>72.200</td>
<td>76.600</td>
<td>83.600</td>
<td>77.400</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Cuba</td>
<td>102.532</td>
<td>94.926</td>
<td>72.236</td>
<td>64.839</td>
<td>64.731</td>
<td>62.759</td>
<td>65.041</td>
<td>63.620</td>
<td>58.430</td>
<td>63.144</td>
<td>64.929</td>
<td>66.101</td>
<td>62.213</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Dominican Republic</td>
<td>26.996</td>
<td>30.372</td>
<td>18.800</td>
<td>0.000</td>
<td>0.000</td>
<td>19.826</td>
<td>31.264</td>
<td>38.428</td>
<td>56.900</td>
<td>42.632</td>
<td>54.640</td>
<td>56.800</td>
<td>38.848</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Finland</td>
<td>67.605</td>
<td>65.473</td>
<td>63.831</td>
<td>62.433</td>
<td>54.122</td>
<td>75.687</td>
<td>95.917</td>
<td>104.337</td>
<td>100.952</td>
<td>104.781</td>
<td>90.887</td>
<td>129.668</td>
<td>139.599</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">France</td>
<td>13.916</td>
<td>13.546</td>
<td>12.916</td>
<td>8.812</td>
<td>6.761</td>
<td>4.287</td>
<td>2.417</td>
<td>3.700</td>
<td>6.900</td>
<td>7.300</td>
<td>8.900</td>
<td>6.842</td>
<td>7.125</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Greece</td>
<td>39.630</td>
<td>40.150</td>
<td>36.177</td>
<td>39.891</td>
<td>36.863</td>
<td>36.463</td>
<td>35.861</td>
<td>33.609</td>
<td>25.689</td>
<td>13.071</td>
<td>8.834</td>
<td>3.124</td>
<td>0.000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Guatemala</td>
<td>0.000</td>
<td>2.422</td>
<td>10.184</td>
<td>49.899</td>
<td>67.324</td>
<td>53.434</td>
<td>68.147</td>
<td>53.708</td>
<td>52.456</td>
<td>72.537</td>
<td>84.864</td>
<td>69.181</td>
<td>20.177</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">India</td>
<td>0.000</td>
<td>0.000</td>
<td>1.010</td>
<td>2.028</td>
<td>1.861</td>
<td>0.329</td>
<td>0.092</td>
<td>0.077</td>
<td>0.055</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Indonesia</td>
<td>246.597</td>
<td>640.591</td>
<td>834.330</td>
<td>167.151</td>
<td>176.035</td>
<td>308.017</td>
<td>555.580</td>
<td>907.673</td>
<td>1250.383</td>
<td>1411.019</td>
<td>1915.958</td>
<td>2745.018</td>
<td>3589.948</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Ivory Coast</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.576</td>
<td>6.852</td>
<td>16.421</td>
<td>18.988</td>
<td>27.849</td>
<td>33.534</td>
<td>36.279</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Japan</td>
<td>156.883</td>
<td>169.556</td>
<td>177.810</td>
<td>177.782</td>
<td>192.789</td>
<td>195.565</td>
<td>187.046</td>
<td>186.736</td>
<td>182.652</td>
<td>171.044</td>
<td>180.721</td>
<td>163.401</td>
<td>153.248</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Kazakhstan</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Kosovo</td>
<td>15.132</td>
<td>8.872</td>
<td>15.214</td>
<td>13.448</td>
<td>13.300</td>
<td>6.825</td>
<td>15.621</td>
<td>9.179</td>
<td>8.548</td>
<td>11.769</td>
<td>10.646</td>
<td>0.339</td>
<td>0.360</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Macedonia</td>
<td>20.892</td>
<td>20.951</td>
<td>20.001</td>
<td>18.054</td>
<td>17.699</td>
<td>10.607</td>
<td>7.175</td>
<td>10.100</td>
<td>15.202</td>
<td>17.747</td>
<td>17.714</td>
<td>8.349</td>
<td>3.812</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Madagascar</td>
<td>0.000</td>
<td>11.390</td>
<td>50.298</td>
<td>74.108</td>
<td>94.542</td>
<td>84.210</td>
<td>70.948</td>
<td>66.366</td>
<td>67.466</td>
<td>19.800</td>
<td>58.704</td>
<td>71.258</td>
<td>75.828</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Morocco</td>
<td>0.217</td>
<td>0.288</td>
<td>0.160</td>
<td>0.000</td>
<td>0.203</td>
<td>0.188</td>
<td>0.196</td>
<td>0.126</td>
<td>0.131</td>
<td>0.142</td>
<td>0.144</td>
<td>0.144</td>
<td>0.144</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Myanmar</td>
<td>0.800</td>
<td>9.800</td>
<td>3.340</td>
<td>39.428</td>
<td>45.804</td>
<td>45.200</td>
<td>43.570</td>
<td>35.604</td>
<td>28.890</td>
<td>49.078</td>
<td>42.254</td>
<td>16.868</td>
<td>11.802</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">New Caledonia</td>
<td>168.626</td>
<td>177.076</td>
<td>212.777</td>
<td>237.223</td>
<td>270.729</td>
<td>300.193</td>
<td>319.476</td>
<td>324.139</td>
<td>296.106</td>
<td>272.152</td>
<td>242.887</td>
<td>266.171</td>
<td>302.940</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Norway</td>
<td>92.753</td>
<td>91.940</td>
<td>91.380</td>
<td>90.846</td>
<td>91.465</td>
<td>92.914</td>
<td>86.672</td>
<td>91.054</td>
<td>92.290</td>
<td>91.374</td>
<td>91.485</td>
<td>82.163</td>
<td>95.253</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Papua New Guinea</td>
<td>0.000</td>
<td>5.283</td>
<td>11.370</td>
<td>20.987</td>
<td>25.581</td>
<td>22.269</td>
<td>34.666</td>
<td>35.355</td>
<td>32.722</td>
<td>33.659</td>
<td>31.594</td>
<td>34.304</td>
<td>33.604</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Philippines</td>
<td>319.353</td>
<td>317.621</td>
<td>313.050</td>
<td>443.909</td>
<td>466.754</td>
<td>345.506</td>
<td>379.377</td>
<td>389.966</td>
<td>341.325</td>
<td>328.911</td>
<td>393.687</td>
<td>340.127</td>
<td>382.568</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Poland</td>
<td>1.700</td>
<td>1.600</td>
<td>1.200</td>
<td>1.560</td>
<td>1.680</td>
<td>1.540</td>
<td>1.440</td>
<td>1.400</td>
<td>1.440</td>
<td>1.420</td>
<td>1.440</td>
<td>1.600</td>
<td>1.680</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Russia</td>
<td>536.000</td>
<td>522.700</td>
<td>506.000</td>
<td>503.436</td>
<td>492.916</td>
<td>413.482</td>
<td>372.562</td>
<td>368.667</td>
<td>379.762</td>
<td>386.934</td>
<td>311.033</td>
<td>367.972</td>
<td>354.259</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">South Africa</td>
<td>79.320</td>
<td>78.446</td>
<td>83.508</td>
<td>89.656</td>
<td>98.646</td>
<td>91.104</td>
<td>91.451</td>
<td>82.730</td>
<td>82.603</td>
<td>64.030</td>
<td>69.804</td>
<td>66.623</td>
<td>65.699</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">South Korea</td>
<td>16.863</td>
<td>23.673</td>
<td>28.130</td>
<td>24.964</td>
<td>39.007</td>
<td>45.616</td>
<td>47.402</td>
<td>45.593</td>
<td>46.269</td>
<td>45.604</td>
<td>47.270</td>
<td>31.959</td>
<td>40.022</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Spain</td>
<td>0.000</td>
<td>2.398</td>
<td>7.574</td>
<td>8.631</td>
<td>7.213</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Turkey</td>
<td>0.848</td>
<td>3.814</td>
<td>1.178</td>
<td>3.035</td>
<td>8.637</td>
<td>9.337</td>
<td>14.767</td>
<td>13.559</td>
<td>4.742</td>
<td>20.201</td>
<td>11.647</td>
<td>14.479</td>
<td>14.400</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">U.S.A.</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>4.300</td>
<td>27.167</td>
<td>24.114</td>
<td>22.081</td>
<td>17.573</td>
<td>13.494</td>
<td>16.718</td>
<td>18.353</td>
<td>17.475</td>
<td>16.429</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Ukraine</td>
<td>22.475</td>
<td>20.833</td>
<td>26.751</td>
<td>25.129</td>
<td>20.842</td>
<td>18.920</td>
<td>15.605</td>
<td>16.331</td>
<td>15.133</td>
<td>15.910</td>
<td>15.657</td>
<td>10.093</td>
<td>0.733</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">United Kingdom</td>
<td>37.400</td>
<td>39.400</td>
<td>42.400</td>
<td>39.100</td>
<td>39.094</td>
<td>43.104</td>
<td>37.090</td>
<td>38.211</td>
<td>34.976</td>
<td>35.177</td>
<td>30.654</td>
<td>33.384</td>
<td>35.851</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Venezuela</td>
<td>26.800</td>
<td>16.200</td>
<td>6.522</td>
<td>5.000</td>
<td>9.702</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Vietnam</td>
<td>0.000</td>
<td>0.000</td>
<td>1.200</td>
<td>6.932</td>
<td>8.607</td>
<td>4.272</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Zambia</td>
<td>2.888</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>0.000</td>
<td>1.230</td>
<td>3.780</td>
<td>3.680</td>
<td>3.942</td>
<td>6.550</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Zimbabwe</td>
<td>11.693</td>
<td>9.698</td>
<td>15.761</td>
<td>18.633</td>
<td>16.109</td>
<td>17.743</td>
<td>16.617</td>
<td>17.850</td>
<td>16.278</td>
<td>16.336</td>
<td>16.213</td>
<td>16.213</td>
<td>16.927</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="e740d17e" class="cell" data-execution_count="60">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 니켈에 대한 국가별 생산량의 총 합계</span></span>
<span id="cb25-2">df2_produce_country_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df2_produce_country[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2011 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2012 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2013 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2014 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2015 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2016 생산량'</span>,</span>
<span id="cb25-3">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2017 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2018 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2019 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2020 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2021 생산량'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2022 생산량'</span>,</span>
<span id="cb25-4">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023 생산량'</span>]].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb25-5">df2_produce_country_total.sort_values(ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="60">
<pre><code>국가
Indonesia             14748.300
China                 10087.627
Russia                 5515.723
Philippines            4762.154
Canada                 4190.142
Australia              4133.964
New Caledonia          3390.495
Japan                  2295.233
Brazil                 1798.596
Norway                 1181.589
Finland                1155.292
Colombia               1065.966
South Africa           1043.620
Cuba                    905.501
Madagascar              744.918
Guatemala               604.333
United Kingdom          485.841
South Korea             482.372
Dominican Republic      415.506
Myanmar                 372.438
Greece                  349.362
Papua New Guinea        321.394
Ukraine                 224.412
Zimbabwe                206.071
Macedonia               188.303
U.S.A.                  177.704
Ivory Coast             140.499
Kosovo                  129.253
Turkey                  120.644
Botswana                105.089
France                  103.422
Venezuela                64.224
Albania                  43.177
Spain                    25.816
Zambia                   22.070
Vietnam                  21.011
Poland                   19.700
Austria                   9.000
India                     5.452
Morocco                   2.083
Kazakhstan                0.000
dtype: float64</code></pre>
</div>
</div>
<ul>
<li>니켈 총생산량 기준 상위 10개국에 대한 시각화진행
<ul>
<li>인도네시아, 중국, 러시아, 필리핀 순으로 상위 생산국</li>
</ul></li>
</ul>
<div id="f89bf8bf" class="cell" data-execution_count="76">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 니켈 총생산량 내림차순 기준 상위 10개국 Pie chart</span></span>
<span id="cb27-2">target_country <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df2_produce_country_total.sort_values(ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>].index.tolist()</span>
<span id="cb27-3">df2_produce_country_total.loc[target_country].plot(kind<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pie'</span>,startangle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">145</span>, autopct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%.1f%%</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, pctdistance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/dtcontest-ore-20240608/index_files/figure-html/cell-21-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>니켈에 대한 모델링 등을 할때, 주요 생산국의 관련 지표를 넣으면 좋을 듯 함</li>
</ul>
</section>
<section id="광종별-수출입-현황" class="level4">
<h4 class="anchored" data-anchor-id="광종별-수출입-현황">광종별 수출입 현황</h4>
<ul>
<li>공공데이터포털 - 한국광해광업공단_광종별 국내 수출입 현황 <br> https://www.data.go.kr/data/3070177/fileData.do</li>
</ul>
<div id="92c3c258" class="cell" data-execution_count="78">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">base_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://api.odcloud.kr/api'</span></span>
<span id="cb28-2">address_get <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/3070177/v1/uddi:09b79733-b804-4ec6-9968-dd0f58638b55_202004090938'</span></span>
<span id="cb28-3">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>base_url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>address_get<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">?page=1&amp;perPage=1&amp;serviceKey=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>serviceKey<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb28-4"></span>
<span id="cb28-5">json_3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> download_from_data_go_kr_with_json(url)</span>
<span id="cb28-6">chk_json_status_of_data_go_kr(json_3)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="78">
<pre><code>{'currentCount': 116,
 'matchCount': 116,
 'page': 1,
 'perPage': 116,
 'totalCount': 116}</code></pre>
</div>
</div>
<div id="9e1d5638" class="cell" data-execution_count="79">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">df_3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.json_normalize(json_3[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data'</span>])</span>
<span id="cb30-2">df_3</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="79">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">광종</th>
<th data-quarto-table-cell-role="th">분류</th>
<th data-quarto-table-cell-role="th">수입금액(천불)</th>
<th data-quarto-table-cell-role="th">수입중량(톤)</th>
<th data-quarto-table-cell-role="th">수출금액(천불)</th>
<th data-quarto-table-cell-role="th">수출중량(톤)</th>
<th data-quarto-table-cell-role="th">연도</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>금광</td>
<td>금속광</td>
<td>67000</td>
<td>5705.000</td>
<td>116</td>
<td>1005.000</td>
<td>2021</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>은광</td>
<td>금속광</td>
<td>302335</td>
<td>37635.000</td>
<td>79</td>
<td>63.000</td>
<td>2021</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>동광</td>
<td>금속광</td>
<td>6017233</td>
<td>2097948.000</td>
<td>1185720</td>
<td>560664.000</td>
<td>2021</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>연광</td>
<td>금속광</td>
<td>2366631</td>
<td>642414.000</td>
<td>670</td>
<td>1102.000</td>
<td>2021</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>아연광</td>
<td>금속광</td>
<td>2044885</td>
<td>1819759.000</td>
<td>34679</td>
<td>23804.000</td>
<td>2021</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">111</td>
<td>하석</td>
<td>비금속광</td>
<td>144</td>
<td>321.000</td>
<td>1</td>
<td>0.000</td>
<td>2022</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">112</td>
<td>무연탄</td>
<td>석탄광</td>
<td>1661049</td>
<td>5384000.000</td>
<td>251</td>
<td>375.000</td>
<td>2022</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">113</td>
<td>유연탄</td>
<td>석탄광</td>
<td>26230599</td>
<td>117752000.000</td>
<td>0</td>
<td>0.000</td>
<td>2022</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">114</td>
<td>갈탄</td>
<td>석탄광</td>
<td>65</td>
<td>107.000</td>
<td>0</td>
<td>0.000</td>
<td>2022</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">115</td>
<td>토탄</td>
<td>석탄광</td>
<td>25324</td>
<td>110185.000</td>
<td>41</td>
<td>21.000</td>
<td>2022</td>
</tr>
</tbody>
</table>

<p>116 rows × 7 columns</p>
</div>
</div>
</div>
<div id="8a116d17" class="cell" data-execution_count="80">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 광종 및 소비량 확인</span></span>
<span id="cb31-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df_3[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광종'</span>].unique())</span>
<span id="cb31-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df_3.columns)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['금광' '은광' '동광' '연광' '아연광' '철광' '텅스텐광' '몰리브덴광' '망간광' '주석광' '창연' '안티모니광'
 '비소광' '황철석' '니켈' '코발트' '크롬광' '리튬광' '티타늄광' '질코늄광' '알루미늄광' '백금광' '탄탈륨광'
 '바나듐광' '니오븀광' '게르마늄광' '기타 금속' '인상흑연' '토상흑연' '활석' '납석' '장석' '고령토류' '석회석류'
 '규석' '규사' '황' '규조토' '형석' '인광석' '규회석' '운모' '주사' '홍주석' '규선석' '남정석' '중정석'
 '마그네사이트' '석고' '불석' '수정' '붕소광' '금강석' '하석' '기타 비금속' '무연탄' '유연탄' '갈탄' '토탄'
 '기타 석탄']
Index(['광종', '분류', '수입금액(천불)', '수입중량(톤)', '수출금액(천불)', '수출중량(톤)', '연도'], dtype='object')</code></pre>
</div>
</div>
<div id="3c4bc921" class="cell" data-execution_count="81">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># str처리된 float값 변환</span></span>
<span id="cb33-2">df_3[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'수입중량(톤)'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'수출중량(톤)'</span>,]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_3[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'수입중량(톤)'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'수출중량(톤)'</span>]].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)</span>
<span id="cb33-3">df_3.info()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 116 entries, 0 to 115
Data columns (total 7 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   광종        116 non-null    object 
 1   분류        116 non-null    object 
 2   수입금액(천불)  116 non-null    int64  
 3   수입중량(톤)   116 non-null    float64
 4   수출금액(천불)  116 non-null    int64  
 5   수출중량(톤)   116 non-null    float64
 6   연도        116 non-null    int64  
dtypes: float64(2), int64(3), object(2)
memory usage: 6.5+ KB</code></pre>
</div>
</div>
<ul>
<li>공모전에 언급된 주요광물에 대해서 추림</li>
</ul>
<div id="9d3cabf2" class="cell" data-execution_count="82">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">df3_sorted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_3[df_3[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광종'</span>].isin([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'텅스텐광'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'망간광'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'니켈'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'코발트'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'리튬광'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'알루미늄광'</span>])]</span>
<span id="cb35-2">df3_sorted</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="82">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">광종</th>
<th data-quarto-table-cell-role="th">분류</th>
<th data-quarto-table-cell-role="th">수입금액(천불)</th>
<th data-quarto-table-cell-role="th">수입중량(톤)</th>
<th data-quarto-table-cell-role="th">수출금액(천불)</th>
<th data-quarto-table-cell-role="th">수출중량(톤)</th>
<th data-quarto-table-cell-role="th">연도</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>텅스텐광</td>
<td>금속광</td>
<td>60</td>
<td>1.0</td>
<td>84</td>
<td>8.0</td>
<td>2021</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">8</td>
<td>망간광</td>
<td>금속광</td>
<td>290356</td>
<td>1325095.0</td>
<td>0</td>
<td>0.0</td>
<td>2021</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">14</td>
<td>니켈</td>
<td>금속광</td>
<td>340685</td>
<td>3181534.0</td>
<td>42</td>
<td>86.0</td>
<td>2021</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">15</td>
<td>코발트</td>
<td>금속광</td>
<td>1</td>
<td>0.0</td>
<td>0</td>
<td>0.0</td>
<td>2021</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">17</td>
<td>리튬광</td>
<td>금속광</td>
<td>1047778</td>
<td>94839.0</td>
<td>53933</td>
<td>4980.0</td>
<td>2021</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">20</td>
<td>알루미늄광</td>
<td>금속광</td>
<td>33126</td>
<td>424540.0</td>
<td>45</td>
<td>156.0</td>
<td>2021</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">66</td>
<td>텅스텐광</td>
<td>금속광</td>
<td>607</td>
<td>40.0</td>
<td>3559</td>
<td>1241.0</td>
<td>2022</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">68</td>
<td>망간광</td>
<td>금속광</td>
<td>283632</td>
<td>1085930.0</td>
<td>5</td>
<td>113.0</td>
<td>2022</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">74</td>
<td>니켈</td>
<td>금속광</td>
<td>382427</td>
<td>2653287.0</td>
<td>206</td>
<td>108.0</td>
<td>2022</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">75</td>
<td>코발트</td>
<td>금속광</td>
<td>95</td>
<td>12.0</td>
<td>0</td>
<td>0.0</td>
<td>2022</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">79</td>
<td>알루미늄광</td>
<td>금속광</td>
<td>33150</td>
<td>417762.0</td>
<td>46</td>
<td>478.0</td>
<td>2022</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="701e86c2" class="cell" data-execution_count="83">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ore <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'텅스텐광'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'망간광'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'니켈'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'코발트'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'리튬광'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'알루미늄광'</span>]:</span>
<span id="cb36-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df3_sorted[df3_sorted[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'광종'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>ore])</span>
<span id="cb36-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>      광종   분류  수입금액(천불)  수입중량(톤)  수출금액(천불)  수출중량(톤)    연도
6   텅스텐광  금속광        60      1.0        84      8.0  2021
66  텅스텐광  금속광       607     40.0      3559   1241.0  2022

     광종   분류  수입금액(천불)    수입중량(톤)  수출금액(천불)  수출중량(톤)    연도
8   망간광  금속광    290356  1325095.0         0      0.0  2021
68  망간광  금속광    283632  1085930.0         5    113.0  2022

    광종   분류  수입금액(천불)    수입중량(톤)  수출금액(천불)  수출중량(톤)    연도
14  니켈  금속광    340685  3181534.0        42     86.0  2021
74  니켈  금속광    382427  2653287.0       206    108.0  2022

     광종   분류  수입금액(천불)  수입중량(톤)  수출금액(천불)  수출중량(톤)    연도
15  코발트  금속광         1      0.0         0      0.0  2021
75  코발트  금속광        95     12.0         0      0.0  2022

     광종   분류  수입금액(천불)  수입중량(톤)  수출금액(천불)  수출중량(톤)    연도
17  리튬광  금속광   1047778  94839.0     53933   4980.0  2021

       광종   분류  수입금액(천불)   수입중량(톤)  수출금액(천불)  수출중량(톤)    연도
20  알루미늄광  금속광     33126  424540.0        45    156.0  2021
79  알루미늄광  금속광     33150  417762.0        46    478.0  2022
</code></pre>
</div>
</div>
<p>[광종별 간단 요약]</p>
<ul>
<li>텅스텐 : 수입 금액/중량 증가(가격비 비슷), 수출 금액/중량 증가</li>
<li>망간 : 수입 금액/중량 감소</li>
<li>니켈 : 수입 금액 증가, 수입 중량 감소 (가격 증가)</li>
<li>코발트 : 수입 급격한 증가, 수출은 없음</li>
<li>리튬 : 비교가능 데이터 없음</li>
</ul>
<p>[수출입 데이터 기준 고려사항]</p>
<ul>
<li>니켈 : 수입량과 가격 모두 증가</li>
<li>니켈(수입량 증가와 가격 증가 추세로, 추가분석 필요하여 <strong>하단에서 계속 진행</strong>)</li>
<li>코발트(수입 급격히 증가했으나 수출실적은 전혀없는 상황으로 국내 매장량 등 분석하고자 함)
<ul>
<li>시간 상 관련 수치자료를 찾지 못하여 간단히 몇가지 검색해보니, 소요량에 대한 기사 발견 <br>
<ul>
<li>[기사]한국기업의 귀속생산량이 전세계 총합 대비 1% 이하 수준 https://www.businesspost.co.kr/BP?command=article_view&amp;num=353613</li>
<li>[한국경제인협회] 니켈, 리튬, 코발트에 대한 주요 생산국 및 수입량 추이 https://www.fki.or.kr/main/news/statement_detail.do?bbs_id=00035573&amp;category=ST</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="결론" class="level3">
<h3 class="anchored" data-anchor-id="결론">결론</h3>
<ul>
<li>추가적인 분석에 따라 달라지겠지만 현재로서는 아래와 같음</li>
<li><code>니켈</code>
<ul>
<li>4차 핵심사업에 소요되는 광물로 2011년 대비 2배이상 소요량 증가</li>
<li>생산량이 증가하고 있으나 주요 3개국 생산량이 58.3%로 편중으로 인한 리스크 큼<br>(생산국:인도네시아, 중국, 러시아)</li>
<li>자료 시기가 2021, 2022년으로 많지는 않지만, 수입량의 감소에도 수입금액이 늘었다는 것은 가격 상승이 예상되는 상황</li>
<li>소요량, 생산량, 수입데이터 기준 가격상승 예상 등 리스크가 있어보여 위험요소 탐지가 필요한 광물로 보임</li>
</ul></li>
<li><code>코발트</code>
<ul>
<li>수입량은 급격히 증가했으나, 수출량은 전무한 상황으로 생산자체가 불가하거나 국내 사용만으로도 부족한 상황이 아닐지 추측</li>
<li>간단히 구글링하였을 때, 기사에 따르면 코발트 생산은 콩고 생산량이 68.8%일 정도로 편중이 심함</li>
<li>코발트 또한 이차 전지에 활용되는 핵심광물로 위험 요소 탐지가 필요해보임</li>
</ul></li>
<li><code>니켈</code>에 대해 분석한 내용을 모델링할 때 감안하거나, 최종보고서의 핵심광물 위험요소에 대한 당위성 부여 등에 활용하고자 함</li>
</ul>


</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>공모전</category>
  <category>공공데이터</category>
  <category>분석</category>
  <category>공공데이터API</category>
  <guid>https://kr9268.github.io/posts/dtcontest-ore-20240608/</guid>
  <pubDate>Thu, 06 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[M_Study_2주차] Multiple Regression / Logistic Regression</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/meta-dl-creditcard-20240602/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>참여중인 딥러닝 스터디 2주차 기록입니다.</p>
</section>
<section id="주차-과제-설명" class="level2">
<h2 class="anchored" data-anchor-id="주차-과제-설명">1주차 과제 설명</h2>
<ul>
<li><p>큰 틀에서는 보통 아래의 순서로 진행</p>
<ul>
<li>데이터생성</li>
<li>hypothesis</li>
<li>cost function</li>
<li>optimizer</li>
<li>train</li>
<li>Prediction (=Inference)</li>
</ul></li>
<li><p>tf.reduce_mean() : 열(row)끼리의 평균</p></li>
<li><p>Non-Linear Modeling <br> &gt;<img src="https://latex.codecogs.com/png.latex?y%20=%20ax%5E2%20+%20bx%20+%20c"></p>
<ul>
<li><p>구하고자 하는 값은 <img src="https://latex.codecogs.com/png.latex?a,%20b,%20c"></p></li>
<li><p>모델 학습 전 임의의 값(<img src="https://latex.codecogs.com/png.latex?a,b,c">)으로 추세선 긋기 <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240602/index_files/figure-html/7d189a5e-2-image.png" class="img-fluid" alt="image.png"></p></li>
<li><p>내가 가정하는 식을 hypothesis에 넣고 학습</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> hypothesis(x):</span>
<span id="cb1-2">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(x)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> cost_fn(pred_y, true_y):</span>
<span id="cb1-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> tf.reduce_mean(tf.square(pred_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> true_y))</span>
<span id="cb1-6"></span>
<span id="cb1-7">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.optimizers.Adam(learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> train():</span>
<span id="cb1-10">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> g:</span>
<span id="cb1-11">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hypothesis(X)</span>
<span id="cb1-12">    cost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cost_fn(pred, Y)</span>
<span id="cb1-13"></span>
<span id="cb1-14">  gradients <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> g.gradient(cost, [a,b,c])                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기울기를 계산하는 부분</span></span>
<span id="cb1-15">  optimizer.apply_gradients(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(gradients, [a,b,c]))       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 계산된 기울기를 업데이트 해주는 부분</span></span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> step <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1001</span>):</span>
<span id="cb1-18">  train()</span>
<span id="cb1-19"></span>
<span id="cb1-20">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb1-21">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hypothesis(X)</span>
<span id="cb1-22">    cost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cost_fn(pred, Y)</span>
<span id="cb1-23">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f" step:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>step<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> cost:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>cost<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> a:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>numpy()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> b:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>numpy()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> c:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>c<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>numpy()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> "</span>)</span>
<span id="cb1-24">    line_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(X), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(X), <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>)</span>
<span id="cb1-25">    line_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(line_x)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(line_x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c</span></code></pre></div></li>
<li><p>모델 학습 후 변경된 추세선 확인하기 <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240602/index_files/figure-html/7d189a5e-1-image-2.png" class="img-fluid" alt="image-2.png"></p></li>
</ul></li>
</ul>
</section>
<section id="linear-regression" class="level2">
<h2 class="anchored" data-anchor-id="linear-regression">Linear Regression</h2>
<ul>
<li>Linear Regression의 Motivation
<ul>
<li>수 많은 데이터를 묘사하는 하나의 선을 긋고, 그 선으로 향후 추이(예를 들어 광고비와 매출의 관계 등)를 판단</li>
<li>랜덤하게 하나의 선을 긋고(임의의 W, b설정), 실제 데이터(점)과 선(예측값)의 거리[오차]를 줄인다</li>
</ul></li>
<li>선형성이 있다는 가정 하에 모델링 수행 &gt; <img src="https://latex.codecogs.com/png.latex?Y%20=%20B_0%20+%20B_1X%20+%20%5Cepsilon">
<ul>
<li>기존 수업의 <img src="https://latex.codecogs.com/png.latex?Y%20=%20WX+b"> 식에서 <img src="https://latex.codecogs.com/png.latex?B_0">이 <img src="https://latex.codecogs.com/png.latex?b">, <img src="https://latex.codecogs.com/png.latex?B_1X">이 <img src="https://latex.codecogs.com/png.latex?W">
<ul>
<li><img src="https://latex.codecogs.com/png.latex?B_0"> : <code>intercept</code> (첫번째 기울기는 <img src="https://latex.codecogs.com/png.latex?B_1X">으로 표현)</li>
<li><img src="https://latex.codecogs.com/png.latex?B_1X"> : <code>slope</code>, <code>coefficients</code></li>
<li><img src="https://latex.codecogs.com/png.latex?B_0">, <img src="https://latex.codecogs.com/png.latex?B_1X"> 등을 합쳐서 <code>parameter</code>라고 부름 (가장 적절한 parameter를 찾는 것이 AI의 목적)</li>
</ul></li>
</ul></li>
<li>hat (<img src="https://latex.codecogs.com/png.latex?%5Chat%7BB%7D">)은 최적화가 되었을 때 씌운다
<ul>
<li>처음에 임의값을 두었다가 학습을 하며 최적화가 되면 씌움</li>
</ul></li>
<li>residual(잔차)
<ul>
<li>예측값 <img src="https://latex.codecogs.com/png.latex?%5Chat%7By%7D">(<img src="https://latex.codecogs.com/png.latex?%5Chat%7BB%7D_0+%5Chat%7BB%7D_1x_i">)에 대해 정의된 오차 <img src="https://latex.codecogs.com/png.latex?e_i"> (<img src="https://latex.codecogs.com/png.latex?y_i-%5Chat%7By_i%7D">)
<ul>
<li>i번째 잔차(<img src="https://latex.codecogs.com/png.latex?i">th residual)</li>
</ul></li>
</ul></li>
<li>RSS(Residual Sum of Squares) : 잔차를 제곱해서 더한 것 &gt; <img src="https://latex.codecogs.com/png.latex?e_1%5E2%20+%20e_2%5E2+...+e_n%5E2">
<ul>
<li>제곱이 아닌 절대값으로 해도 개념적으로는 오차를 계산 가능</li>
<li>최소자승법(least square)으로 최적의 <img src="https://latex.codecogs.com/png.latex?B">를 구하며 RSS가 줄어듦
<ul>
<li>최소자승법 : 그래프에서 오차가 가장 낮은, 미분값이 0인 지점 찾기<br>(오차가 0이 되는 지점을 미분으로 찾는 것이며, <strong>이때의 오차는 Train set의 오차임</strong>)</li>
<li>절대값으로 오차를 찾는 경우 미분을 활용할 수 없어, RSS를 사용</li>
<li>현대에는 최소자승법을 잘 안쓰고 GD를 사용 (GD : 하나의 랜덤한 점을 찍고, 최소점을 향해 근사를 반복해나감[epoch반복])</li>
</ul></li>
</ul></li>
<li><img src="https://latex.codecogs.com/png.latex?B_0">, <img src="https://latex.codecogs.com/png.latex?B_1X"> 등 parameter를 구했을 때, 얼마나 신뢰할 수 있는 숫자인가
<ul>
<li>Standard error(Variance에 루트를 씌우면 Standard error로, 본질적으로 같음)
<ul>
<li>Variance는 모델의 안정성</li>
<li>Standard error, <img src="https://latex.codecogs.com/png.latex?SE(%5Chat%7BB%7D_1)%5E2"> 계산을 통해 얼마나 안정적인지 판단</li>
<li>SE의 계산식은 데이터(샘플)가 많아질수록 분모(Sum)가 커지므로, 모델의 Variance가 낮아짐
<ul>
<li>→ 데이터가 많아지면 모델이 좋아진다<br> <strong>(최적의 <img src="https://latex.codecogs.com/png.latex?B">를 최소자승법으로 구해 모델을 만들고, 데이터 샘플의 수가 커지면 계산된 최적의 <img src="https://latex.codecogs.com/png.latex?B">가 가지는 SE가 줄어들음)</strong></li>
</ul></li>
</ul></li>
<li>Confidence intervals(신뢰구간)
<ul>
<li>대학원 면접에서 많이 나오는 주제</li>
<li>Variance(또는 SE)를 기반으로 신뢰구간을 구함 &gt; <img src="https://latex.codecogs.com/png.latex?%5Chat%7BB%7D_1%20+-%202*SE(%5Chat%7BB%7D_1)"></li>
<li>신뢰구간 95% / 평균 100 / 신뢰구간 80~120의 해석
<ul>
<li>모집단에서 샘플링을 했을 때 평균이 100</li>
<li>모집단 평균이 105, 110일수도 있지만 추정한 신뢰구간안에 실제 평균이 존재할 확률이 95%라는 뜻</li>
</ul></li>
<li>Variance가 낮아지면 신뢰구간이 좁아지며 좋아짐</li>
</ul></li>
</ul></li>
<li>t-statistic
<ul>
<li>$ t = _1-0 SE(_1) $</li>
<li>SE가 낮을수록 좋은 값이라는 점에서, 위 수식(t값)이 클수록 좋다는 직관적 이해 가능</li>
<li>p-value : t값보다 클 확률 (즉 낮을수록 좋다)</li>
</ul></li>
<li>결과 표 보며 이해하기 <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240602/index_files/figure-html/9b221a0e-1-image.png" class="img-fluid" alt="image.png">
<ul>
<li>coefficient : 구한 parameter값</li>
<li>Standard error, t-statistic은 단위에 따라 달라질 수 있는 값</li>
<li>p-value는 통일된 값으로, 0.0001보다 작으므로 Variance가 낮고 모델이 안정적이다 (p-value가 낮을수록 결과가 유의하다 라고 표현)</li>
</ul></li>
<li><img src="https://latex.codecogs.com/png.latex?R%5E2">
<ul>
<li>$ R^2$ = $ TSS - RSS TSS $ = $1 - RSS TSS $</li>
<li>RSS(오차의 제곱을 모두 더한 잔차)가 클수록 작아지므로, 클수록 좋은 지표임을 이해</li>
<li>TSS는 RSS보다 무조건 크므로, <img src="https://latex.codecogs.com/png.latex?R%5E2">는 0~1의 값을 갖는다</li>
<li><img src="https://latex.codecogs.com/png.latex?R%5E2">가 0.7이면 70%의 설명력을 가진다</li>
</ul></li>
<li>주의할 점
<ul>
<li>상관관계에 대해 분석한 것으로, <code>인과관계가 아니다</code> (인과관계라면 상관관계는 있을 수 있다)</li>
</ul></li>
</ul>
</section>
<section id="multiple-regression" class="level2">
<h2 class="anchored" data-anchor-id="multiple-regression">Multiple Regression</h2>
<ul>
<li>변수와 계수를 추가하면 Multiple Regression이 됨
<ul>
<li>수식이 길어지고, * 편미분이 여러개가 나오게 되는 차이</li>
<li>변수가 2개가 되어 기존의 <code>2차원평면/regression line</code>이 아닌 <code>3차원평면/regression plain</code>이 나옴</li>
<li>multiple matrix를 활용해 표현 (row, column)</li>
<li>RSS도 행렬식으로 표현
<ul>
<li><code>역행렬은 엄청난 연산이 필요한데, 이는 least square를 사용하지 않게된 이유</code>임 (정형데이터 위주였던 과거와 달리 이미지 등 데이터와 이에 대한 행렬이 매우 커져, computing성능발전에도 역행렬 계산 어려워짐)</li>
<li><code>least square는 Bias를 최소화하는 방법인데, trade-off로 Variance커질 위험이 커서 사용하지 않게 됨</code>
<ul>
<li>현대는 모델의 Variance가 중요해짐. <strong>Overfitting과 관계된 Variance를 줄이기 위해 약간의 Bias상승은 감내</strong></li>
<li>Least square(최소자승법)는 오차가 0이되는 지점을 미분으로 찾는 방법이며, 이때의 오차는 Train Dataset으로 오차가 너무 작아지면 Overfitting</li>
</ul></li>
</ul></li>
</ul></li>
<li>Correlation 상관관계
<ul>
<li>Variable간의 상관관계를 보는 이유 : 중복되는 변수의 과대평가, 타 변수의 과소평가를 방지 (예를 들어 연봉과 자산의 경우 상관관계가 있음)</li>
</ul></li>
<li>GD(Gradient Descent, 경사하강법)
<ul>
<li>역행렬의 계산량문제로 최소자승법(least square)가 아닌 GD방식을 사용</li>
<li><img src="https://latex.codecogs.com/png.latex?a"> (learning rate)로 적절히 작은 숫자를 곱해, 한번에 너무 많이 이동(하강)하지 않게 함
<ul>
<li>보통 0.01사용</li>
</ul></li>
<li>$W = W - a * $ $ c W$</li>
<li>코드로 이해하기 <br>
<ol type="1">
<li>Cost를 가중치W로 미분 <strong>(gradient 함수로 $ c W$구하기)</strong></li>
</ol>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gradient 계산</span></span>
<span id="cb2-2">  gradients <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> g.gradient(cost, [W,b])     </span></code></pre></div>
<ol start="2" type="1">
<li>가중치W 업데이트 <strong>(apply_gradients 함수로 <img src="https://latex.codecogs.com/png.latex?W"> 업데이트)</strong></li>
</ol>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gradients에 따라 W와 b 업데이트</span></span>
<span id="cb3-2">  optimizer.apply_gradients(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(gradients, [W,b])) </span></code></pre></div></li>
</ul></li>
<li>Single Regression에서는 없던 Multiple Regression의 고민
<ul>
<li>변수의 갯수 (많이 쓴다고 좋은게 아니며, 최적의 갯수 찾기)
<ul>
<li>forward(↔︎backward) selection
<ul>
<li>변수의 갯수를 늘려가다가(↔︎줄여가다가), 성능이 낮아질때 직전 갯수로 사용</li>
</ul></li>
<li>변수의 갯수가 달라졌을 때 성능의 지표
<ul>
<li>AIC(Akaike Information Criterion)</li>
<li>BIC(Bayesian Information Criterion)</li>
<li>Adjusted <img src="https://latex.codecogs.com/png.latex?R%5E2"></li>
<li>CV(Cross-validation)</li>
</ul></li>
</ul></li>
<li>요즘은 Linear Regression에서 발전된 알고리즘이 많이 나와서, 위의 것보다 먼저 알아야 하는게 많음</li>
</ul></li>
<li>Qualitative Predictor(Categorical, 범주형 변수)
<ul>
<li>숫자가 아닌 상태로 쓰이는 경우 (0남자 1여자 등, 여러개도 Okay) 활용하여 Regression에 반영할 수 있게 됨
<ul>
<li>예를 들어, 구하고자하는 y가 키(신장)이라면, 성별변수 남자가 0이면 가중치는 음수, 반대면 양수가 될 수 있음</li>
</ul></li>
</ul></li>
<li>Interaction impact(Synergy impact)
<ul>
<li>변수가 구하고자하는 y가 아니라 다른 변수에도 영향을 미치는 경우
<ul>
<li>서로 관계있는 두 변수를 곱하여 추가해줌(<img src="https://latex.codecogs.com/png.latex?X%5E1,%20X%5E2">가 관계있는 경우 <img src="https://latex.codecogs.com/png.latex?X%5E1*X%5E2">라는 변수로)</li>
<li>결과 표로 이해하기 <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240602/index_files/figure-html/68547606-1-image.png" class="img-fluid" alt="image.png">
<ul>
<li>radio의 p-value가 유의하지 않아 변수제거를 했을 때, 파생변수인 radio*TV는 어떻게 할까?
<ul>
<li>제거한다 (<strong>오리지널 변수를 제거한다면 파생변수도 제거, 오리지널이 있을때만 사용가능</strong>)</li>
<li><strong>Hierarchy principle : 파생변수가 존재하려면 오리지널 변수도 있어야 함</strong></li>
</ul></li>
<li>Coefficient 값 기준으로 radio가 TV보다 더 중요한 변수인가?
<ul>
<li>Coefficient는 단위(unit)를 간과하므로, 높다고 해서 반드시 중요한 것은 아니다</li>
</ul></li>
</ul></li>
</ul></li>
<li>변수(feature)의 관계는 독립적인게 좋음</li>
</ul></li>
<li>Non-linearity의 Multiple regrssion 활용한 표현
<ul>
<li>예를 들어 전반부는 정비례 / 후반부는 반비례 한다면
<ul>
<li><img src="https://latex.codecogs.com/png.latex?B_1%20*%EB%82%98%EC%9D%B4%20+%20B_2%20*%20%EB%82%98%EC%9D%B4%5E2"> 와 같이 표현 가능</li>
<li>위의 표현식은 변수의 독립성을 저해하는가?(사용해도 되나?)
<ul>
<li>서로 다른관계를 묘사하는 것이라면 사용 가능
<ul>
<li>연봉, 자산 모두 대출점수의 양의 상관관계라면 사용 불가</li>
<li><img src="https://latex.codecogs.com/png.latex?B_1%20*%EB%82%98%EC%9D%B4">는 양의 상관관계, <img src="https://latex.codecogs.com/png.latex?B_2%20*%20%EB%82%98%EC%9D%B4%5E2">는 음의 상관관계라면 사용 가능</li>
</ul></li>
</ul></li>
</ul></li>
<li>다만 변수가 많아지면 한계가 있으므로, <strong>비선형에 적합한 타 모델이 더 좋음</strong></li>
</ul></li>
<li>상관관계를 빠르게 파악하는 법 : 모든 산점도(Scatter plot)를 그려보기
<ul>
<li>미리 파악하여 상관관계가 있는 것을 빼고 모델링하면 더 좋은 결과가 나타남</li>
<li>중복변수가 들어가거나 하더라도, Robust한 모델을 사용하는 것도 좋은 방법</li>
</ul></li>
</ul>
</section>
<section id="logistic-regression" class="level2">
<h2 class="anchored" data-anchor-id="logistic-regression">Logistic regression</h2>
<ul>
<li>Linear regression으로 현재까지 예측문제를 풀었다면, <strong>Logistic regression으로는 분류문제를 풀 수 있다</strong></li>
<li>머신러닝으로 푸는 큰 3가지 문제 : 예측 vs 분류 vs 클러스터링
<ul>
<li>분류 : 메일이 왔을 때 스팸인가 아닌가, 신용카드승인내역이 이상거래인가 정상거래인가</li>
</ul></li>
<li>Hyphothesis의 반영
<ul>
<li>기존의 Linear regression(<img src="https://latex.codecogs.com/png.latex?y=Wx+b">)의 식으로는 놓치는 case가 많이 생김</li>
<li><code>Logistic(Sigmoid) function</code>을 활용하여 해결 가능 <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240602/index_files/figure-html/38537c49-2-image.png" class="img-fluid" alt="image.png">
<ul>
<li>z가 아무리 커지거나 작아져도 0~1사이에서 벗어나지 않음</li>
<li>0.5를 기준으로 판단가능 (Pass/Fail, 스팸/정상 등)</li>
<li><strong>z부분에 기존에 데이터를 학습했던 Linear regression식(<img src="https://latex.codecogs.com/png.latex?y=Wx+b">)을 넣으면(plug-in), 분류문제를 푸는 함수로 바꿈</strong></li>
<li>값이 0.7이 나온다면, Pass확률이 70%인 것으로 해석가능</li>
</ul></li>
</ul></li>
<li>Descision boundary 경계영역
<ul>
<li>예를 들어 2가지 Case를 분류하는 Linear Line이 있다면, 그것이 Descision boundary (Non Linear한 경우라도 분류문제를 풀 수 있고, 그 Line은 Descision boundary)</li>
</ul></li>
<li>Cost function에서는 문제가 생김
<ul>
<li><p>Sigmoid function으로 간편하게 분류문제를 푸는 함수로 바꿨지만, 기존처럼 미분을 하면 문제 발생</p>
<ul>
<li>값이 조금만 크거나 작아져도 기울기가 0이 됨 → 기존의 Mean Square방식 적용 불가 <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240602/index_files/figure-html/38537c49-1-image-2.png" class="img-fluid" alt="image-2.png"></li>
<li>GD 사용시 최적 지점까지 가지 못하는 경우 발생</li>
</ul></li>
<li><p><code>Cross entropy</code>를 사용하게 됨</p>
<pre><code>  [Cost function으로 사용되기 위한 2가지 조건]
  1. 클수록 나쁘고 작을수록 좋아야 함
  2. 미분이 가능해야 함
    (미분이 안되는 경우 : 평평한 부분이 있거나, 위아래로 변동이 큰 구간이 많은 경우)

  * 두 조건을 충족하는 것은 쉽지 않으며, Accuracy는 1번만 충족
  * Cross entropy는 위의 2개 조건을 모두 충족</code></pre>
<ul>
<li>2가지 상황(y=0[pass], y=1[fail])에 대한 상황에 대해 다른 식 사용
<ul>
<li>필요시 하나의 식으로도 나타낼 수 있음 (y값에 따라 한쪽 식이 0이 되는 형태)</li>
</ul></li>
<li>현대에서도 많이 쓰이는 함수인 Cross entropy (gpt4 등)</li>
<li>GD경사하강법으로도 사용 가능</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="모형예측classification의-성과평가confusion-matrix" class="level2">
<h2 class="anchored" data-anchor-id="모형예측classification의-성과평가confusion-matrix">모형예측(Classification)의 성과평가(Confusion matrix)</h2>
<ul>
<li><p>Accuracy(정답률) : 실제값 중 맞춘 비율</p>
<ul>
<li>분류가 <strong>Imbalance한 경우 한계</strong>가 있음(신용카드 경우도 대다수가 정상거래) (예를 들어 암환자 비율이 90%이상일 때, 로직없이 그냥 암환자로만 판정해도 정답률 높음)</li>
</ul></li>
<li><p>Precision(암으로 판정한 사람 중, 실제로 암) vs Recall(실제 암인 사람 중, 암으로 판정된 사람)</p>
<ul>
<li>암환자를 정상환자로 판단하는 것은 치명적</li>
<li>암과 같은 케이스는 기본적으로 암으로 ’판단’하는 것이 많아져야하므로 Recall을 사용 (분자가 ’암 판정’인, 분자가 커질수록 점수가 높은 recall을 사용하는게 적절)</li>
<li><strong>프로젝트 특성에 따라 적합한 모델 뿐 아니라 적합한 지표를 사용하는 것이 중요</strong></li>
</ul></li>
<li><p>Precision이 더 중요한 케이스</p>
<ul>
<li>불량제품 하나를 검수하기 위해 1만개의 정상제품을 검사하면 비효율적</li>
<li>1개의 불량제품을 감수하고 1만개를 살리는게 효율적</li>
</ul></li>
<li><p><strong>분류가 balance한지 imbalance한지를 체크</strong></p></li>
<li><p>F1 score : Precision과 Recall의 조화평균</p></li>
<li><p>Confusion matrix를 그래프로 visualize 해서 보여주면 더 설득에 용이</p></li>
</ul>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>파이썬</category>
  <category>머신러닝</category>
  <category>딥러닝</category>
  <category>MStudy</category>
  <guid>https://kr9268.github.io/posts/meta-dl-creditcard-20240602/</guid>
  <pubDate>Sun, 02 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[M_Study_1주차] Tensorflow / Linear Regression</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/meta-dl-creditcard-20240526/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>참여중인 딥러닝 스터디 1주차 기록입니다.</p>
</section>
<section id="tensorflow-pytorch" class="level2">
<h2 class="anchored" data-anchor-id="tensorflow-pytorch">Tensorflow, Pytorch</h2>
<ul>
<li>프레임워크 2가지 존재 : Tensorflow(텐서플로우, 구글), Pytorch(파이토치, 페이스북)
<ul>
<li>알파고(딥마인드)시점까지는 ai의 90퍼센트 이상은 텐서플로우로 구현되었으나, 후발주자로 페이스북이 파이토치를 만들고 경쟁구도가 되었음</li>
</ul></li>
<li>파이토치 vs 텐서플로우
<ul>
<li>파이토치 : high레벨에 가까운 pythonic함 (사람의 직관에 가까운, 추상화된) 대학원 등 교육 쪽에서 많이 사용(구현해보는 것에 중점) 사용자 증가로 긍정적 생태계 조성(텐서플로우에는 없는 함수가 개발될 수 있고, 디버깅 쉬워짐[참고Case많음], 참고강의 많음)</li>
<li>텐서플로우 : low레벨에 가까운 효율성 (기계가 이해하기 쉬운 C언어와 같은) 산업 등 비즈니스 영역에서 많이 사용(효율성 중시)</li>
</ul></li>
</ul>
</section>
<section id="tensor" class="level2">
<h2 class="anchored" data-anchor-id="tensor">Tensor</h2>
<ul>
<li>Tensor : ai에서 사용하는 배열 (차원=rank), 고차원의 데이터 저장(숫자뿐 아니라 문자도 가능)
<ul>
<li>0차원 scalar / 1차원 vector / 2차원 matric (2d tensor) /3차원 3 tensor (3d tendor) / N차원 N tensor</li>
<li>참고영상 : https://youtu.be/m0qwxNA7IzI?si=FeyWcPYuun7T_QON</li>
</ul></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240526/index_files/figure-html/a6d10b1d-1-image.png" class="img-fluid figure-img"></p>
<figcaption>image.png</figcaption>
</figure>
</div>
<ul>
<li>고차원/비정형 데이터 필요성 예시
<ul>
<li>이미지 데이터(흑백)는 3d tensor 필요</li>
<li>이미지 데이터(컬러)는 4d tensor 필요</li>
<li>영상 데이터는 5d tensor 필요</li>
<li>(결론→) 비정형데이터의 처리에 있어 tensor가 필요</li>
</ul></li>
<li>기존에는 매출, 성장률 등 숫자(정형 데이터)만 썼다면, 이제는 이미지(비정형 데이터) 등도 데이터 분석에 사용하기 시작함</li>
</ul>
</section>
<section id="variable" class="level1">
<h1>Variable</h1>
<ul>
<li><p>연산 등은 data type을 일치시켜야 정상적으로 가능</p></li>
<li><p>Variable 타입 (float32/64 , int8/16/32/64)</p>
<ul>
<li>컴퓨터는 수를 2진수로 표현하며, float데이터의 경우는 경우 오차가 발생하고, 이를 사용한 계산이 많아수록 오차가 커짐</li>
<li>float64가 언제나 좋은 것은 아님(메모리 사용량[비용], 연산속도의 문제)</li>
<li><strong>딥러닝에서는 주로 32bit를 주로 사용</strong>(숫자 하나하나에 큰 의미가 있지 않음, 중요한 것은 숫자 사이의 관계)
<ul>
<li>딥러닝은 엄청 많은 계산을 해야하기 때문에, 비용적으로 저렴한 32bit 사용 &gt; [컴퓨터에서 계산을 담당하게 되는 부품은 CPU, GPU] <br> CPU 어려운 계산을 조금 가능 / GPU 쉬운 계산을 많이 가능<br> (교수와 초등학생에 비유 가능 → 1개의 미적분이라면 CPU, 1만개의 사칙연산은 GPU)<br> → 그렇기 때문에 GPU를 많이 사용함<br> (많이 쓰이는 그래픽카드는 한개당 3천만원, 구글 프로젝트는 1만개씩 사용 1~6개월정도 사용)</li>
</ul></li>
</ul></li>
</ul>
<section id="tensorflow-실습-constant-rank" class="level2">
<h2 class="anchored" data-anchor-id="tensorflow-실습-constant-rank">Tensorflow 실습 (constant, rank)</h2>
<ul>
<li><p>텐서플로우 2.0의 차이 &gt; 즉시 실행모드(Eager Mode)지원<br> (1.x버전에서는 그래프를 생성하고 초기화하는 등 별도 작업이 필요했었음)<br> <br></p></li>
<li><p>Rank(축) : 차원의 수</p></li>
<li><p>Shape(형상) : 0, 1, 2차원 등 데이터의 차원</p></li>
<li><p>dtype : <code>string</code>, <code>float32</code>, <code>float16</code>, <code>int32</code>, <code>int8</code> 등 데이터 타입</p></li>
</ul>
<div id="f98caba0" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tf.__version__)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2.16.1</code></pre>
</div>
</div>
<div id="6141b8eb" class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.constant(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb3-2">b  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.constant([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb3-3">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.constant([[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>]])</span>
<span id="cb3-4">d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.constant([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hello'</span>])</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[tf.rank 차원의 수 출력]'</span>)</span>
<span id="cb3-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tf.rank(a))</span>
<span id="cb3-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tf.rank(b))</span>
<span id="cb3-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tf.rank(c))</span>
<span id="cb3-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tf.rank(d))</span>
<span id="cb3-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>()</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[변수 자체 출력]'</span>)</span>
<span id="cb3-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a)</span>
<span id="cb3-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(b)</span>
<span id="cb3-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(c)</span>
<span id="cb3-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[tf.rank 차원의 수 출력]
tf.Tensor(0, shape=(), dtype=int32)
tf.Tensor(1, shape=(), dtype=int32)
tf.Tensor(2, shape=(), dtype=int32)
tf.Tensor(1, shape=(), dtype=int32)

[변수 자체 출력]
tf.Tensor(2, shape=(), dtype=int32)
tf.Tensor([2 3], shape=(2,), dtype=int32)
tf.Tensor(
[[2 3]
 [6 7]], shape=(2, 2), dtype=int32)
tf.Tensor([b'hello'], shape=(1,), dtype=string)</code></pre>
</div>
</div>
</section>
</section>
<section id="난수생성" class="level1">
<h1>난수생성</h1>
<ul>
<li>tf.random.uniform (균등분포 uniform distribution)</li>
<li>tf.random.normal (정규분포 normal distribution)
<ul>
<li>모든 분포 중 가장 중요한 분포, 분포 상 가운데 부분 데이터를 많이 가져오게 됨 (정규분포는 평균과 sd만 있으면 그릴 수 있다)</li>
</ul></li>
</ul>
<div id="16303ac5" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">rand1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.random.uniform(shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], minval<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, maxval<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(rand1.shape)</span>
<span id="cb5-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(rand1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(1,)
tf.Tensor([0.8562789], shape=(1,), dtype=float32)</code></pre>
</div>
</div>
<div id="7bd604f7" class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">rand2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.random.normal(shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, stddev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-2">rand3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.random.normal(shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, stddev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(rand2.shape)</span>
<span id="cb7-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(rand2)</span>
<span id="cb7-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>()</span>
<span id="cb7-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(rand3.shape)</span>
<span id="cb7-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(rand3)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(1, 2)
tf.Tensor([[-0.8665893   0.65539646]], shape=(1, 2), dtype=float32)

(3, 2)
tf.Tensor(
[[ 0.2873476   0.08000568]
 [ 0.23599206  0.11011286]
 [-3.2414987   0.7665266 ]], shape=(3, 2), dtype=float32)</code></pre>
</div>
</div>
<section id="계산-add-subtract-multiply" class="level2">
<h2 class="anchored" data-anchor-id="계산-add-subtract-multiply">계산 (add, subtract, multiply)</h2>
<ul>
<li>add, subtract, multiply (<code>+</code>, <code>-</code>, <code>*</code> 기호로도 가능)</li>
</ul>
<div id="01f10f64" class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.constant(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb9-2">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.constant(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</div>
<div id="d023566a" class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tf.add(a,b))</span>
<span id="cb10-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>b)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor(5, shape=(), dtype=int32)
tf.Tensor(5, shape=(), dtype=int32)</code></pre>
</div>
</div>
<div id="7df4614a" class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tf.subtract(a,b))</span>
<span id="cb12-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>b)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor(1, shape=(), dtype=int32)
tf.Tensor(1, shape=(), dtype=int32)</code></pre>
</div>
</div>
<div id="8117cbdb" class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tf.multiply(a,b))</span>
<span id="cb14-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>b)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor(6, shape=(), dtype=int32)
tf.Tensor(6, shape=(), dtype=int32)</code></pre>
</div>
</div>
</section>
<section id="numpy와-tensor의-변환" class="level2">
<h2 class="anchored" data-anchor-id="numpy와-tensor의-변환">numpy와 tensor의 변환</h2>
<ul>
<li>둘 다 데이터를 담는 container</li>
<li>학습이 잘되고 있는지, 중간결과 등을 확인할때 numpy형태로 cpu로 확인</li>
<li>실제 계산은 tensor 형태로 gpu에서 수행</li>
</ul>
<div id="a2c3d50f" class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># numpy()</span></span>
<span id="cb16-2">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>b)</span>
<span id="cb16-3"></span>
<span id="cb16-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(c)</span>
<span id="cb16-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(c))</span>
<span id="cb16-6"></span>
<span id="cb16-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>()</span>
<span id="cb16-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(c.numpy())</span>
<span id="cb16-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(c.numpy()))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor(5, shape=(), dtype=int32)
&lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;

5
&lt;class 'numpy.int32'&gt;</code></pre>
</div>
</div>
<div id="509406c0" class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tf.convet_to_tensor()</span></span>
<span id="cb18-2">c_sqrt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.sqrt(c,dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)</span>
<span id="cb18-3">c_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.convert_to_tensor(c_sqrt)</span>
<span id="cb18-4"></span>
<span id="cb18-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(c_sqrt)</span>
<span id="cb18-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(c_sqrt))</span>
<span id="cb18-7"></span>
<span id="cb18-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>()</span>
<span id="cb18-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tf.convert_to_tensor(c_sqrt))</span>
<span id="cb18-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(tf.convert_to_tensor(c_sqrt)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2.236068
&lt;class 'numpy.float32'&gt;

tf.Tensor(2.236068, shape=(), dtype=float32)
&lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;</code></pre>
</div>
</div>
</section>
</section>
<section id="broadcasting" class="level1">
<h1>broadcasting</h1>
<ul>
<li>tensor의 형태가 다르지만 broadcasting으로 빈 부분을 채워 계산</li>
</ul>
<div id="d16e14eb" class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.constant([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>],[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.</span>]])</span>
<span id="cb20-2">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>&lt;tf.Tensor: shape=(2, 3), dtype=float32, numpy=
array([[11., 12., 13.],
       [14., 15., 16.]], dtype=float32)&gt;</code></pre>
</div>
</div>
</section>
<section id="행렬-곱셈matrix-multiplication" class="level1">
<h1>행렬 곱셈(matrix multiplication)</h1>
<ul>
<li>딥러닝 공부 전 어떻게 하는 것인지 알아두면 좋음</li>
</ul>
<div id="80120715" class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span> tf.transpose(t)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>&lt;tf.Tensor: shape=(2, 2), dtype=float32, numpy=
array([[14., 32.],
       [32., 77.]], dtype=float32)&gt;</code></pre>
</div>
</div>
</section>
<section id="타입변환" class="level1">
<h1>타입변환</h1>
<ul>
<li><p>기본 dtype : <code>float32</code>, <code>int32</code></p></li>
<li><p>연산시 tensor의 타입을 맞춰야 함</p></li>
<li><p>타입 변환에는 <code>tf.cast()</code> 사용<br> <br></p></li>
<li><p>타입이 달라 연산이 안되는 오류는 텐서플로우를 사용하며 많이 발생, 데이터타입을 지정하며 쓰는 것을 권장 &gt; 추가지식 <br> <code>2.</code> 과 같이 0을 생략해도 float로 간주 파이썬은 인간처럼 데이터형이 달라도 계산하지만(2+2.0), 다른 언어는 오류 발생</p></li>
</ul>
<div id="213881cd" class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.constant(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb24-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a)</span>
<span id="cb24-3"></span>
<span id="cb24-4">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.constant(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>)</span>
<span id="cb24-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(b)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor(2, shape=(), dtype=int32)
tf.Tensor(2.0, shape=(), dtype=float32)</code></pre>
</div>
</div>
<div id="15ec004a" class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 일부러 오류나게 한 코드</span></span>
<span id="cb26-2">a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>b</span></code></pre></div>
<div class="cell-output cell-output-error">
<div class="ansi-escaped-output">
<pre><span class="ansi-red-fg ansi-bold">---------------------------------------------------------------------------</span>

<span class="ansi-red-fg ansi-bold">InvalidArgumentError</span>                      Traceback (most recent call last)

Cell <span class="ansi-green-fg ansi-bold">In[33], line 2</span>

<span class="ansi-green-fg">      1</span> <span style="font-style:italic;color:rgb(95,135,135)"># 일부러 오류나게 한 코드</span>

<span class="ansi-green-fg ansi-bold">----&gt; 2</span> <span class="ansi-yellow-bg">a</span><span style="color:rgb(98,98,98)" class="ansi-yellow-bg">+</span><span class="ansi-yellow-bg">b</span>



File <span class="ansi-green-fg ansi-bold">c:\Users\kibok\AppData\Local\Programs\Python\Python311\Lib\site-packages\tensorflow\python\util\traceback_utils.py:153</span>, in <span class="ansi-cyan-fg">filter_traceback.&lt;locals&gt;.error_handler</span><span class="ansi-blue-fg ansi-bold">(*args, **kwargs)</span>

<span class="ansi-green-fg">    151</span> <span style="font-weight:bold;color:rgb(0,135,0)">except</span> <span style="font-weight:bold;color:rgb(215,95,95)">Exception</span> <span style="font-weight:bold;color:rgb(0,135,0)">as</span> e:

<span class="ansi-green-fg">    152</span>   filtered_tb <span style="color:rgb(98,98,98)">=</span> _process_traceback_frames(e<span style="color:rgb(98,98,98)">.</span>__traceback__)

<span class="ansi-green-fg ansi-bold">--&gt; 153</span>   <span style="font-weight:bold;color:rgb(0,135,0)">raise</span> e<span style="color:rgb(98,98,98)">.</span>with_traceback(filtered_tb) <span style="font-weight:bold;color:rgb(0,135,0)">from</span> <span style="font-weight:bold;color:rgb(0,135,0)">None</span>

<span class="ansi-green-fg">    154</span> <span style="font-weight:bold;color:rgb(0,135,0)">finally</span>:

<span class="ansi-green-fg">    155</span>   <span style="font-weight:bold;color:rgb(0,135,0)">del</span> filtered_tb



File <span class="ansi-green-fg ansi-bold">c:\Users\kibok\AppData\Local\Programs\Python\Python311\Lib\site-packages\tensorflow\python\framework\ops.py:5983</span>, in <span class="ansi-cyan-fg">raise_from_not_ok_status</span><span class="ansi-blue-fg ansi-bold">(e, name)</span>

<span class="ansi-green-fg">   5981</span> <span style="font-weight:bold;color:rgb(0,135,0)">def</span> <span style="color:rgb(0,0,255)">raise_from_not_ok_status</span>(e, name) <span style="color:rgb(98,98,98)">-</span><span style="color:rgb(98,98,98)">&gt;</span> NoReturn:

<span class="ansi-green-fg">   5982</span>   e<span style="color:rgb(98,98,98)">.</span>message <span style="color:rgb(98,98,98)">+</span><span style="color:rgb(98,98,98)">=</span> (<span style="color:rgb(175,0,0)">"</span><span style="color:rgb(175,0,0)"> name: </span><span style="color:rgb(175,0,0)">"</span> <span style="color:rgb(98,98,98)">+</span> <span style="color:rgb(0,135,0)">str</span>(name <span style="font-weight:bold;color:rgb(0,135,0)">if</span> name <span style="font-weight:bold;color:rgb(175,0,255)">is</span> <span style="font-weight:bold;color:rgb(175,0,255)">not</span> <span style="font-weight:bold;color:rgb(0,135,0)">None</span> <span style="font-weight:bold;color:rgb(0,135,0)">else</span> <span style="color:rgb(175,0,0)">"</span><span style="color:rgb(175,0,0)">"</span>))

<span class="ansi-green-fg ansi-bold">-&gt; 5983</span>   <span style="font-weight:bold;color:rgb(0,135,0)">raise</span> core<span style="color:rgb(98,98,98)">.</span>_status_to_exception(e) <span style="font-weight:bold;color:rgb(0,135,0)">from</span> <span style="font-weight:bold;color:rgb(0,135,0)">None</span>



<span class="ansi-red-fg ansi-bold">InvalidArgumentError</span>: cannot compute AddV2 as input #1(zero-based) was expected to be a int32 tensor but is a float tensor [Op:AddV2] name: </pre>
</div>
</div>
</div>
<div id="6ecafda8" class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>tf.cast(b, tf.int32)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>&lt;tf.Tensor: shape=(), dtype=int32, numpy=4&gt;</code></pre>
</div>
</div>
<section id="autograph-오토그래프" class="level3">
<h3 class="anchored" data-anchor-id="autograph-오토그래프">AutoGraph (오토그래프)</h3>
<ul>
<li><p>Tensorflow가 작업을 좀 더 빠르게 동작하게 하기 위한 방법으로 Graph로 만들어 연산을 진행</p></li>
<li><p><code>tf.Graph</code></p></li>
<li><p>유연성이 있음</p>
<ul>
<li>모바일 애플리케이션, 임베디드 기기, 백엔드 서버와 같이 Python 인터프리터가 없는 환경에서 Tensorflow 사용 가능</li>
</ul></li>
</ul>
</section>
<section id="tf.function" class="level3">
<h3 class="anchored" data-anchor-id="tf.function"><span class="citation" data-cites="tf.function">@tf.function</span></h3>
<ul>
<li><p>자동으로 그래프를 생성(Auto Graph)</p></li>
<li><p>그래프로 변환하여 사용 -&gt; GPU 연산 가능</p></li>
<li><p>파이썬으로 구성된 함수를 텐서플로우의 그래프 형태로 다루고 싶을 때 사용가능</p></li>
<li><p>원본 함수가 필요하다면 <code>(tf.function).python_function()</code> <br></p></li>
</ul>
<div id="0629fcda" class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@tf.function</span></span>
<span id="cb29-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> my_function(x):</span>
<span id="cb29-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb29-4"></span>
<span id="cb29-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(my_function(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb29-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(my_function(tf.constant(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb29-7"></span>
<span id="cb29-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tf.autograph.to_code(my_function.python_function))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor(-13, shape=(), dtype=int32)
tf.Tensor(-13, shape=(), dtype=int32)
def tf__my_function(x):
    with ag__.FunctionScope('my_function', 'fscope', ag__.ConversionOptions(recursive=True, user_requested=True, optional_features=(), internal_convert_user_code=True)) as fscope:
        do_return = False
        retval_ = ag__.UndefinedReturnValue()
        try:
            do_return = True
            retval_ = ag__.ld(x) ** 2 - 10 * ag__.ld(x) + 3
        except:
            do_return = False
            raise
        return fscope.ret(retval_, do_return)
</code></pre>
</div>
</div>
<ul>
<li>텐서플로우는 계산 그래프 미리 고정 시켜 계산 등을 빠르게 하여 비용 등을 절감할 수 있다 (파이토치는 그래프고정기능 자체가 없어서 속도를 빠르게 할 수 없다)</li>
</ul>
<div id="5bee52d5" class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> timeit</span>
<span id="cb31-2"></span>
<span id="cb31-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> SequentialModel(tf.keras.Model):</span>
<span id="cb31-4">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb31-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>(SequentialModel, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>).<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb31-6">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.flatten <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.layers.Flatten(input_shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>))</span>
<span id="cb31-7">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dense_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>)</span>
<span id="cb31-8">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dropout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.layers.Dropout(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)</span>
<span id="cb31-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dense_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb31-10"></span>
<span id="cb31-11">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> call(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>,x):</span>
<span id="cb31-12">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.flatten(x)</span>
<span id="cb31-13">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dense_1(x)</span>
<span id="cb31-14">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dropout(x)</span>
<span id="cb31-15">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.dense_2(x)</span>
<span id="cb31-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x</span>
<span id="cb31-17"></span>
<span id="cb31-18">input_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.random.uniform([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>])</span>
<span id="cb31-19"></span>
<span id="cb31-20">eager_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SequentialModel()</span>
<span id="cb31-21">graph_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.function(eager_model)</span>
<span id="cb31-22"></span>
<span id="cb31-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Eager time: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>timeit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>timeit(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: eager_model(input_data), number <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb31-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Graph time: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>timeit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>timeit(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: graph_model(input_data), number <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>c:\Users\kibok\AppData\Local\Programs\Python\Python311\Lib\site-packages\keras\src\layers\reshaping\flatten.py:37: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.
  super().__init__(**kwargs)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Eager time: 18.815009500001906
Graph time: 4.405216699997254</code></pre>
</div>
</div>
</section>
<section id="변수-생성" class="level3">
<h3 class="anchored" data-anchor-id="변수-생성">변수 생성</h3>
<ul>
<li><code>tf.Variable</code></li>
<li>딥러닝 모델 학습 시, 그래프 연산이 필요할 때 사용</li>
</ul>
<div id="03723c02" class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.Variable(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">20.</span>)</span>
<span id="cb34-2"></span>
<span id="cb34-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(X)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;tf.Variable 'Variable:0' shape=() dtype=float32, numpy=20.0&gt;</code></pre>
</div>
</div>
</section>
<section id="autograd-자동-미분" class="level3">
<h3 class="anchored" data-anchor-id="autograd-자동-미분">Autograd (자동 미분)</h3>
<ul>
<li><p><code>tf.GradientTape</code> API를 사용</p></li>
<li><p><code>tf.Variable</code> 같은 일부 입력에 대한 기울기 계산</p>
<ul>
<li>기본적으로 한번만 사용됨</li>
</ul></li>
<li><p>변수가 포함된 연산만 기록</p></li>
<li><p>텐서플로우의 꽃</p></li>
<li><p>ai가 많이 한다는 단순계산은 미분이며 이를 많이 하므로 자동미분은 도움이 됨 <br> cpu에서 gpu로 넘기는 것은 c++수준의 코드를 짜야하고 넘겨야하는 번거로움이 있는데, 이를 자동으로 해줘서 편함</p></li>
</ul>
<div id="111fbdbf" class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.Variable(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>)</span>
<span id="cb36-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tape: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#with 아래 값들은 미분값 추정을 하겠다는 선언 (tape : 기록)</span></span>
<span id="cb36-3">  y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</div>
<div id="6ac1c6ae" class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(x))</span>
<span id="cb37-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(y))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;class 'tensorflow.python.ops.resource_variable_ops.ResourceVariable'&gt;
&lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;</code></pre>
</div>
</div>
<div id="044f925b" class="cell">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1">dy_dx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tape.gradient(y,x)</span>
<span id="cb39-2">dy_dx.numpy()</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre><code>6.0</code></pre>
</div>
</div>
<div id="cc6fb239" class="cell">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tape내에 선언하지 않은 x2로 인해 에러 발생 (일부러 에러낸 코드)</span></span>
<span id="cb41-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모든 수식을 gradient(추적)하는 것은 비용이 많이 드므로 필요한 것만 with로 선언</span></span>
<span id="cb41-3">x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.Variable(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb41-4">dy_dx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tape.gradient(y,x2)</span>
<span id="cb41-5">dy_dx.numpy()</span></code></pre></div>
<div class="cell-output cell-output-error">
<div class="ansi-escaped-output">
<pre><span class="ansi-red-fg ansi-bold">---------------------------------------------------------------------------</span>

<span class="ansi-red-fg ansi-bold">RuntimeError</span>                              Traceback (most recent call last)

Cell <span class="ansi-green-fg ansi-bold">In[43], line 2</span>

<span class="ansi-green-fg">      1</span> x2 <span style="color:rgb(98,98,98)">=</span> tf<span style="color:rgb(98,98,98)">.</span>Variable(<span style="color:rgb(98,98,98)">4</span>)

<span class="ansi-green-fg ansi-bold">----&gt; 2</span> dy_dx <span style="color:rgb(98,98,98)">=</span> <span class="ansi-yellow-bg">tape</span><span style="color:rgb(98,98,98)" class="ansi-yellow-bg">.</span><span class="ansi-yellow-bg">gradient</span><span class="ansi-yellow-bg">(</span><span class="ansi-yellow-bg">y</span><span class="ansi-yellow-bg">,</span><span class="ansi-yellow-bg">x2</span><span class="ansi-yellow-bg">)</span>

<span class="ansi-green-fg">      3</span> dy_dx<span style="color:rgb(98,98,98)">.</span>numpy()



File <span class="ansi-green-fg ansi-bold">c:\Users\kibok\AppData\Local\Programs\Python\Python311\Lib\site-packages\tensorflow\python\eager\backprop.py:1005</span>, in <span class="ansi-cyan-fg">GradientTape.gradient</span><span class="ansi-blue-fg ansi-bold">(self, target, sources, output_gradients, unconnected_gradients)</span>

<span class="ansi-green-fg">    965</span> <span style="font-style:italic;color:rgb(175,0,0)">"""Computes the gradient using operations recorded in context of this tape.</span>

<span class="ansi-green-fg">    966</span> 

<span class="ansi-green-fg">    967</span> <span style="font-style:italic;color:rgb(175,0,0)">Note: Unless you set `persistent=True` a GradientTape can only be used to</span>

<span class="ansi-green-fg ansi-bold">   (...)</span>

<span class="ansi-green-fg">   1002</span> <span style="font-style:italic;color:rgb(175,0,0)">   called with an unknown value.</span>

<span class="ansi-green-fg">   1003</span> <span style="font-style:italic;color:rgb(175,0,0)">"""</span>

<span class="ansi-green-fg">   1004</span> <span style="font-weight:bold;color:rgb(0,135,0)">if</span> <span style="color:rgb(0,135,0)">self</span><span style="color:rgb(98,98,98)">.</span>_tape <span style="font-weight:bold;color:rgb(175,0,255)">is</span> <span style="font-weight:bold;color:rgb(0,135,0)">None</span>:

<span class="ansi-green-fg ansi-bold">-&gt; 1005</span>   <span style="font-weight:bold;color:rgb(0,135,0)">raise</span> <span style="font-weight:bold;color:rgb(215,95,95)">RuntimeError</span>(<span style="color:rgb(175,0,0)">"</span><span style="color:rgb(175,0,0)">A non-persistent GradientTape can only be used to </span><span style="color:rgb(175,0,0)">"</span>

<span class="ansi-green-fg">   1006</span>                      <span style="color:rgb(175,0,0)">"</span><span style="color:rgb(175,0,0)">compute one set of gradients (or jacobians)</span><span style="color:rgb(175,0,0)">"</span>)

<span class="ansi-green-fg">   1007</span> <span style="font-weight:bold;color:rgb(0,135,0)">if</span> <span style="color:rgb(0,135,0)">self</span><span style="color:rgb(98,98,98)">.</span>_recording:

<span class="ansi-green-fg">   1008</span>   <span style="font-weight:bold;color:rgb(0,135,0)">if</span> <span style="font-weight:bold;color:rgb(175,0,255)">not</span> <span style="color:rgb(0,135,0)">self</span><span style="color:rgb(98,98,98)">.</span>_persistent:



<span class="ansi-red-fg ansi-bold">RuntimeError</span>: A non-persistent GradientTape can only be used to compute one set of gradients (or jacobians)</pre>
</div>
</div>
</div>
<ul>
<li>이미지 처리 CNN, 시계열 처리 RNN 등 배울 예정</li>
</ul>
</section>
<section id="linear-regression" class="level2">
<h2 class="anchored" data-anchor-id="linear-regression">Linear regression</h2>
<ul>
<li>추세선 등을 그어서 쉽게 판단 가능 + X(투입)에 대한 Y(산출)을 판단해 데이터에 기반한 정량적 판단(객관적 증거)</li>
<li>선형적관계 &gt; <img src="https://latex.codecogs.com/png.latex?Y%20=%20f(X)%20+%20%5Cepsilon"> 을 기본적인 ML/DL의 식이라고 할 때, <br> <img src="https://latex.codecogs.com/png.latex?f">의 관계가 선형적 관계가 있다고 가정할 때 Linear regression <br> <img src="https://latex.codecogs.com/png.latex?income%20=%20f(education,%20seniority)%20+%20%5Cepsilon"> 와 같은 예시를 들 수 있음</li>
<li>Single/Multi regression이 있다</li>
</ul>
<blockquote class="blockquote">
<p>[용어정리]<br>
response, target : Y값<br> feature, input, predictor : X값<br> <img src="https://latex.codecogs.com/png.latex?%5Cepsilon">(엡실론) : 오차<br> <img src="https://latex.codecogs.com/png.latex?%5Chat%7Bx%7D"> : 예측값 <img src="https://latex.codecogs.com/png.latex?x"> (위의 기호는 hat)</p>
</blockquote>
<ul>
<li>비선형적 관계를 다루는 모델을 사용하여 오차를 줄일 수 있음<br> <strong>단 오차를 0으로 만드는게 무조건 좋은 것은 아님</strong> → 다뤄보지 못한 데이터가 나오면 <strong>성능이 떨어짐(과적합 overfitting)</strong></li>
</ul>
</section>
<section id="interpretability-vs-flexibility" class="level2">
<h2 class="anchored" data-anchor-id="interpretability-vs-flexibility">interpretability vs flexibility</h2>
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240526/index_files/figure-html/04d9a463-4-image.png" class="img-fluid" alt="image.png"> &gt;[용어정리]<br>
flexibility : 성능, performance (100문제중 80문제를 찾추는가)<br> interpretability : 해석<br> Least Squares : Linear regression</p>
<ul>
<li>Deep learning : 높은 성능 / 낮은 해석능력 <br> 효과적이고 빠름, 비선형적이면 좋은 모델을 뽑을 수 없음(선형이라는 가정 자체가 틀린 시작)</li>
<li>Least Squares : 성능은 DL보다 낮지만 높은 해석능력 (전통적 통계학의 기반을 둔 머신러닝, Statistical ML)<br> 많은 시간과 데이터 필요, 비선형적 관계를 잘 모델링</li>
<li>성능이 좋으니 DL만 사용? &gt; 관련 사례<br> DL로 판단하여 대출거절한 것은 차별에 해당한다는 판례<br> 대출거절에 대해 근거를 제시해야하지만(자산부족 등), DL은 해석능력(interpretability)이 낮아 설명할 근거가 부족함<br> Least Squares(ㅣinear regression)로 근거를 제시했다면 차별이 되지 않았을 것<br></li>
</ul>
</section>
<section id="assessing-model-accuracy" class="level2">
<h2 class="anchored" data-anchor-id="assessing-model-accuracy">assessing model accuracy</h2>
<ul>
<li>error의 정의 : 예측값과 실제값의 차이
<ul>
<li>평균에 제곱한 에러 총합 MSE(Mean Squared Error), 줄일수록 좋음
<ul>
<li>제곱을 활용하는 이유 : 나중에 미분(에러가 최소화되는 지점찾기)를 하는데, 이를 위해서 함 (다음 강의에서 설명예정)</li>
<li><img src="https://latex.codecogs.com/png.latex?MSE_%7BTR%7D">(Training set), <img src="https://latex.codecogs.com/png.latex?MSE_%7BTE%7D">(Test set)</li>
</ul></li>
<li>데이터 특성(복잡/단순)과 모델 적용(복잡/단순)에 따른 Training, Test MSE추이 <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240526/index_files/figure-html/04d9a463-1-image-2.png" class="img-fluid" alt="image-2.png">
<ul>
<li>검정(정답), 노랑(Linear), 초록(Smoothing splines)/ 빨강(<img src="https://latex.codecogs.com/png.latex?MSE_%7BTR%7D">), 회색(<img src="https://latex.codecogs.com/png.latex?MSE_%7BTE%7D">)</li>
<li><strong>단순한 데이터에 복잡한 모델(초록)을 사용하니 과적합</strong> 발생<br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240526/index_files/figure-html/04d9a463-2-image-3.png" class="img-fluid" alt="image-3.png"></li>
<li><strong>데이터가 복잡하지 않아 Linear를 사용하니 Error추이(우측그래프)도 좋음</strong></li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="bias-vs-variance-의-trade-off" class="level2">
<h2 class="anchored" data-anchor-id="bias-vs-variance-의-trade-off">Bias vs Variance 의 Trade off</h2>
<ul>
<li><p>error는 Variance와 Bias로 이루어져 있다 &gt; Variance(V), Bias(B) 예시 (과녁) V 낮음 B 낮음 : 정중앙에 잘 모여있음 V 낮음 B 높음 : 잘 모여있지만 위치가 잘못됨 V 높음 B 낮음 : 정답 근처이지만 불안정하게 퍼져있음 V 높음 V 높음 : 정답 근처도 아니고, 불안정하게 퍼져있음</p></li>
<li><p>Bias낮음 : Training에서 적중률이 높다, Overfitting <strong>정답 자체를 틀리는 것</strong>과 관계</p></li>
<li><p>Variance높음 : 모델이 불안정하다 <strong>변동에 과민하게 반응하는 것</strong>과 관계 (결과의 극단적 변화, 무의미한 결과는 무의미한 것으로 간주해야 안정적인 모델)</p></li>
<li><p>둘 다 낮추기는 힘듦 (B낮추려면 V높아짐, B낮추려면 V 높아짐)</p></li>
<li><p>둘 다 낮추기 위한 단 하나의 방법 : 데이터를 추가한다</p></li>
<li><p>Bias와 Variance를 고려한 가장 error가 적은 부분 Sweet spot <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240526/index_files/figure-html/04d9a463-3-image-4.png" class="img-fluid" alt="image-4.png"></p></li>
</ul>


</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>파이썬</category>
  <category>머신러닝</category>
  <category>딥러닝</category>
  <category>MStudy</category>
  <guid>https://kr9268.github.io/posts/meta-dl-creditcard-20240526/</guid>
  <pubDate>Sun, 26 May 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[프로그래머스SQL] 3월에 태어난 여성 회원 목록 출력하기</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/prgms-sql-20240321/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>프로그래머스 SQL 문제풀이 연습(Oracle기준, Mysql아님)입니다 <br> (비상업적, 비영리적 용도)</p>
<p><a href="https://school.programmers.co.kr/learn/courses/30/parts/17042">문제링크</a><br> <a href="https://programmers.zendesk.com/hc/ko/articles/360034546572-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%EC%9D%98-%EB%AC%B8%EC%A0%9C%EB%A5%BC-%EC%99%B8%EB%B6%80%EC%97%90-%EA%B2%8C%EC%8B%9C%ED%95%A0-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94">게시가능여부</a></p>
</section>
<section id="문제-3월에-태어난-여성-회원-목록-출력하기" class="level2">
<h2 class="anchored" data-anchor-id="문제-3월에-태어난-여성-회원-목록-출력하기">문제 : 3월에 태어난 여성 회원 목록 출력하기</h2>
<div class="markdown solarized-dark">
<p>
다음은 식당 리뷰 사이트의 회원 정보를 담은 <code>MEMBER_PROFILE</code> 테이블입니다. <code>MEMBER_PROFILE</code> 테이블은 다음과 같으며 <code>MEMBER_ID</code>, <code>MEMBER_NAME</code>, <code>TLNO</code>, <code>GENDER</code>, <code>DATE_OF_BIRTH</code>는 회원 ID, 회원 이름, 회원 연락처, 성별, 생년월일을 의미합니다.
</p>
<table class="table">
<thead>
<tr>
<th>
Column name
</th>
<th>
Type
</th>
<th>
Nullable
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
MEMBER_ID
</td>
<td>
VARCHAR(100)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
MEMBER_NAME
</td>
<td>
VARCHAR(50)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
TLNO
</td>
<td>
VARCHAR(50)
</td>
<td>
TRUE
</td>
</tr>
<tr>
<td>
GENDER
</td>
<td>
VARCHAR(1)
</td>
<td>
TRUE
</td>
</tr>
<tr>
<td>
DATE_OF_BIRTH
</td>
<td>
DATE
</td>
<td>
TRUE
</td>
</tr>
</tbody>
</table>
<hr>
<h5 class="anchored">
문제
</h5>
<p>
<code>MEMBER_PROFILE</code> 테이블에서 생일이 3월인 여성 회원의 ID, 이름, 성별, 생년월일을 조회하는 SQL문을 작성해주세요. 이때 전화번호가 NULL인 경우는 출력대상에서 제외시켜 주시고, 결과는 회원ID를 기준으로 오름차순 정렬해주세요.
</p>
<hr>
<h5 class="anchored">
예시
</h5>
<p>
<code>MEMBER_PROFILE</code> 테이블이 다음과 같을 때
</p>
<table class="table">
<thead>
<tr>
<th>
MEMBER_ID
</th>
<th>
MEMBER_NAME
</th>
<th>
TLNO
</th>
<th>
GENDER
</th>
<th>
DATE_OF_BIRTH
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
<code>jiho92@naver.com</code>
</td>
<td>
이지호
</td>
<td>
01076432111
</td>
<td>
W
</td>
<td>
1992-02-12
</td>
</tr>
<tr>
<td>
<code>jiyoon22@hotmail.com</code>
</td>
<td>
김지윤
</td>
<td>
01032324117
</td>
<td>
W
</td>
<td>
1992-02-22
</td>
</tr>
<tr>
<td>
<code>jihoon93@hanmail.net</code>
</td>
<td>
김지훈
</td>
<td>
01023258688
</td>
<td>
M
</td>
<td>
1993-02-23
</td>
</tr>
<tr>
<td>
<code>seoyeons@naver.com</code>
</td>
<td>
박서연
</td>
<td>
01076482209
</td>
<td>
W
</td>
<td>
1993-03-16
</td>
</tr>
<tr>
<td>
<code>yoonsy94@gmail.com</code>
</td>
<td>
윤서연
</td>
<td>
NULL
</td>
<td>
W
</td>
<td>
1994-03-19
</td>
</tr>
</tbody>
</table>
<p>
SQL을 실행하면 다음과 같이 출력되어야 합니다.
</p>
<table class="table">
<thead>
<tr>
<th>
MEMBER_ID
</th>
<th>
MEMBER_NAME
</th>
<th>
GENDER
</th>
<th>
DATE_OF_BIRTH
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
<code>seoyeons@naver.com</code>
</td>
<td>
박서연
</td>
<td>
W
</td>
<td>
1993-03-16
</td>
</tr>
</tbody>
</table>
<hr>
<h5 class="anchored">
주의사항
</h5>
<p>
<code>DATE_OF_BIRTH</code>의 데이트 포맷이 예시와 동일해야 정답처리 됩니다.
</p>
</div>
<section id="작성답안" class="level2">
<h2 class="anchored" data-anchor-id="작성답안">작성답안</h2>
<div id="fig-polar" class="cell quarto-float quarto-figure quarto-figure-center anchored" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="sourceCode cell-code" id="fig-polar" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}" style="background: #f1f3f5;"><pre class="sourceCode python cell code-with-copy"><code class="sourceCode python"><span id="fig-polar-1">SELECT MEMBER_ID, MEMBER_NAME,  GENDER, TO_CHAR(DATE_OF_BIRTH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'YYYY-MM-DD'</span>)</span>
<span id="fig-polar-2">FROM MEMBER_PROFILE</span>
<span id="fig-polar-3">WHERE GENDER <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'W'</span></span>
<span id="fig-polar-4">  AND TO_CHAR(DATE_OF_BIRTH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MON'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MAR'</span></span>
<span id="fig-polar-5">  AND TLNO IS NOT NULL</span>
<span id="fig-polar-6">ORDER BY MEMBER_ID ASC</span></code></pre></div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
</section>
<section id="정리" class="level2">
<h2 class="anchored" data-anchor-id="정리">정리</h2>
<ul>
<li>WHERE 컬럼명 IS <strong>NOT</strong> NULL</li>
<li>WHERE <strong>NOT</strong> 컬럼명 IS NULL</li>
</ul>


</section>
</section><p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>프로그래머스/SQL</category>
  <guid>https://kr9268.github.io/posts/prgms-sql-20240321/</guid>
  <pubDate>Thu, 21 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[프로그래머스SQL] 조건에 부합하는 중고거래 댓글 조회하기</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/prgms-sql-20240320/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>프로그래머스 SQL 문제풀이 연습(Oracle기준, Mysql아님)입니다 <br> (비상업적, 비영리적 용도)</p>
<p><a href="https://school.programmers.co.kr/learn/courses/30/parts/17042">문제링크</a><br> <a href="https://programmers.zendesk.com/hc/ko/articles/360034546572-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%EC%9D%98-%EB%AC%B8%EC%A0%9C%EB%A5%BC-%EC%99%B8%EB%B6%80%EC%97%90-%EA%B2%8C%EC%8B%9C%ED%95%A0-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94">게시가능여부</a></p>
</section>
<section id="문제-조건에-부합하는-중고거래-댓글-조회하기" class="level2">
<h2 class="anchored" data-anchor-id="문제-조건에-부합하는-중고거래-댓글-조회하기">문제 : 조건에 부합하는 중고거래 댓글 조회하기</h2>
<div class="guide-section-description">
<pre><code>    &lt;h6 class="guide-section-title"&gt;문제 설명&lt;/h6&gt;
    &lt;div class="markdown solarized-dark"&gt;&lt;p&gt;다음은 중고거래 게시판 정보를 담은 &lt;code&gt;USED_GOODS_BOARD&lt;/code&gt; 테이블과 중고거래 게시판 첨부파일 정보를 담은 &lt;code&gt;USED_GOODS_REPLY&lt;/code&gt; 테이블입니다. &lt;code&gt;USED_GOODS_BOARD&lt;/code&gt; 테이블은 다음과 같으며 &lt;code&gt;BOARD_ID&lt;/code&gt;, &lt;code&gt;WRITER_ID&lt;/code&gt;, &lt;code&gt;TITLE&lt;/code&gt;, &lt;code&gt;CONTENTS&lt;/code&gt;, &lt;code&gt;PRICE&lt;/code&gt;, &lt;code&gt;CREATED_DATE&lt;/code&gt;, &lt;code&gt;STATUS&lt;/code&gt;, &lt;code&gt;VIEWS&lt;/code&gt;은 게시글 ID, 작성자 ID, 게시글 제목, 게시글 내용, 가격, 작성일, 거래상태, 조회수를 의미합니다.&lt;/p&gt;</code></pre>
<table class="table">
<thead>
<tr>
<th>
Column name
</th>
<th>
Type
</th>
<th>
Nullable
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
BOARD_ID
</td>
<td>
VARCHAR(5)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
WRITER_ID
</td>
<td>
VARCHAR(50)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
TITLE
</td>
<td>
VARCHAR(100)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
CONTENTS
</td>
<td>
VARCHAR(1000)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
PRICE
</td>
<td>
NUMBER
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
CREATED_DATE
</td>
<td>
DATE
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
STATUS
</td>
<td>
VARCHAR(10)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
VIEWS
</td>
<td>
NUMBER
</td>
<td>
FALSE
</td>
</tr>
</tbody>
</table>
<p>
<code>USED_GOODS_REPLY</code> 테이블은 다음과 같으며 <code>REPLY_ID</code>, <code>BOARD_ID</code>, <code>WRITER_ID</code>, <code>CONTENTS</code>, <code>CREATED_DATE</code>는 각각 댓글 ID, 게시글 ID, 작성자 ID, 댓글 내용, 작성일을 의미합니다.
</p>
<table class="table">
<thead>
<tr>
<th>
Column name
</th>
<th>
Type
</th>
<th>
Nullable
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
REPLY_ID
</td>
<td>
VARCHAR(10)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
BOARD_ID
</td>
<td>
VARCHAR(5)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
WRITER_ID
</td>
<td>
VARCHAR(50)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
CONTENTS
</td>
<td>
VARCHAR(1000)
</td>
<td>
TRUE
</td>
</tr>
<tr>
<td>
CREATED_DATE
</td>
<td>
DATE
</td>
<td>
FALSE
</td>
</tr>
</tbody>
</table>
<hr>
<h5 class="anchored">
문제
</h5>
<p>
<code>USED_GOODS_BOARD</code>와 <code>USED_GOODS_REPLY</code> 테이블에서 2022년 10월에 작성된 게시글 제목, 게시글 ID, 댓글 ID, 댓글 작성자 ID, 댓글 내용, 댓글 작성일을 조회하는 SQL문을 작성해주세요. 결과는 댓글 작성일을 기준으로 오름차순 정렬해주시고, 댓글 작성일이 같다면 게시글 제목을 기준으로 오름차순 정렬해주세요.
</p>
<hr>
<h5 class="anchored">
예시
</h5>
<p>
<code>USED_GOODS_BOARD</code> 테이블이 다음과 같고
</p>
<table class="table">
<thead>
<tr>
<th>
BOARD_ID
</th>
<th>
WRITER_ID
</th>
<th>
TITLE
</th>
<th>
CONTENTS
</th>
<th>
PRICE
</th>
<th>
CREATED_DATE
</th>
<th>
STATUS
</th>
<th>
VIEWS
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
B0001
</td>
<td>
kwag98
</td>
<td>
반려견 배변패드 팝니다
</td>
<td>
정말 저렴히 판매합니다. 전부 미개봉 새상품입니다.
</td>
<td>
12000
</td>
<td>
2022-10-01
</td>
<td>
DONE
</td>
<td>
250
</td>
</tr>
<tr>
<td>
B0002
</td>
<td>
lee871201
</td>
<td>
국내산 볶음참깨
</td>
<td>
직접 농사지은 참깨입니다.
</td>
<td>
3000
</td>
<td>
2022-10-02
</td>
<td>
DONE
</td>
<td>
121
</td>
</tr>
<tr>
<td>
B0003
</td>
<td>
goung12
</td>
<td>
배드민턴 라켓
</td>
<td>
사놓고 방치만 해서 팝니다.
</td>
<td>
9000
</td>
<td>
2022-10-02
</td>
<td>
SALE
</td>
<td>
212
</td>
</tr>
<tr>
<td>
B0004
</td>
<td>
keel1990
</td>
<td>
디올 귀걸이
</td>
<td>
신세계강남점에서 구입. 정품 아닐시 백퍼센트 환불
</td>
<td>
130000
</td>
<td>
2022-10-02
</td>
<td>
SALE
</td>
<td>
199
</td>
</tr>
<tr>
<td>
B0005
</td>
<td>
haphli01
</td>
<td>
스팸클래식 팔아요
</td>
<td>
유통기한 2025년까지에요
</td>
<td>
10000
</td>
<td>
2022-10-02
</td>
<td>
SALE
</td>
<td>
121
</td>
</tr>
</tbody>
</table>
<p>
<code>USED_GOODS_REPLY</code> 테이블이 다음과 같을 때
</p>
<table class="table">
<thead>
<tr>
<th>
REPLY_ID
</th>
<th>
BOARD_ID
</th>
<th>
WRITER_ID
</th>
<th>
CONTENTS
</th>
<th>
CREATED_DATE
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
R000000001
</td>
<td>
B0001
</td>
<td>
s2s2123
</td>
<td>
구매하겠습니다. 쪽지 드립니다.
</td>
<td>
2022-10-02
</td>
</tr>
<tr>
<td>
R000000002
</td>
<td>
B0002
</td>
<td>
hoho1112
</td>
<td>
쪽지 주세요.
</td>
<td>
2022-10-03
</td>
</tr>
<tr>
<td>
R000000003
</td>
<td>
B0006
</td>
<td>
hwahwa2
</td>
<td>
삽니다. 연락주세요.
</td>
<td>
2022-10-03
</td>
</tr>
<tr>
<td>
R000000004
</td>
<td>
B0007
</td>
<td>
hong02
</td>
<td>
예약중
</td>
<td>
2022-10-06
</td>
</tr>
<tr>
<td>
R000000005
</td>
<td>
B0009
</td>
<td>
hanju23
</td>
<td>
구매완료
</td>
<td>
2022-10-07
</td>
</tr>
</tbody>
</table>
<p>
SQL을 실행하면 다음과 같이 출력되어야 합니다.
</p>
<table class="table">
<thead>
<tr>
<th>
TITLE
</th>
<th>
BOARD_ID
</th>
<th>
REPLY_ID
</th>
<th>
WRITER_ID
</th>
<th>
CONTENTS
</th>
<th>
CREATED_DATE
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
반려견 배변패드 팝니다
</td>
<td>
B0001
</td>
<td>
R000000001
</td>
<td>
s2s2123
</td>
<td>
구매하겠습니다. 쪽지 드립니다.
</td>
<td>
2022-10-02
</td>
</tr>
<tr>
<td>
국내산 볶음참깨
</td>
<td>
B0002
</td>
<td>
R000000002
</td>
<td>
hoho1112
</td>
<td>
쪽지 주세요.
</td>
<td>
2022-10-03
</td>
</tr>
</tbody>
</table>
<hr>
<h5 class="anchored">
주의사항
</h5>
<p>
<code>CREATED_DATE</code>의 포맷이 예시의 포맷과 일치해야 정답처리 됩니다.
</p>
</div>
<pre><code>  &lt;/div&gt;</code></pre>
<section id="작성답안" class="level2">
<h2 class="anchored" data-anchor-id="작성답안">작성답안</h2>
<div id="fig-polar" class="cell quarto-float quarto-figure quarto-figure-center anchored" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="sourceCode cell-code" id="fig-polar" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}" style="background: #f1f3f5;"><pre class="sourceCode python cell code-with-copy"><code class="sourceCode python"><span id="fig-polar-1">SELECT board.TITLE, board.BOARD_ID,</span>
<span id="fig-polar-2">       reply.REPLY_ID, reply.WRITER_ID, reply.CONTENTS, TO_CHAR(reply.CREATED_DATE, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'YYYY-MM-DD'</span>)</span>
<span id="fig-polar-3">FROM USED_GOODS_BOARD board, USED_GOODS_REPLY reply</span>
<span id="fig-polar-4">WHERE TO_CHAR(board.CREATED_DATE, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'YYYYMM'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'202210'</span></span>
<span id="fig-polar-5">  AND board.BOARD_ID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> reply.BOARD_ID</span>
<span id="fig-polar-6">ORDER BY reply.CREATED_DATE ASC, board.TITLE ASC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
</section>
<section id="정리" class="level2">
<h2 class="anchored" data-anchor-id="정리">정리</h2>
<ul>
<li>각 테이블의 BOARD_ID 일치시키는 것을 실수하였음. 향후 동일케이스에 대해서는 고려하여 풀기</li>
<li>다중정렬<br> &gt; ORDER BY reply.CREATED_DATE ASC, board.TITLE ASC;<br> 앞의 컬럼일수록 정렬 우선순위를 가짐</li>
</ul>


</section>
</section><p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>프로그래머스/SQL</category>
  <guid>https://kr9268.github.io/posts/prgms-sql-20240320/</guid>
  <pubDate>Wed, 20 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[프로그래머스SQL] 조건에 맞는 도서 리스트 출력하기</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/prgms-sql-20240319/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>프로그래머스 SQL 문제풀이 연습(Oracle기준, Mysql아님)입니다 <br> (비상업적, 비영리적 용도)</p>
<p><a href="https://school.programmers.co.kr/learn/courses/30/parts/17042">문제링크</a><br> <a href="https://programmers.zendesk.com/hc/ko/articles/360034546572-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%EC%9D%98-%EB%AC%B8%EC%A0%9C%EB%A5%BC-%EC%99%B8%EB%B6%80%EC%97%90-%EA%B2%8C%EC%8B%9C%ED%95%A0-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94">게시가능여부</a></p>
</section>
<section id="문제-조건에-맞는-도서-리스트-출력하기" class="level2">
<h2 class="anchored" data-anchor-id="문제-조건에-맞는-도서-리스트-출력하기">문제 : 조건에 맞는 도서 리스트 출력하기</h2>
<section id="문제-설명" class="level3">
<h3 class="anchored" data-anchor-id="문제-설명">문제 설명</h3>
<p>다음은 어느 한 서점에서 판매중인 도서들의 도서 정보(BOOK) 테이블입니다.</p>
<p>BOOK 테이블은 각 도서의 정보를 담은 테이블로 아래와 같은 구조로 되어있습니다.</p>
<p>Column name Type Nullable Description<br> BOOK_ID INTEGER FALSE 도서 ID<br> CATEGORY VARCHAR(N) FALSE 카테고리 (경제, 인문, 소설, 생활, 기술)<br> AUTHOR_ID INTEGER FALSE 저자 ID<br> PRICE INTEGER FALSE 판매가 (원)<br> PUBLISHED_DATE DATE FALSE 출판일</p>
</section>
<section id="문제" class="level3">
<h3 class="anchored" data-anchor-id="문제">문제</h3>
<p>BOOK 테이블에서 2021년에 출판된 ‘인문’ 카테고리에 속하는 도서 리스트를 찾아서 도서 ID(BOOK_ID), 출판일 (PUBLISHED_DATE)을 출력하는 SQL문을 작성해주세요. 결과는 출판일을 기준으로 오름차순 정렬해주세요.</p>
<p>예시 예를 들어 BOOK 테이블이 다음과 같다면</p>
<p>BOOK_ID CATEGORY AUTHOR_ID PRICE PUBLISHED_DATE<br> 1 인문 1 10000 2020-01-01<br> 2 경제 2 9000 2021-02-05<br> 3 인문 2 11000 2021-04-11<br> 4 인문 3 10000 2021-03-15<br> 5 생활 1 12000 2021-01-10<br> 조건에 속하는 도서는 도서 ID 가 3, 4인 도서이므로 다음과 같습니다.</p>
<p>BOOK_ID PUBLISHED_DATE<br> 3 2021-04-11<br> 4 2021-03-15<br> 그리고 출판일 오름차순으로 정렬하여야 하므로 다음과 같은 결과가 나와야 합니다.</p>
<p>BOOK_ID PUBLISHED_DATE<br> 4 2021-03-15<br> 3 2021-04-11<br></p>
</section>
<section id="주의사항" class="level3">
<h3 class="anchored" data-anchor-id="주의사항">주의사항</h3>
<p>PUBLISHED_DATE의 데이트 포맷이 예시와 동일해야 정답처리 됩니다.</p>
</section>
</section>
<section id="작성답안" class="level2">
<h2 class="anchored" data-anchor-id="작성답안">작성답안</h2>
<div id="fig-polar" class="cell quarto-float quarto-figure quarto-figure-center anchored" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="sourceCode cell-code" id="fig-polar" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}" style="background: #f1f3f5;"><pre class="sourceCode python cell code-with-copy"><code class="sourceCode python"><span id="fig-polar-1">SELECT BOOK_ID, TO_CHAR(PUBLISHED_DATE, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'YYYY-MM-DD'</span>)</span>
<span id="fig-polar-2">FROM BOOK</span>
<span id="fig-polar-3">WHERE CATEGORY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'인문'</span> AND EXTRACT(YEAR FROM PUBLISHED_DATE) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span></span>
<span id="fig-polar-4">ORDER BY PUBLISHED_DATE ASC</span></code></pre></div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
</section>
<section id="정리" class="level2">
<h2 class="anchored" data-anchor-id="정리">정리</h2>
<ul>
<li>TO_CHAR(표시형식 변경)</li>
</ul>
<blockquote class="blockquote">
<p>SELECT TO_CHAR(컬럼명, ‘표시형식’) FROM 테이블명 표시형식(연도 4자리) : TO_CHAR(컬럼명, ‘YYYY’)<br> 표시형식(월) : TO_CHAR(컬럼명, ‘MM’)<br> 표시형식(일, 연기준 1~366) : TO_CHAR(컬럼명, ‘DDD’)<br> 표시형식(일, 일기준 1~31) : TO_CHAR(컬럼명, ‘DD’)<br> 표시형식(일, 요일) : TO_CHAR(컬럼명, ‘D’) * 지역설정에 따라 시작요일이 달라짐<br> <br> 표시형식(분기) : TO_CHAR(컬럼명, ‘Q’)<br> 표시형식(주, 연기준 1~53) : TO_CHAR(컬럼명, ‘WW’)<br> 표시형식(주, 월기준 1~53) : TO_CHAR(컬럼명, ‘W’)<br> <br> 표시형식(요일, MON/월) : TO_CHAR(컬럼명, ‘DY’)<br> 표시형식(요일, MONDAY/월요일) : TO_CHAR(컬럼명, ‘DAY’)<br> 표시형식(월, JAN/1월) : TO_CHAR(컬럼명, ‘MON’)<br> 표시형식(월, JANUARY/1월) : TO_CHAR(컬럼명, ‘MONTH’)<br> <br> 표시형식(시간, 12시간표기) : TO_CHAR(컬럼명, ‘HH12’)<br> 표시형식(시간, 24시간표기) : TO_CHAR(컬럼명, ‘HH24’)<br> 표시형식(분) : TO_CHAR(컬럼명, ‘MI’)<br> 표시형식(초) : TO_CHAR(컬럼명, ‘SS’)<br></p>
</blockquote>
<ul>
<li>AND(모두 만족) / OR(하나라도 만족) / NOT(조건과 맞지 않는)</li>
</ul>
<blockquote class="blockquote">
<p>연산자 우선순위(참고용) 1 괄호<br> 2 NOT<br> 3 비교 (&gt; &lt; = !)<br> 4 AND<br> 5 OR</p>
</blockquote>
<ul>
<li>ORDER BY 컬럼명 ASC (오름차순)</li>
<li>ORDER BY 컬럼명 DESC (내림차순)</li>
</ul>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>프로그래머스/SQL</category>
  <guid>https://kr9268.github.io/posts/prgms-sql-20240319/</guid>
  <pubDate>Tue, 19 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[프로그래머스SQL] 가장 비싼 상품 구하기</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/prgms-sql-20240318/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>프로그래머스 SQL 문제풀이 연습(Oracle기준, Mysql아님)입니다 <br> (비상업적, 비영리적 용도)</p>
<p><a href="https://school.programmers.co.kr/learn/courses/30/lessons/131697?language=oracle">문제링크</a><br> <a href="https://programmers.zendesk.com/hc/ko/articles/360034546572-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%EC%9D%98-%EB%AC%B8%EC%A0%9C%EB%A5%BC-%EC%99%B8%EB%B6%80%EC%97%90-%EA%B2%8C%EC%8B%9C%ED%95%A0-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94">게시가능여부</a></p>
</section>
<section id="문제-가장-비싼-상품-구하기" class="level2">
<h2 class="anchored" data-anchor-id="문제-가장-비싼-상품-구하기">문제 : 가장 비싼 상품 구하기</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/prgms-sql-20240318/question.png" class="img-fluid figure-img"></p>
<figcaption>문제 이미지</figcaption>
</figure>
</div>
</section>
<section id="작성답안" class="level2">
<h2 class="anchored" data-anchor-id="작성답안">작성답안</h2>
<div id="fig-polar" class="cell quarto-float quarto-figure quarto-figure-center anchored" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="sourceCode cell-code" id="fig-polar" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}" style="background: #f1f3f5;"><pre class="sourceCode python cell code-with-copy"><code class="sourceCode python"><span id="fig-polar-1">SELECT MAX(PRICE) AS MAX_PRICE</span>
<span id="fig-polar-2">FROM PRODUCT</span></code></pre></div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
</section>
<section id="정리" class="level2">
<h2 class="anchored" data-anchor-id="정리">정리</h2>
<ul>
<li>MAX(컬럼명) : 최대값</li>
<li>MIN(컬럼명) : 최소값</li>
</ul>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>프로그래머스/SQL</category>
  <guid>https://kr9268.github.io/posts/prgms-sql-20240318/</guid>
  <pubDate>Mon, 18 Mar 2024 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
