<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Blog</title>
<link>https://kr9268.github.io/</link>
<atom:link href="https://kr9268.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.555</generator>
<lastBuildDate>Sun, 09 Jun 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>[M_Study_3주차] Multi-class Classification / Artificial Neural Network</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/meta-dl-creditcard-20240609/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>참여중인 딥러닝 스터디 3주차 기록입니다.</p>
</section>
<section id="주차-과제-설명" class="level2">
<h2 class="anchored" data-anchor-id="주차-과제-설명">2주차 과제 설명</h2>
<ul>
<li>tf.random.set_seed(2024)
<ul>
<li>서로 다른 모델을 비교하는 경우, 시작점이 다른 것 때문에 성능우위가 다르게 측정되는 경우 발생 (같은 성능임에도 다르게 나오거나, 좋은 모델이 더 나쁜 모델로 오인되는 경우)</li>
<li>이러한 경우를 방지하고자, set_seed로 같은 지점에서 시작하게 할 수 있음</li>
<li>딥러닝은 복잡한 다차원의 함수이므로, 좋은 시작점에 따라 달라질 수 있음 (좋은 Optimizer를 사용하고 좋은 데이터를 쓴다면 차이는 줄어들 수 있음)</li>
</ul></li>
<li>Matrix Multiplication
<ul>
<li>A(1,2), B(2,1)와 같은 Matrix에서, A의 열(,2)과 B의 행(2,)의 숫자가 같아야 가능</li>
</ul></li>
<li>Cost function에서 마이너스(-)를 붙이는 경우
<ul>
<li>높을수록 안좋은 척도여야 할 때, 계산식이 높을수록 좋은 값인 경우 붙여서 변환</li>
</ul></li>
<li>Learning rate
<ul>
<li>GD에서 안정적으로 최적점에 가게하기 위해 학습률을 조정</li>
<li>사람이 지정하는 hyper parameter, 경험에 의해 넣는 경우가 많다(정답은 없음)</li>
</ul></li>
<li>Confusion Matrix
<ul>
<li>Recall, Precision 으로 표현하는 것은 경영진 등에는 와닿지 않을 수 있으므로 시각화하여 보여주면 좋음</li>
</ul></li>
</ul>
</section>
<section id="주차-과제-logistic-regression-코드-작성한-것" class="level2">
<h2 class="anchored" data-anchor-id="주차-과제-logistic-regression-코드-작성한-것">2주차 과제 Logistic regression 코드 작성한 것</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train data</span></span>
<span id="cb1-6">X_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb1-7">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>],</span>
<span id="cb1-8">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb1-9">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>],</span>
<span id="cb1-10">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>],</span>
<span id="cb1-11">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>]],</span>
<span id="cb1-12">                   dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)</span>
<span id="cb1-13">Y_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],</span>
<span id="cb1-14">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],</span>
<span id="cb1-15">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],</span>
<span id="cb1-16">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb1-17">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb1-18">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],],</span>
<span id="cb1-19">                   dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 회귀선 작성 전 분포확인</span></span>
<span id="cb1-22">colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> L<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> L <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> Y_train]</span>
<span id="cb1-23">plt.scatter(X_train[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], X_train[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Logistics regression'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/1b6f06d5-4-image.png" class="img-fluid figure-img"></p>
<figcaption>image.png</figcaption>
</figure>
</div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 학습</span></span>
<span id="cb2-2">tf.random.set_seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>)</span>
<span id="cb2-3">W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.Variable(tf.random.normal([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>))</span>
<span id="cb2-4">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.Variable(tf.random.normal([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>))</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> hypothesis(X):</span>
<span id="cb2-7">    z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.matmul(X, W) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="cb2-8">    sigmoid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tf.exp(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>z))</span>
<span id="cb2-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> sigmoid</span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> cost_fn(H, Y):</span>
<span id="cb2-12">    cost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>tf.reduce_mean(Y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>tf.math.log(H) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>tf.math.log(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>H))</span>
<span id="cb2-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> cost</span>
<span id="cb2-14"></span>
<span id="cb2-15">learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb2-16">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.optimizers.SGD(learning_rate)</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> step <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5001</span>):</span>
<span id="cb2-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> g:</span>
<span id="cb2-20">        pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hypothesis(X_train)</span>
<span id="cb2-21">        cost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cost_fn(pred, Y_train)</span>
<span id="cb2-22"></span>
<span id="cb2-23">        gradients <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> g.gradient(cost, [W,b])</span>
<span id="cb2-24">    </span>
<span id="cb2-25">    optimizer.apply_gradients(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(gradients, [W, b]))</span>
<span id="cb2-26"></span>
<span id="cb2-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> step <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb2-28">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Step=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>step<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, Cost = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>cost<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, W=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>W<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>numpy()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, b = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>numpy()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb2-29"></span>
<span id="cb2-30">w_hat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> W.numpy()</span>
<span id="cb2-31">b_hat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b.numpy()</span></code></pre></div>
<blockquote class="blockquote">
<p>Step=1, Cost = 0.7932398319244385, W=[[-0.10415223] [0.68125504]], b = [0.3810195] <br> Step=1001, Cost = 0.5122759938240051, W=[[0.1809378] [0.55177015]], b = [-0.97815347] <br> Step=2001, Cost = 0.39883172512054443, W=[[0.5135696] [0.6884617]], b = [-1.9777462] <br> Step=3001, Cost = 0.32507583498954773, W=[[0.7515713] [0.8368167]], b = [-2.7877953] <br> Step=4001, Cost = 0.27400580048561096, W=[[0.9350327] [0.97824335]], b = [-3.4628296] <br> Step=5001, Cost = 0.2367737740278244, W=[[1.0848083] [1.1075894]], b = [-4.039375]</p>
</blockquote>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Slope(Coefficient) 확인</span></span>
<span id="cb3-2">slope <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w_hat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>w_hat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb3-3">xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(X_train[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]),np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(X_train[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># min과 max 사이 구간의 숫자를 생성. x값</span></span>
<span id="cb3-4">yy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>slope<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b_hat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>w_hat[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]                             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># xx(x값)입력하여 y값 생성</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># train data분포</span></span>
<span id="cb3-7">plt.scatter(X_train[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], X_train[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Logistics regression'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 분류선(Decision Boundary)확인</span></span>
<span id="cb3-10">plt.plot(xx, yy, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Decision Boundary'</span>)</span>
<span id="cb3-11">plt.legend()</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/1b6f06d5-1-image-2.png" class="img-fluid figure-img"></p>
<figcaption>image-2.png</figcaption>
</figure>
</div>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confusion matrix</span></span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> confusion_matrix</span>
<span id="cb4-3"></span>
<span id="cb4-4">X_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],</span>
<span id="cb4-5">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>],</span>
<span id="cb4-6">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb4-7">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>],</span>
<span id="cb4-8">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>],</span>
<span id="cb4-9">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.</span>]],</span>
<span id="cb4-10">                   dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)</span>
<span id="cb4-11">Y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],</span>
<span id="cb4-12">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],</span>
<span id="cb4-13">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb4-14">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],</span>
<span id="cb4-15">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span>],</span>
<span id="cb4-16">                   [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>],],</span>
<span id="cb4-17">                   dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)</span>
<span id="cb4-18"></span>
<span id="cb4-19">Y_actual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Y_test</span>
<span id="cb4-20">Y_predicted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hypothesis(X_test)</span>
<span id="cb4-21">Y_predicted_binary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.where(Y_predicted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-22"></span>
<span id="cb4-23">CM_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> confusion_matrix(Y_actual, Y_predicted_binary, labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) </span>
<span id="cb4-24">CM_array</span></code></pre></div>
<blockquote class="blockquote">
<p>array([[2, 2],<br> [1, 1]], dtype=int64)</p>
</blockquote>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confusion matrix 시각화(seaborn)</span></span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb5-4"></span>
<span id="cb5-5">class_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Negative'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Positive'</span>]</span>
<span id="cb5-6">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb5-7">sns.heatmap(CM_array, annot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Blues'</span>,</span>
<span id="cb5-8">            xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>class_labels, yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>class_labels)</span>
<span id="cb5-9"></span>
<span id="cb5-10">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Confusion Matrix'</span>)</span>
<span id="cb5-11">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Predicted'</span>)</span>
<span id="cb5-12">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'True'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/1b6f06d5-2-image-3.png" class="img-fluid figure-img"></p>
<figcaption>image-3.png</figcaption>
</figure>
</div>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confusion matrix 시각화(Scikit-learn)</span></span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> confusion_matrix, ConfusionMatrixDisplay</span>
<span id="cb6-3"></span>
<span id="cb6-4">disp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ConfusionMatrixDisplay(confusion_matrix<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>CM_array, display_labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb6-5">disp.plot(cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.cm.Blues)</span>
<span id="cb6-6">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Confusion Matrix'</span>)</span>
<span id="cb6-7">plt.show()</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/1b6f06d5-3-image-4.png" class="img-fluid figure-img"></p>
<figcaption>image-4.png</figcaption>
</figure>
</div>
</section>
<section id="multi-class-classfication-regression" class="level2">
<h2 class="anchored" data-anchor-id="multi-class-classfication-regression">Multi-class Classfication regression</h2>
<ul>
<li><p>2가지 분류가 아닌 3가지 이상의 분류(A,B,C로 나누는 신용등급 등)</p></li>
<li><p>Binary classification과 달리 하나의 Decision boundary로는 해결 불가</p></li>
<li><p>One vs All(Rest)</p>
<ul>
<li>하나의 대상과, 아닌 것’들’로 Binary Classification을 여러번 수행</li>
<li>예를 들어 a, b, c 3가지를 분류하는 경우
<ul>
<li>아래와 같은 같은 3개의 식으로 표현할 수 있고,<br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/00653178-3-image.png" class="img-fluid" alt="image.png"></li>
<li>아래와 같이 하나의 행렬로 한번에 표현할 수 있다 <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/00653178-1-image-2.png" class="img-fluid" alt="image-2.png"></li>
</ul></li>
<li>Softmax : 각 결과값(<img src="https://latex.codecogs.com/png.latex?H_a,%20H_b,%20H_c">)의 비율(확률)이 나오게 됨(총합이 1)</li>
</ul></li>
<li><p>Cross entropy cost function</p>
<ul>
<li><p><strong>정보량은 확률에 반비례한다고 정의</strong> (정보량= $ 1 p$)</p>
<ul>
<li>특정 성씨의 사람을 뽑는다고 할 때, 한국의 주요 성씨인 김씨<img src="https://latex.codecogs.com/png.latex?1%20%5Cover%2010"> vs 소수 성씨인 남궁씨<img src="https://latex.codecogs.com/png.latex?1%20%5Cover%20100"></li>
</ul></li>
<li><p>로그를 취하여 전개하면 Cross entropy 식이 된다</p></li>
<li><p>Entropy : Measure for uncertainty (불확실성의 측정) <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/00653178-2-image-3.png" class="img-fluid" alt="image-3.png"></p></li>
<li><p>Case별 Cross entropy(cost function)</p>
<ul>
<li>출력값(결과값 softmax)과 실제값이 비슷한 경우 : 특정 값 산출</li>
<li>출력값(결과값 softmax)과 실제값이 완전히 다른 경우 : 무한대</li>
<li>출력값(결과값 softmax)과 실제값이 완전히 동일한 경우 : 0</li>
</ul></li>
<li><p>Cross entropy를 개인이 직접구현한다면 놓칠 수 있는 부분(cross entropy의 무한대)의 문제</p>
<ul>
<li>파이토치 등 많은 사람이 참여한 패키지를 사용하면 방지할 수 있음</li>
<li>컴퓨터에서의 Zero division error 등의 경우, 텐서플로우 등 패키지에선 분모에 0.00001등을 더하여 실제값엔 영향이 작게하며 오류 제거</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="softmax" class="level1">
<h1>Softmax</h1>
<ul>
<li><p>Multi class 분류에서 많이 하는 것 : 이미지 분류</p>
<ul>
<li>Image X가 함수f(x)[모델]를 통과하여 Label Y(Class)로 산출</li>
<li>Image데이터는 컴퓨터에게는 숫자로 이루어진 행렬로 보여짐</li>
</ul></li>
<li><p>아래의 경우에서 W의 차원은? (<img src="https://latex.codecogs.com/png.latex?Y=W*X+B">) → (10*3072)</p>
<ul>
<li>X : Image (3072<em>1) (실제로는 32[가로] </em> 32[세로] * 3[RGB])</li>
<li>Y : 고양이/자동차/새 등 Label (10 * 1)</li>
<li>B : (10*1)</li>
</ul></li>
<li><p>계산속도를 높이기 위한 방법</p>
<ul>
<li>곱하기 한번으로 값이 나오게끔 계산횟수를 줄임<br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/c12fd90a-1-image.png" class="img-fluid" alt="image.png"></li>
</ul></li>
<li><p>Flatten</p>
<ul>
<li>(2, 2)를 (4, 1)로 변경</li>
</ul></li>
<li><p>학습한 W를 시각화하면, 분류하고자 하는 것의 형태가 어느정도보임(고양이 분류를 위한 W라면 고양이 실루엣)</p></li>
<li><p>Softmax 함수</p>
<ul>
<li>Exponetial(<img src="https://latex.codecogs.com/png.latex?e">)의 사용
<ul>
<li>음수가 Score로 나와서 확률적 해석에 방해되는 상황을 방지하기 위해 사용</li>
</ul></li>
<li>Sigmoid가 Binary classification에 대한 함수인 것과 달리, Multi-class에 대해 사용 가능</li>
</ul></li>
</ul>
</section>
<section id="loss-function" class="level1">
<h1>Loss function</h1>
<ul>
<li>0/1 Loss (가장 원시적)
<ul>
<li>맞으면 0, 틀리면 1</li>
<li>문제점 : 적게 틀린 것(고양이를 다른 동물로)과 많이 틀린 것(고양이를 자동차로)의 패널티가 같음</li>
</ul></li>
<li>Log loss
<ul>
<li>틀린/맞춘 정도에 따라 패널티를 부여</li>
</ul></li>
<li>Exponetial loss
<ul>
<li>틀렸을 때 더 강한 패널티(기울기)</li>
</ul></li>
<li>Hinge loss
<ul>
<li>SVM(Support Vector Machine)에서 많이 사용</li>
</ul></li>
</ul>
</section>
<section id="cross-entropy" class="level1">
<h1>Cross entropy</h1>
<ul>
<li>Binary 상황에서의 Cross entropy 수식 <br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/83629cdf-2-image.png" class="img-fluid" alt="image.png"></li>
<li>Multi class 상황에서의 Cross entropy 수식<br> <img src="https://kr9268.github.io/posts/meta-dl-creditcard-20240609/index_files/figure-html/83629cdf-1-image-2.png" class="img-fluid" alt="image-2.png"></li>
</ul>
</section>
<section id="stochastic-gradient-descent" class="level1">
<h1>Stochastic Gradient Descent</h1>
<ul>
<li>Stochastic Gradient Descent : 데이터를 메모리 상황에 맞게 쪼개서 넣는 방식
<ul>
<li>예를 들어, 메모리 1GB/학습할 데이터 100GB 라면 데이터를 쪼개서 넣는 것</li>
<li>학습용 메모리 확보의 어려움 : V-Ram(그래픽카드 메모리)는 D-Ram(일반 램)보다 매우 비쌈</li>
<li>데이터는 많으므로 확보된 메모리에 맞게 데이터를 쪼개서 GD 진행</li>
</ul></li>
<li>Batch size(Minibatch) : 나눈 데이터의 단위
<ul>
<li>예를 들어 100을 1씩 나누었다면, Minibatch가 1이다 와 같이 표현함</li>
<li>Batch size는 2의 배수로 넣는 것이 관례</li>
<li>1만개의 데이터를 100으로 나누었다면, 경사하강법(GD)을 100회 진행</li>
</ul></li>
<li>Epoch, Step
<ul>
<li>100만개의 데이터를 1만개로 나눴고, 1만개를 100회 넣어 전체데이터를 1번 넣었다면?
<ul>
<li>1 Epoch (모든 데이터가 다 들어가야 1 epoch)</li>
<li>100 Step (데이터를 넣은 횟수)</li>
<li>Step횟수 &gt; Epoch횟수</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="neural-networks" class="level1">
<h1>Neural Networks</h1>
<ul>
<li><p>이미지나 오디오, 텍스트 등 비정형데이터를 처리하기 위해 만들어진 아키텍쳐</p></li>
<li><p>MLP : XOR문제를 풀 수 없는 상황에서, 사람의 신경망에서 착안하여 해결</p>
<ul>
<li>중간 신경망(hidden layer)하여, Multi Layer Perceptron(MLP)</li>
<li>위에서 진행한 Multi classification은 1 layer라면, MLP는 layer가 더 추가된 것</li>
<li>다양한 관계를 복합적으로 표현</li>
</ul></li>
<li><p>중간에 Activation function을 넣어 비선형성을 추가</p>
<ul>
<li>Sigmoid, tanh, ReLU 등 (ReLU를 많이 사용)</li>
</ul></li>
<li><p>Forward pass vs Back propagation</p>
<ul>
<li>Forward pass : 순서대로 계산</li>
<li>Back propagation : 뒤에서부터 앞쪽으로 미분(시작값은 1)
<ul>
<li>Chain rule를 활용
<ul>
<li>Upstream gradient에 Local grandient를 곱해 Downstream gradient가 나옴</li>
</ul></li>
<li>Forward pass대비 계산량이 적은 이점이 있다
<ul>
<li>Parameter <img src="https://latex.codecogs.com/png.latex?W_1">(계산량 10만), <img src="https://latex.codecogs.com/png.latex?W_2">(계산량 5만)가 있을 때,
<ul>
<li>Forward pass가 <img src="https://latex.codecogs.com/png.latex?W_1">의 중복계산이 발생</li>
<li>Back propagation은 Upstream의 값을 저장해두었다가 사용, 필요한 계산만 추가계산</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
<li><p>Patterns in Gradient Flow</p>
<ul>
<li>계산노드의 고정 : 미리 정해두면 Backpropagation미분계산을 빠르게 진행할 수 있음
<ul>
<li>1.0 Tensorflow가 Flexble하지 않지만 빠른 이유는 이런 계산노드의 고정 때문</li>
</ul></li>
<li>add gate(gradient distributor) : Upstream을 그대로 downstream으로</li>
<li>mul gate(swap multiplier) : downstream을 upstream에 곱해 반대쪽 downstream으로</li>
<li>copy gate(gradient adder)</li>
<li>max gate(gradient router)</li>
</ul></li>
</ul>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>파이썬</category>
  <category>머신러닝</category>
  <category>딥러닝</category>
  <guid>https://kr9268.github.io/posts/meta-dl-creditcard-20240609/</guid>
  <pubDate>Sun, 09 Jun 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>NH증권 직무인터뷰를 읽고(트레이딩&amp;빅데이터)</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/vba-noname-yyyymmdd/</link>
  <description><![CDATA[ 





<section id="참고한-공고-인터뷰-자료" class="level2">
<h2 class="anchored" data-anchor-id="참고한-공고-인터뷰-자료">참고한 공고 &amp;인터뷰 자료</h2>
<p>관심이 생겨서 관련 공고 등을 보고 있는데, 직무이해 겸 모르는 단어를 정리해봅니다.</p>
<div class="callout callout-style-simple callout-none no-icon callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-title-container flex-fill">
참고한 공고 (클릭해서 펼치기)
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p><a href="https://nhqv-recruit2024.com/NH1.html">NH투자증권 채용공고-Trading</a></p>
<p><a href="https://nhqv-recruit2024.com/interview_u_08.html">NH투자증권 채용공고-빅데이터 분석</a></p>
<p><a href="https://nhqv-recruit2024.com/interview_u_04.html">NH투자증권 직무인터뷰</a></p>
</div>
</div>
</div>
</section>
<section id="트레이딩-직무-단어정리" class="level2">
<h2 class="anchored" data-anchor-id="트레이딩-직무-단어정리">트레이딩 직무 단어정리</h2>
<ul>
<li>프랍 트레이딩(Proprietary Trading) : 고객이 아닌 금융회사의 돈으로 주식이나 파생상품 등 금융상품을 거래하는 것 (=자기계정거래, 자기계좌거래, 고유계정거래, 고유계좌거래)</li>
</ul>
<blockquote class="blockquote">
<p><strong><code>프랍트레이딩</code></strong>은 통상 선물·옵션 등 <code>파생상품 부문</code>, 일반적 주식투자 같은 <code>방향성 매매</code>, 알고리즘에 따라 투자하는 <code>시스템 매매</code>, <code>채권투자</code>, 부동산이나 인프라 등의 <code>대체투자</code> 등으로 나뉜다. 보통 <u>자기매매 비중이 높은 중소형 증권사</u>에는 많게는 50여명에 이르는 프랍트레이더들이 있다. 이 가운데 <u>80% 이상이 파생 트레이더다.</u><br><u>중소형 증권사들의 파생상품투자 비중이 높은 것은 비용이 싸기 때문이다.</u> 증권사의 경우 선물·옵션 거래시 <code>사후 증거금 제도</code>가 적용된다. 장중 거래에는 증거금이 따로 필요 없고 장 마감 후 포지션 규모에 따라 증거금을 마련하면 된다. 따라서 <u>장중에는 활발히 거래하고 장 마감 직전 파생상품을 보유하지 않았으면 증거금 부담은 없다.</u> <u>하루 단위로 청산하는 경우 사실상 금융비용은 없다.</u></p>
<p><a href="https://www.sedaily.com/NewsView/1HLP1AH6UG">상기내용 참고한 서울경제 기사링크</a><br> <a href="https://blog.naver.com/vvvtg/223231778959">거래증거금vs위탁증거금 내용 참고할 수 있는 블로그</a></p>
</blockquote>
<ul>
<li><p>장내거래 vs 장외거래 : 정규시장 외 체결되는 거래</p></li>
<li><p>매크로 지식 : Macro economics지식 (↔︎ Micro economics)</p></li>
<li><p>서킷브레이커(일시매매정지, Trading Curb) : 가격 변동이 지나친 경우 일시적으로 거래를 중단하는 것</p></li>
<li><p>틱 : 체결량에 따른 단위 (5틱 = 체결 5회 기준)</p></li>
<li><p>셀사이드(Sell-side|은행, 증권사 등) : 금융 서비스 등을 제공하여 수익 창출</p></li>
<li><p>바이사이드(Buy-side|자산운용사, 연기금, 보험사, 헤지펀드 등) : 투자를 하여 수익 창출</p></li>
</ul>
<blockquote class="blockquote">
<p><a href="https://brunch.co.kr/@quantdaddy/34">참고글:셀사이드와 바이사이드의 금융공학</a></p>
</blockquote>
<ul>
<li>하우스 : 증권사, 금융사 등 단체를 칭함</li>
</ul>
</section>
<section id="빅데이터-직무-단어정리" class="level2">
<h2 class="anchored" data-anchor-id="빅데이터-직무-단어정리">빅데이터 직무 단어정리</h2>
<ul>
<li>MTS : Mobile Trading System (HTS : Home Trading System)</li>
<li>원장 : 증권사가 고객계좌나 거래내역, 매매 등을 관리하는 프로그램</li>
</ul>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>직무분석</category>
  <guid>https://kr9268.github.io/posts/vba-noname-yyyymmdd/</guid>
  <pubDate>Sun, 28 Apr 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[버크셔 해서웨이의 재탄생 읽고] 용어 정리</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/bk-BerkshireHathaway-20240423-terms/</link>
  <description><![CDATA[ 





<p><strong>공부할 겸 혼자서 구글링하면서 용어 정리해보는 포스팅입니다</strong></p>
<section id="프롤로그" class="level2">
<h2 class="anchored" data-anchor-id="프롤로그">프롤로그</h2>
<ul>
<li><p><strong>경제적 해자(enonomic moat)</strong> : 성 외곽에서 성을 보호해주는 해자처럼 경쟁우위를 갖게 해주는 요소 (a business’s ability to maintain a competitive edge over its competitors)</p></li>
<li><p><strong>자본배분(capital allocation)</strong> : 경제적 자원들을 효율증대/이익극대화를 위해 분배/투자 하는 것 (distributing and investing a company’s financial resources in ways that will increase its efficiency, and maximize its profits) &gt; 자본배분을 알면 워런버핏 사례의 캐피털시티를 이해할 수 있다</p></li>
<li><p><strong>플로트(float, 책임준비금)</strong> : 보험회사가 보험금을 지급하기 위해 적립시키는 돈(은행과 달리 자산운용준칙에 따라 자율적으로 사용 가능)</p>
<ul>
<li>플로트라는 단어의 다른 뜻 : 일반 대중이 거래할 수 있게 발행한 보통주 (the regular shares a company has issued to the public that are available for investors to trade) &gt; 플로트를 알면 워런버핏 사례의 가이코를 이해할 수 있다 (내셔널 인뎀너티와 블루칩스탬프의 플로트를 활용한 투자법 등)</li>
</ul></li>
<li><p><strong>재보험</strong> : 보험계약상 책임의 전부 또는 일부를 다른 보험자에게 인수시킴 (위험의 분산과 인수능력의 극대화를 위해 필요, 위험 대비 자산이 충분치 않은 경우 재보험으로 보험금액의 전부 인수가능)</p></li>
<li><p><strong>영업이익(operating income/earnings)</strong> : 기업의 핵심사업(영업활동)으로 얻은 이익 (a measure of the amount of profit realized from a business’s core operations)</p></li>
<li><p><strong>연간 영업활동 순이익(operating earnings)</strong> : 영업활동에 필요한 차입금 등 부채의 이자비용도 차감한 이익(영업활동에서 발생한 순이익)</p></li>
<li><dl>
<dt><strong>일반 회계기준(GAAP, Generally Accepted Accounting Principles, GAAP)</strong></dt>
<dd>
일반적으로 인정된 회계원칙. 회계규정 자체 또는 회계실무 지침 등 광범위하게 인정되는 회계기준 &gt; GAAP관련 추가로 알아보기
</dd>
</dl></li>
<li><p>**IFRS(International&nbsp;Financial&nbsp;Reporting&nbsp;Standards) : 국제회계기준위원회에서 공표한 회계기준. IFRS를 공부하면 IFRS를 차용한 국가의 회사 재무제표는 같은 형식으로 이해 가능</p></li>
<li><dl>
<dt><strong>규칙기반의 GAAP vs 원칙기반의 IFRS</strong></dt>
<dd>
IFRS는 원칙에 따라 작성해 형태 차이가 거의 없으나, GAAP는 세부적인 사안에 대해 자세히 기술(IFRS도 주석 부분에 기술)
</dd>
<dd>
내용을 세세하게 다루거나, 공정가치를 계산하지않아 IFRS보다 현재가치를 크게 하고 싶을때 GAAP사용
</dd>
</dl></li>
<li><dl>
<dt><strong>Non-GAAP</strong></dt>
<dd>
반복적으로 발생하지 않는 1회적 비용은 제외하고 회계처리. 비용이 줄어 순수익이 늘어남
</dd>
<dd>
미국의 경우 Non-GAAP로 다양한 비용을 제외시켜 표시하는 것이 불법은 아님(기업에 유리) <a href="https://muroyallife.tistory.com/entry/GAAP%EA%B3%BC-IFRS%EC%9D%98-%EC%B0%A8%EC%9D%B4-%EA%B7%B8%EB%9F%AC%EB%A9%B4-Non-GAAP%EC%9D%80-%EB%AD%90%EC%95%BC">참고한 링크</a>
</dd>
</dl></li>
</ul>
</section>
<section id="장.-섬유공장" class="level2">
<h2 class="anchored" data-anchor-id="장.-섬유공장">1장. 섬유공장</h2>
<blockquote class="blockquote">
<ul>
<li><strong>총자산이익률(ROA, Return on assets)</strong> : 순이익 / 총자산(자기자본 + 타인자본). 얼마나 순이익이 창출되는지 판단할 수 있음. ROA의 높고 낮음에 따라 주가의 높낮이도 따를 가능성이 큼 산업의 성숙기[성장/성숙/사양 등]에 따라 ROA는 달라질 수 있음</li>
<li><strong>자기자본이익률(ROE, Return on equity)</strong> : 순이익 / 자본총계(자산-부채) ROA가 높은 경우 적정 수준으로 부채확대를 통해 총자산 자체를 늘리면 ROE를 높일 수 있음 <a href="https://m.itooza.com/view.php?ud=2011052715374391424">참고한 링크</a> <a href="https://support.stockplus.com/hc/ko/articles/5059590236057-%EA%B8%B0%EC%97%85%EC%9D%B4-%EB%8F%88%EC%9D%84-%EC%9E%98-%EB%B2%8C%EA%B9%8C-ROE-%EA%B8%B0%EC%B4%88">참고한 링크</a></li>
</ul>
</blockquote>
<ul>
<li><p><strong>운전자본(Working Capital, =유동자본?)</strong> : 회사를 운영하는데 들어가는 돈(매출채권, 선급금, 재고자산 등 유동자산과 매입채무, 선수금 등 유동부채가 해당함)</p></li>
<li><p>순운전자본(Net Working Capital, 운전자본-총부채) : ?? (클럽 설명) 벤자민 그레이엄이 ’현명한 투자자’에서 주창한 투자 전략 즉시 현금화할 수 있는 자산과 비교함으로써 보수적인 기준에서 주가의 저(고)평가 여부를 판단하는 척도로 사용</p></li>
<li><p>장부가치</p></li>
<li><p>주가순자산배수(PBR, price to book value)</p></li>
<li><p>주주환원</p></li>
<li><p>자사주 매입</p></li>
<li><p>감가상각비</p></li>
<li><p>자산 대체원가</p></li>
<li><p>무형자산상각비 차감 전 이익(EBITDA)</p></li>
<li><p>투하자본 : 영업활동(수익활동)에 투입한 자산</p></li>
<li><p>투하자본이익률(ROIC, return on invested capital) : 영업활동(수익활동)에 투입한 자산으로 얻은 영업이익의 비율</p></li>
<li><p>배당의 이중과세 : 연간이익에 대한 기업의 법인세 + 배당금에 대한 주주의 소득세</p></li>
<li><p>자사주 매입을 통한 주주의 세금 이연(은 주주이익에 도움)</p></li>
</ul>
</section>
<section id="장.-투자-1962-1965년" class="level2">
<h2 class="anchored" data-anchor-id="장.-투자-1962-1965년">2장. 투자: 1962-1965년</h2>
<ul>
<li><strong>무한책임 파트너(general partner)</strong> : 펀드 운용에 관한 무한책임을 지는 출자자, 보통 운용자를 말함</li>
<li><strong>헤지펀드</strong> :</li>
<li><strong>환매</strong> :</li>
<li><strong>이월결손금</strong></li>
<li><strong>손익계산서</strong></li>
<li><strong>유동성소요</strong></li>
<li>**내재 사업가치(intrinsic business value)</li>
<li><strong>유한책임조합</strong></li>
</ul>
</section>
<section id="장.-전환-1965-1967년" class="level2">
<h2 class="anchored" data-anchor-id="장.-전환-1965-1967년">3장. 전환: 1965-1967년</h2>
<ul>
<li><strong>자본배분</strong></li>
<li><strong>투하자본이익률</strong></li>
<li><strong>매출원가</strong></li>
<li><strong>특별항목 (’특별항목 반영 전 순이익’에서 사용된 의미, ’1964년 특별항목은 유휴설비비용 22만 달러를 포함했다’와 같이 사용)</strong></li>
<li><strong>유휴설비비용(idle plant expense)</strong>: 비영업용 제조설비의 유지보수 및 감가상각비</li>
<li>**기대손실</li>
<li>손상차손 write-down</li>
<li>유형자산 손상차손</li>
<li>이익잉여금</li>
<li>총포괄손익</li>
<li>총창출자본(total capital generated)</li>
</ul>
</section>
<section id="장.-인수-1967-1969년" class="level2">
<h2 class="anchored" data-anchor-id="장.-인수-1967-1969년">4장. 인수: 1967-1969년</h2>
<ul>
<li>완전 소유 기업(wholly-owned-subsidiary) : 1개 기업이 단독 투자하여 100% 소유 지문을 가지는것</li>
<li>상환청구권 :</li>
</ul>
<blockquote class="blockquote">
<p>플로트(책임준비금) : + 지급준비금(lost reserve) + 손해사정비 준비금(lost adjustment expense reserve) + 미경과보험료 적립금(unearned premium reserve) - 대리점 미수금(agents’ balance) - 선급 신계약비(prepaid acquisition cost) - 출재보험 준비금(deferred charges applicable to assumed reinsurance) * 플로트 계산법은 분석대상 기업과 애널리스트에 따라 다름 * 기타자산과 기타부채를 처리하는 방법에서 차이가 발생함 * 정확한 플로트 값이 중요하지 않음(소수점 마지막까지 계산X) *</p>
</blockquote>
<ul>
<li><p>합산비율(combined ratio) : 손해율 + 사업비율. 100%를 기준으로 높으면 손해 낮으면 이익</p></li>
<li><p>손해율(loss ratio) : 보험료 수입 대비 보험금 지급 비율</p></li>
<li><p>사업비율(expense ratio) : 보험료 수입 중 인건비, 마케팅비, 모집수수료, 중개비 등 비중</p></li>
<li><p>경과보험료(earned premiums) : 1년단위/일시납이 기본인 손해보험업에서 더 유의미한 기준. 보험사의 회계연도 말을 기준으로 가입자의 전체 보험기간을 경과/미경과 기간으로 구분, 받은 보험료를 경과/미경과 보험료로 구분함</p></li>
<li><p>레버리지 :</p></li>
<li><p>영업 레버리지(operating leverage)</p></li>
<li><p>재무 레버리지(financial leverage)</p></li>
<li><p>유형순자산(tangible net worth)</p></li>
<li><p>영업권(goodwill)</p></li>
<li><p>원수보험료</p></li>
<li><p>순원수보험료(net premiums written) : 원수보험료에서 수/출재보험료와 환급보험료를 가감한 값</p></li>
<li><p>비연결자회사</p></li>
<li><p>연결납세제도(consolidated tax return) : 모회사의 자회사 지분율이 80%이상이고 경제적으로 결합되어있을 때 하나의 과세단위로 해석함. 이에 따라 모회사-자회사간 배당을 과세하지 않을때가 있음. 한국에도 도입되어있지만 연결 요건이 엄격함</p></li>
<li><p>예수부채</p></li>
<li><p>요구불예금</p></li>
<li><p>스핀오프 : 자회사 주식을 모회사 주주에게 배당(인적분할) + 기존 회사의 자회사화</p></li>
<li><p>투자 영업이익 : 이자 및 배당수익 + 유가증권 추분이익</p></li>
</ul>
</section>
<section id="장.-확장-1970년대" class="level2">
<h2 class="anchored" data-anchor-id="장.-확장-1970년대">5장. 확장: 1970년대</h2>
<ul>
<li><p>투하자본</p></li>
<li><p>매출채권</p></li>
<li><p>부채자기자본비율(debt to equity)</p></li>
<li><p>표면이자율</p></li>
<li><p>일반사채(debenture:무담보회사채)</p></li>
<li><p>이자비용 및 법인세 차감 전 이익(EBIT)</p></li>
<li><p>주가매출액배수(price to sales, PSR) : 기업의 주가와 매출을 비교하는 가치평가 지표</p></li>
<li><p>예상손해율(loss expectancy)</p></li>
<li><p>보험영업 손실/이익</p></li>
<li><p>듀레이션(duration, 듀레이션이 긴 재보험에서의 용례)</p></li>
</ul>
</section>
<section id="장.-다른-기업들" class="level2">
<h2 class="anchored" data-anchor-id="장.-다른-기업들">6장. 다른 기업들</h2>
<ul>
<li>공모채 : 불특정다수에게 발행하는 채권</li>
<li>사용자본이익률(ROCE)</li>
<li>최초 이익수익률(initial earnings yield)</li>
<li>모기지(mortgate) : 주택 구매 등을 위해 돈을 빌리고, 갚지 못하는 경우 해당 주택을 대출 업체가 소유</li>
<li>예대마진(spread) : 예금이자와 대출이자간 차이</li>
<li>예수부채 : 불특정 다수를 상대로 조달한 자금</li>
<li>차입인수(LBO, leverage buyout) : 인수할 회사의 자본 등을 담보로 자금을 확보하여 기업을 인수</li>
</ul>
</section>
<section id="장.-복합기업" class="level2">
<h2 class="anchored" data-anchor-id="장.-복합기업">7장. 복합기업</h2>
<ul>
<li>자본잉여금(paid-in surplus) : 주식 발행 등으로 발생하는 잉여금. 돈을 받고 주식을 발행하는 유상증자시 늘어나게 됨</li>
<li>지배지분이익 : 지배 기업의 순이익에서 지분율만큼 반영한 이익</li>
<li>매출총이익률 : 매출액 대비 매출총이익 비율
<ul>
<li>매출총이익 : 매출액에서 (매출과 직접적으로 관계된)비용 차감</li>
</ul></li>
<li></li>
</ul>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>경제/금융공부</category>
  <guid>https://kr9268.github.io/posts/bk-BerkshireHathaway-20240423-terms/</guid>
  <pubDate>Tue, 23 Apr 2024 00:00:00 GMT</pubDate>
  <media:content url="https://kr9268.github.io/posts/bk-BerkshireHathaway-20240423-terms/image.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>[프로그래머스SQL] 3월에 태어난 여성 회원 목록 출력하기</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/prgms-sql-20240321/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>프로그래머스 SQL 문제풀이 연습(Oracle기준, Mysql아님)입니다 <br> (비상업적, 비영리적 용도)</p>
<p><a href="https://school.programmers.co.kr/learn/courses/30/parts/17042">문제링크</a><br> <a href="https://programmers.zendesk.com/hc/ko/articles/360034546572-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%EC%9D%98-%EB%AC%B8%EC%A0%9C%EB%A5%BC-%EC%99%B8%EB%B6%80%EC%97%90-%EA%B2%8C%EC%8B%9C%ED%95%A0-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94">게시가능여부</a></p>
</section>
<section id="문제-3월에-태어난-여성-회원-목록-출력하기" class="level2">
<h2 class="anchored" data-anchor-id="문제-3월에-태어난-여성-회원-목록-출력하기">문제 : 3월에 태어난 여성 회원 목록 출력하기</h2>
<div class="markdown solarized-dark">
<p>
다음은 식당 리뷰 사이트의 회원 정보를 담은 <code>MEMBER_PROFILE</code> 테이블입니다. <code>MEMBER_PROFILE</code> 테이블은 다음과 같으며 <code>MEMBER_ID</code>, <code>MEMBER_NAME</code>, <code>TLNO</code>, <code>GENDER</code>, <code>DATE_OF_BIRTH</code>는 회원 ID, 회원 이름, 회원 연락처, 성별, 생년월일을 의미합니다.
</p>
<table class="table">
<thead>
<tr>
<th>
Column name
</th>
<th>
Type
</th>
<th>
Nullable
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
MEMBER_ID
</td>
<td>
VARCHAR(100)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
MEMBER_NAME
</td>
<td>
VARCHAR(50)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
TLNO
</td>
<td>
VARCHAR(50)
</td>
<td>
TRUE
</td>
</tr>
<tr>
<td>
GENDER
</td>
<td>
VARCHAR(1)
</td>
<td>
TRUE
</td>
</tr>
<tr>
<td>
DATE_OF_BIRTH
</td>
<td>
DATE
</td>
<td>
TRUE
</td>
</tr>
</tbody>
</table>
<hr>
<h5 class="anchored">
문제
</h5>
<p>
<code>MEMBER_PROFILE</code> 테이블에서 생일이 3월인 여성 회원의 ID, 이름, 성별, 생년월일을 조회하는 SQL문을 작성해주세요. 이때 전화번호가 NULL인 경우는 출력대상에서 제외시켜 주시고, 결과는 회원ID를 기준으로 오름차순 정렬해주세요.
</p>
<hr>
<h5 class="anchored">
예시
</h5>
<p>
<code>MEMBER_PROFILE</code> 테이블이 다음과 같을 때
</p>
<table class="table">
<thead>
<tr>
<th>
MEMBER_ID
</th>
<th>
MEMBER_NAME
</th>
<th>
TLNO
</th>
<th>
GENDER
</th>
<th>
DATE_OF_BIRTH
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
<code>jiho92@naver.com</code>
</td>
<td>
이지호
</td>
<td>
01076432111
</td>
<td>
W
</td>
<td>
1992-02-12
</td>
</tr>
<tr>
<td>
<code>jiyoon22@hotmail.com</code>
</td>
<td>
김지윤
</td>
<td>
01032324117
</td>
<td>
W
</td>
<td>
1992-02-22
</td>
</tr>
<tr>
<td>
<code>jihoon93@hanmail.net</code>
</td>
<td>
김지훈
</td>
<td>
01023258688
</td>
<td>
M
</td>
<td>
1993-02-23
</td>
</tr>
<tr>
<td>
<code>seoyeons@naver.com</code>
</td>
<td>
박서연
</td>
<td>
01076482209
</td>
<td>
W
</td>
<td>
1993-03-16
</td>
</tr>
<tr>
<td>
<code>yoonsy94@gmail.com</code>
</td>
<td>
윤서연
</td>
<td>
NULL
</td>
<td>
W
</td>
<td>
1994-03-19
</td>
</tr>
</tbody>
</table>
<p>
SQL을 실행하면 다음과 같이 출력되어야 합니다.
</p>
<table class="table">
<thead>
<tr>
<th>
MEMBER_ID
</th>
<th>
MEMBER_NAME
</th>
<th>
GENDER
</th>
<th>
DATE_OF_BIRTH
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
<code>seoyeons@naver.com</code>
</td>
<td>
박서연
</td>
<td>
W
</td>
<td>
1993-03-16
</td>
</tr>
</tbody>
</table>
<hr>
<h5 class="anchored">
주의사항
</h5>
<p>
<code>DATE_OF_BIRTH</code>의 데이트 포맷이 예시와 동일해야 정답처리 됩니다.
</p>
</div>
</section>
<section id="작성답안" class="level2">
<h2 class="anchored" data-anchor-id="작성답안">작성답안</h2>
<div id="fig-polar" class="cell quarto-figure quarto-figure-center quarto-float anchored" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="sourceCode cell-code" id="fig-polar" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}" style="background: #f1f3f5;"><pre class="sourceCode python cell code-with-copy"><code class="sourceCode python"><span id="fig-polar-1">SELECT MEMBER_ID, MEMBER_NAME,  GENDER, TO_CHAR(DATE_OF_BIRTH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'YYYY-MM-DD'</span>)</span>
<span id="fig-polar-2">FROM MEMBER_PROFILE</span>
<span id="fig-polar-3">WHERE GENDER <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'W'</span></span>
<span id="fig-polar-4">  AND TO_CHAR(DATE_OF_BIRTH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MON'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'MAR'</span></span>
<span id="fig-polar-5">  AND TLNO IS NOT NULL</span>
<span id="fig-polar-6">ORDER BY MEMBER_ID ASC</span></code></pre></div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
</section>
<section id="정리" class="level2">
<h2 class="anchored" data-anchor-id="정리">정리</h2>
<ul>
<li>WHERE 컬럼명 IS <strong>NOT</strong> NULL</li>
<li>WHERE <strong>NOT</strong> 컬럼명 IS NULL</li>
</ul>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>프로그래머스/SQL</category>
  <guid>https://kr9268.github.io/posts/prgms-sql-20240321/</guid>
  <pubDate>Thu, 21 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[프로그래머스SQL] 조건에 부합하는 중고거래 댓글 조회하기</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/prgms-sql-20240320/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>프로그래머스 SQL 문제풀이 연습(Oracle기준, Mysql아님)입니다 <br> (비상업적, 비영리적 용도)</p>
<p><a href="https://school.programmers.co.kr/learn/courses/30/parts/17042">문제링크</a><br> <a href="https://programmers.zendesk.com/hc/ko/articles/360034546572-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%EC%9D%98-%EB%AC%B8%EC%A0%9C%EB%A5%BC-%EC%99%B8%EB%B6%80%EC%97%90-%EA%B2%8C%EC%8B%9C%ED%95%A0-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94">게시가능여부</a></p>
</section>
<section id="문제-조건에-부합하는-중고거래-댓글-조회하기" class="level2">
<h2 class="anchored" data-anchor-id="문제-조건에-부합하는-중고거래-댓글-조회하기">문제 : 조건에 부합하는 중고거래 댓글 조회하기</h2>
<div class="guide-section-description">
<pre><code>    &lt;h6 class="guide-section-title"&gt;문제 설명&lt;/h6&gt;
    &lt;div class="markdown solarized-dark"&gt;&lt;p&gt;다음은 중고거래 게시판 정보를 담은 &lt;code&gt;USED_GOODS_BOARD&lt;/code&gt; 테이블과 중고거래 게시판 첨부파일 정보를 담은 &lt;code&gt;USED_GOODS_REPLY&lt;/code&gt; 테이블입니다. &lt;code&gt;USED_GOODS_BOARD&lt;/code&gt; 테이블은 다음과 같으며 &lt;code&gt;BOARD_ID&lt;/code&gt;, &lt;code&gt;WRITER_ID&lt;/code&gt;, &lt;code&gt;TITLE&lt;/code&gt;, &lt;code&gt;CONTENTS&lt;/code&gt;, &lt;code&gt;PRICE&lt;/code&gt;, &lt;code&gt;CREATED_DATE&lt;/code&gt;, &lt;code&gt;STATUS&lt;/code&gt;, &lt;code&gt;VIEWS&lt;/code&gt;은 게시글 ID, 작성자 ID, 게시글 제목, 게시글 내용, 가격, 작성일, 거래상태, 조회수를 의미합니다.&lt;/p&gt;</code></pre>
<table class="table">
<thead>
<tr>
<th>
Column name
</th>
<th>
Type
</th>
<th>
Nullable
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
BOARD_ID
</td>
<td>
VARCHAR(5)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
WRITER_ID
</td>
<td>
VARCHAR(50)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
TITLE
</td>
<td>
VARCHAR(100)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
CONTENTS
</td>
<td>
VARCHAR(1000)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
PRICE
</td>
<td>
NUMBER
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
CREATED_DATE
</td>
<td>
DATE
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
STATUS
</td>
<td>
VARCHAR(10)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
VIEWS
</td>
<td>
NUMBER
</td>
<td>
FALSE
</td>
</tr>
</tbody>
</table>
<p>
<code>USED_GOODS_REPLY</code> 테이블은 다음과 같으며 <code>REPLY_ID</code>, <code>BOARD_ID</code>, <code>WRITER_ID</code>, <code>CONTENTS</code>, <code>CREATED_DATE</code>는 각각 댓글 ID, 게시글 ID, 작성자 ID, 댓글 내용, 작성일을 의미합니다.
</p>
<table class="table">
<thead>
<tr>
<th>
Column name
</th>
<th>
Type
</th>
<th>
Nullable
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
REPLY_ID
</td>
<td>
VARCHAR(10)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
BOARD_ID
</td>
<td>
VARCHAR(5)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
WRITER_ID
</td>
<td>
VARCHAR(50)
</td>
<td>
FALSE
</td>
</tr>
<tr>
<td>
CONTENTS
</td>
<td>
VARCHAR(1000)
</td>
<td>
TRUE
</td>
</tr>
<tr>
<td>
CREATED_DATE
</td>
<td>
DATE
</td>
<td>
FALSE
</td>
</tr>
</tbody>
</table>
<hr>
<h5 class="anchored">
문제
</h5>
<p>
<code>USED_GOODS_BOARD</code>와 <code>USED_GOODS_REPLY</code> 테이블에서 2022년 10월에 작성된 게시글 제목, 게시글 ID, 댓글 ID, 댓글 작성자 ID, 댓글 내용, 댓글 작성일을 조회하는 SQL문을 작성해주세요. 결과는 댓글 작성일을 기준으로 오름차순 정렬해주시고, 댓글 작성일이 같다면 게시글 제목을 기준으로 오름차순 정렬해주세요.
</p>
<hr>
<h5 class="anchored">
예시
</h5>
<p>
<code>USED_GOODS_BOARD</code> 테이블이 다음과 같고
</p>
<table class="table">
<thead>
<tr>
<th>
BOARD_ID
</th>
<th>
WRITER_ID
</th>
<th>
TITLE
</th>
<th>
CONTENTS
</th>
<th>
PRICE
</th>
<th>
CREATED_DATE
</th>
<th>
STATUS
</th>
<th>
VIEWS
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
B0001
</td>
<td>
kwag98
</td>
<td>
반려견 배변패드 팝니다
</td>
<td>
정말 저렴히 판매합니다. 전부 미개봉 새상품입니다.
</td>
<td>
12000
</td>
<td>
2022-10-01
</td>
<td>
DONE
</td>
<td>
250
</td>
</tr>
<tr>
<td>
B0002
</td>
<td>
lee871201
</td>
<td>
국내산 볶음참깨
</td>
<td>
직접 농사지은 참깨입니다.
</td>
<td>
3000
</td>
<td>
2022-10-02
</td>
<td>
DONE
</td>
<td>
121
</td>
</tr>
<tr>
<td>
B0003
</td>
<td>
goung12
</td>
<td>
배드민턴 라켓
</td>
<td>
사놓고 방치만 해서 팝니다.
</td>
<td>
9000
</td>
<td>
2022-10-02
</td>
<td>
SALE
</td>
<td>
212
</td>
</tr>
<tr>
<td>
B0004
</td>
<td>
keel1990
</td>
<td>
디올 귀걸이
</td>
<td>
신세계강남점에서 구입. 정품 아닐시 백퍼센트 환불
</td>
<td>
130000
</td>
<td>
2022-10-02
</td>
<td>
SALE
</td>
<td>
199
</td>
</tr>
<tr>
<td>
B0005
</td>
<td>
haphli01
</td>
<td>
스팸클래식 팔아요
</td>
<td>
유통기한 2025년까지에요
</td>
<td>
10000
</td>
<td>
2022-10-02
</td>
<td>
SALE
</td>
<td>
121
</td>
</tr>
</tbody>
</table>
<p>
<code>USED_GOODS_REPLY</code> 테이블이 다음과 같을 때
</p>
<table class="table">
<thead>
<tr>
<th>
REPLY_ID
</th>
<th>
BOARD_ID
</th>
<th>
WRITER_ID
</th>
<th>
CONTENTS
</th>
<th>
CREATED_DATE
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
R000000001
</td>
<td>
B0001
</td>
<td>
s2s2123
</td>
<td>
구매하겠습니다. 쪽지 드립니다.
</td>
<td>
2022-10-02
</td>
</tr>
<tr>
<td>
R000000002
</td>
<td>
B0002
</td>
<td>
hoho1112
</td>
<td>
쪽지 주세요.
</td>
<td>
2022-10-03
</td>
</tr>
<tr>
<td>
R000000003
</td>
<td>
B0006
</td>
<td>
hwahwa2
</td>
<td>
삽니다. 연락주세요.
</td>
<td>
2022-10-03
</td>
</tr>
<tr>
<td>
R000000004
</td>
<td>
B0007
</td>
<td>
hong02
</td>
<td>
예약중
</td>
<td>
2022-10-06
</td>
</tr>
<tr>
<td>
R000000005
</td>
<td>
B0009
</td>
<td>
hanju23
</td>
<td>
구매완료
</td>
<td>
2022-10-07
</td>
</tr>
</tbody>
</table>
<p>
SQL을 실행하면 다음과 같이 출력되어야 합니다.
</p>
<table class="table">
<thead>
<tr>
<th>
TITLE
</th>
<th>
BOARD_ID
</th>
<th>
REPLY_ID
</th>
<th>
WRITER_ID
</th>
<th>
CONTENTS
</th>
<th>
CREATED_DATE
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
반려견 배변패드 팝니다
</td>
<td>
B0001
</td>
<td>
R000000001
</td>
<td>
s2s2123
</td>
<td>
구매하겠습니다. 쪽지 드립니다.
</td>
<td>
2022-10-02
</td>
</tr>
<tr>
<td>
국내산 볶음참깨
</td>
<td>
B0002
</td>
<td>
R000000002
</td>
<td>
hoho1112
</td>
<td>
쪽지 주세요.
</td>
<td>
2022-10-03
</td>
</tr>
</tbody>
</table>
<hr>
<h5 class="anchored">
주의사항
</h5>
<p>
<code>CREATED_DATE</code>의 포맷이 예시의 포맷과 일치해야 정답처리 됩니다.
</p>
</div>
<pre><code>  &lt;/div&gt;</code></pre>
</section>
<section id="작성답안" class="level2">
<h2 class="anchored" data-anchor-id="작성답안">작성답안</h2>
<div id="fig-polar" class="cell quarto-figure quarto-figure-center quarto-float anchored" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="sourceCode cell-code" id="fig-polar" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}" style="background: #f1f3f5;"><pre class="sourceCode python cell code-with-copy"><code class="sourceCode python"><span id="fig-polar-1">SELECT board.TITLE, board.BOARD_ID,</span>
<span id="fig-polar-2">       reply.REPLY_ID, reply.WRITER_ID, reply.CONTENTS, TO_CHAR(reply.CREATED_DATE, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'YYYY-MM-DD'</span>)</span>
<span id="fig-polar-3">FROM USED_GOODS_BOARD board, USED_GOODS_REPLY reply</span>
<span id="fig-polar-4">WHERE TO_CHAR(board.CREATED_DATE, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'YYYYMM'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'202210'</span></span>
<span id="fig-polar-5">  AND board.BOARD_ID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> reply.BOARD_ID</span>
<span id="fig-polar-6">ORDER BY reply.CREATED_DATE ASC, board.TITLE ASC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
</section>
<section id="정리" class="level2">
<h2 class="anchored" data-anchor-id="정리">정리</h2>
<ul>
<li>각 테이블의 BOARD_ID 일치시키는 것을 실수하였음. 향후 동일케이스에 대해서는 고려하여 풀기</li>
<li>다중정렬<br> &gt; ORDER BY reply.CREATED_DATE ASC, board.TITLE ASC;<br> 앞의 컬럼일수록 정렬 우선순위를 가짐</li>
</ul>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>프로그래머스/SQL</category>
  <guid>https://kr9268.github.io/posts/prgms-sql-20240320/</guid>
  <pubDate>Wed, 20 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[프로그래머스SQL] 조건에 맞는 도서 리스트 출력하기</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/prgms-sql-20240319/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>프로그래머스 SQL 문제풀이 연습(Oracle기준, Mysql아님)입니다 <br> (비상업적, 비영리적 용도)</p>
<p><a href="https://school.programmers.co.kr/learn/courses/30/parts/17042">문제링크</a><br> <a href="https://programmers.zendesk.com/hc/ko/articles/360034546572-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%EC%9D%98-%EB%AC%B8%EC%A0%9C%EB%A5%BC-%EC%99%B8%EB%B6%80%EC%97%90-%EA%B2%8C%EC%8B%9C%ED%95%A0-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94">게시가능여부</a></p>
</section>
<section id="문제-조건에-맞는-도서-리스트-출력하기" class="level2">
<h2 class="anchored" data-anchor-id="문제-조건에-맞는-도서-리스트-출력하기">문제 : 조건에 맞는 도서 리스트 출력하기</h2>
<section id="문제-설명" class="level3">
<h3 class="anchored" data-anchor-id="문제-설명">문제 설명</h3>
<p>다음은 어느 한 서점에서 판매중인 도서들의 도서 정보(BOOK) 테이블입니다.</p>
<p>BOOK 테이블은 각 도서의 정보를 담은 테이블로 아래와 같은 구조로 되어있습니다.</p>
<p>Column name Type Nullable Description<br> BOOK_ID INTEGER FALSE 도서 ID<br> CATEGORY VARCHAR(N) FALSE 카테고리 (경제, 인문, 소설, 생활, 기술)<br> AUTHOR_ID INTEGER FALSE 저자 ID<br> PRICE INTEGER FALSE 판매가 (원)<br> PUBLISHED_DATE DATE FALSE 출판일</p>
</section>
<section id="문제" class="level3">
<h3 class="anchored" data-anchor-id="문제">문제</h3>
<p>BOOK 테이블에서 2021년에 출판된 ‘인문’ 카테고리에 속하는 도서 리스트를 찾아서 도서 ID(BOOK_ID), 출판일 (PUBLISHED_DATE)을 출력하는 SQL문을 작성해주세요. 결과는 출판일을 기준으로 오름차순 정렬해주세요.</p>
<p>예시 예를 들어 BOOK 테이블이 다음과 같다면</p>
<p>BOOK_ID CATEGORY AUTHOR_ID PRICE PUBLISHED_DATE<br> 1 인문 1 10000 2020-01-01<br> 2 경제 2 9000 2021-02-05<br> 3 인문 2 11000 2021-04-11<br> 4 인문 3 10000 2021-03-15<br> 5 생활 1 12000 2021-01-10<br> 조건에 속하는 도서는 도서 ID 가 3, 4인 도서이므로 다음과 같습니다.</p>
<p>BOOK_ID PUBLISHED_DATE<br> 3 2021-04-11<br> 4 2021-03-15<br> 그리고 출판일 오름차순으로 정렬하여야 하므로 다음과 같은 결과가 나와야 합니다.</p>
<p>BOOK_ID PUBLISHED_DATE<br> 4 2021-03-15<br> 3 2021-04-11<br></p>
</section>
<section id="주의사항" class="level3">
<h3 class="anchored" data-anchor-id="주의사항">주의사항</h3>
<p>PUBLISHED_DATE의 데이트 포맷이 예시와 동일해야 정답처리 됩니다.</p>
</section>
</section>
<section id="작성답안" class="level2">
<h2 class="anchored" data-anchor-id="작성답안">작성답안</h2>
<div id="fig-polar" class="cell quarto-figure quarto-figure-center quarto-float anchored" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="sourceCode cell-code" id="fig-polar" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}" style="background: #f1f3f5;"><pre class="sourceCode python cell code-with-copy"><code class="sourceCode python"><span id="fig-polar-1">SELECT BOOK_ID, TO_CHAR(PUBLISHED_DATE, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'YYYY-MM-DD'</span>)</span>
<span id="fig-polar-2">FROM BOOK</span>
<span id="fig-polar-3">WHERE CATEGORY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'인문'</span> AND EXTRACT(YEAR FROM PUBLISHED_DATE) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span></span>
<span id="fig-polar-4">ORDER BY PUBLISHED_DATE ASC</span></code></pre></div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
</section>
<section id="정리" class="level2">
<h2 class="anchored" data-anchor-id="정리">정리</h2>
<ul>
<li>TO_CHAR(표시형식 변경)</li>
</ul>
<blockquote class="blockquote">
<p>SELECT TO_CHAR(컬럼명, ‘표시형식’) FROM 테이블명 표시형식(연도 4자리) : TO_CHAR(컬럼명, ‘YYYY’)<br> 표시형식(월) : TO_CHAR(컬럼명, ‘MM’)<br> 표시형식(일, 연기준 1~366) : TO_CHAR(컬럼명, ‘DDD’)<br> 표시형식(일, 일기준 1~31) : TO_CHAR(컬럼명, ‘DD’)<br> 표시형식(일, 요일) : TO_CHAR(컬럼명, ‘D’) * 지역설정에 따라 시작요일이 달라짐<br> <br> 표시형식(분기) : TO_CHAR(컬럼명, ‘Q’)<br> 표시형식(주, 연기준 1~53) : TO_CHAR(컬럼명, ‘WW’)<br> 표시형식(주, 월기준 1~53) : TO_CHAR(컬럼명, ‘W’)<br> <br> 표시형식(요일, MON/월) : TO_CHAR(컬럼명, ‘DY’)<br> 표시형식(요일, MONDAY/월요일) : TO_CHAR(컬럼명, ‘DAY’)<br> 표시형식(월, JAN/1월) : TO_CHAR(컬럼명, ‘MON’)<br> 표시형식(월, JANUARY/1월) : TO_CHAR(컬럼명, ‘MONTH’)<br> <br> 표시형식(시간, 12시간표기) : TO_CHAR(컬럼명, ‘HH12’)<br> 표시형식(시간, 24시간표기) : TO_CHAR(컬럼명, ‘HH24’)<br> 표시형식(분) : TO_CHAR(컬럼명, ‘MI’)<br> 표시형식(초) : TO_CHAR(컬럼명, ‘SS’)<br></p>
</blockquote>
<ul>
<li>AND(모두 만족) / OR(하나라도 만족) / NOT(조건과 맞지 않는)</li>
</ul>
<blockquote class="blockquote">
<p>연산자 우선순위(참고용) 1 괄호<br> 2 NOT<br> 3 비교 (&gt; &lt; = !)<br> 4 AND<br> 5 OR</p>
</blockquote>
<ul>
<li>ORDER BY 컬럼명 ASC (오름차순)</li>
<li>ORDER BY 컬럼명 DESC (내림차순)</li>
</ul>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>프로그래머스/SQL</category>
  <guid>https://kr9268.github.io/posts/prgms-sql-20240319/</guid>
  <pubDate>Tue, 19 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[프로그래머스SQL] 가장 비싼 상품 구하기</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/prgms-sql-20240318/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>프로그래머스 SQL 문제풀이 연습(Oracle기준, Mysql아님)입니다 <br> (비상업적, 비영리적 용도)</p>
<p><a href="https://school.programmers.co.kr/learn/courses/30/lessons/131697?language=oracle">문제링크</a><br> <a href="https://programmers.zendesk.com/hc/ko/articles/360034546572-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%EC%9D%98-%EB%AC%B8%EC%A0%9C%EB%A5%BC-%EC%99%B8%EB%B6%80%EC%97%90-%EA%B2%8C%EC%8B%9C%ED%95%A0-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94">게시가능여부</a></p>
</section>
<section id="문제-가장-비싼-상품-구하기" class="level2">
<h2 class="anchored" data-anchor-id="문제-가장-비싼-상품-구하기">문제 : 가장 비싼 상품 구하기</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/prgms-sql-20240318/question.png" class="img-fluid figure-img"></p>
<figcaption>문제 이미지</figcaption>
</figure>
</div>
</section>
<section id="작성답안" class="level2">
<h2 class="anchored" data-anchor-id="작성답안">작성답안</h2>
<div id="fig-polar" class="cell quarto-figure quarto-figure-center quarto-float anchored" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="sourceCode cell-code" id="fig-polar" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}" style="background: #f1f3f5;"><pre class="sourceCode python cell code-with-copy"><code class="sourceCode python"><span id="fig-polar-1">SELECT MAX(PRICE) AS MAX_PRICE</span>
<span id="fig-polar-2">FROM PRODUCT</span></code></pre></div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
</section>
<section id="정리" class="level2">
<h2 class="anchored" data-anchor-id="정리">정리</h2>
<ul>
<li>MAX(컬럼명) : 최대값</li>
<li>MIN(컬럼명) : 최소값</li>
</ul>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>프로그래머스/SQL</category>
  <guid>https://kr9268.github.io/posts/prgms-sql-20240318/</guid>
  <pubDate>Mon, 18 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[프로그래머스SQL] 평균 일일 대여 요금 구하기</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/prgms-sql-20240317/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>프로그래머스 SQL 문제풀이 연습(Oracle기준, Mysql아님)입니다 <br> (비상업적, 비영리적 용도)</p>
<p><a href="https://school.programmers.co.kr/learn/courses/30/parts/17042">문제링크</a></p>
</section>
<section id="문제-평균-일일-대여-요금-구하기" class="level2">
<h2 class="anchored" data-anchor-id="문제-평균-일일-대여-요금-구하기">문제 : 평균 일일 대여 요금 구하기</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/prgms-sql-20240317/question.png" class="img-fluid figure-img"></p>
<figcaption>문제 이미지</figcaption>
</figure>
</div>
</section>
<section id="작성답안" class="level2">
<h2 class="anchored" data-anchor-id="작성답안">작성답안</h2>
<div id="fig-polar" class="cell quarto-figure quarto-figure-center quarto-float anchored" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="sourceCode cell-code" id="fig-polar" data-vscode="{&quot;languageId&quot;:&quot;sql&quot;}" style="background: #f1f3f5;"><pre class="sourceCode python cell code-with-copy"><code class="sourceCode python"><span id="fig-polar-1">SELECT ROUND(AVG(DAILY_FEE)) AS AVERAGE_FEE</span>
<span id="fig-polar-2">FROM CAR_RENTAL_COMPANY_CAR</span>
<span id="fig-polar-3">WHERE CAR_TYPE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SUV'</span></span></code></pre></div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
</section>
<section id="정리" class="level2">
<h2 class="anchored" data-anchor-id="정리">정리</h2>
<ul>
<li>ROUND : 반올림</li>
<li>AVG : 평균</li>
<li>AS ??? : 컬럼명을 ???으로 가져온다 (Alias 라고 함)</li>
<li>WHERE : 작성한 조건을 기준으로 가져온다<br>
<ul>
<li><strong>WHERE</strong>의 여러 형태예시</li>
</ul>
<pre><code>WHERE CAR_TYPE = 'SUV'
WHERE CAR_TYPE != 'SUV'
WHERE DAILY_FEE &gt; 14000
WHERE DAILY_FEE BETWEEN 14000 AND 16000
WHERE DAILY_FEE IN (14000, 16000)
WHERE CAR_TYPE IN ('SUV', '세단')</code></pre></li>
</ul>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>프로그래머스/SQL</category>
  <guid>https://kr9268.github.io/posts/prgms-sql-20240317/</guid>
  <pubDate>Sun, 17 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[Scikit-learn] Kaggle 집값예측 실습</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/coach-ml-kaggle-20230506/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>Kaggle Korea - House price prediction 실습 기록용으로 남깁니다.</p>
<p><a href="https://www.kaggle.com/c/2019-2nd-ml-month-with-kakr">Kaggle 원문 링크</a></p>
</section>
<section id="개념" class="level2">
<h2 class="anchored" data-anchor-id="개념">개념</h2>
<p><strong>RMSE(Root Mean Squeare Error)</strong></p>
<pre><code>Root    (4)
Mean    (3)
Square  (2)
Error   (1)
(1) 실제값에서 예측값을 뺀 '오차'를
(2) 합했을 때 음수의 영향을 제거하기 위해 '제곱'하고
(3) '평균'오차로 만든 후
(4) '루트'를 씌워 값의 크기를 작게 한다 (값을 작게하여 연산속도에 이점이 있다)</code></pre>
</section>
<section id="파일-다운로드-및-알아보기" class="level2">
<h2 class="anchored" data-anchor-id="파일-다운로드-및-알아보기">파일 다운로드 및 알아보기</h2>
<p><strong>File descriptions</strong></p>
<pre><code>train.csv - 예측 모델을 만들기 위해 사용하는 학습 데이터입니다. 
    집의 정보와 예측할 변수인 가격(Price) 변수를 가지고 있습니다.
test.csv - 학습셋으로 만든 모델을 가지고 예측할 가격(Price) 변수를 제외한 집의 정보가
    담긴 테스트 데이터 입니다.
sample_submission.csv - 제출시 사용할 수 있는 예시 submission.csv 파일입니다.</code></pre>
<p><strong>Data fields</strong></p>
<pre><code>ID : 집을 구분하는 번호
date : 집을 구매한 날짜
price : 집의 가격(Target variable)
bedrooms : 침실의 수
bathrooms : 화장실의 수
sqft_living : 주거 공간의 평방 피트(면적)
sqft_lot : 부지의 평방 피트(면적)
floors : 집의 층 수
waterfront : 집의 전방에 강이 흐르는지 유무 (a.k.a. 리버뷰)
view : 집이 얼마나 좋아 보이는지의 정도
condition : 집의 전반적인 상태
grade : King County grading 시스템 기준으로 매긴 집의 등급
sqft_above : 지하실을 제외한 평방 피트(면적)
sqft_basement : 지하실의 평방 피트(면적)
yr_built : 지어진 년도
yr_renovated : 집을 재건축한 년도
zipcode : 우편번호
lat : 위도
long : 경도
sqft_living15 : 2015년 기준 주거 공간의 평방 피트(면적, 집을 재건축했다면, 변화가 있을 수 있음)
sqft_lot15 : 2015년 기준 부지의 평방 피트(면적, 집을 재건축했다면, 변화가 있을 수 있음)</code></pre>
</section>
<section id="패키지-및-데이터-불러오기" class="level2">
<h2 class="anchored" data-anchor-id="패키지-및-데이터-불러오기">패키지 및 데이터 불러오기</h2>
<div id="7e7d960b" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb4-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb4-5"></span>
<span id="cb4-6">train_data_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./data/train.csv'</span></span>
<span id="cb4-7">test_data_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./data/test.csv'</span></span>
<span id="cb4-8"></span>
<span id="cb4-9">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(train_data_path)</span>
<span id="cb4-10">test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(test_data_path)</span>
<span id="cb4-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'train data : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(data.shape))</span>
<span id="cb4-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'test data : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(test.shape))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>train data : (15035, 21)
test data : (6555, 20)</code></pre>
</div>
</div>
</section>
<section id="데이터-전처리" class="level2">
<h2 class="anchored" data-anchor-id="데이터-전처리">데이터 전처리</h2>
<section id="정답컬럼-분리" class="level3">
<h3 class="anchored" data-anchor-id="정답컬럼-분리">정답컬럼 분리</h3>
<ul>
<li>test데이터와 달리 train data에는 컬럼이 1개 더 있음 (정답컬럼인 price)</li>
<li>별도의 정답 데이터(y)로 분리</li>
</ul>
<div id="374ca92e" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'컬럼 분리 전'</span>)</span>
<span id="cb6-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data.columns)</span>
<span id="cb6-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(test.columns)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>컬럼 분리 전
Index(['id', 'date', 'price', 'bedrooms', 'bathrooms', 'sqft_living',
       'sqft_lot', 'floors', 'waterfront', 'view', 'condition', 'grade',
       'sqft_above', 'sqft_basement', 'yr_built', 'yr_renovated', 'zipcode',
       'lat', 'long', 'sqft_living15', 'sqft_lot15'],
      dtype='object')
Index(['id', 'date', 'bedrooms', 'bathrooms', 'sqft_living', 'sqft_lot',
       'floors', 'waterfront', 'view', 'condition', 'grade', 'sqft_above',
       'sqft_basement', 'yr_built', 'yr_renovated', 'zipcode', 'lat', 'long',
       'sqft_living15', 'sqft_lot15'],
      dtype='object')</code></pre>
</div>
</div>
<div id="56fa7e98" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># y라는 변수에 price(정답)을 옮기고, 전체데이터를 백업(data_backup에 할당)하고 price컬럼 삭제</span></span>
<span id="cb8-2">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'price'</span>] </span>
<span id="cb8-3">data_backup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.copy()</span>
<span id="cb8-4">data.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'price'</span>,axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</div>
<div id="090eda7a" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'컬럼 분리 후'</span>)</span>
<span id="cb9-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data.columns)</span>
<span id="cb9-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(test.columns)</span>
<span id="cb9-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(y.name)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>컬럼 분리 후
Index(['id', 'date', 'bedrooms', 'bathrooms', 'sqft_living', 'sqft_lot',
       'floors', 'waterfront', 'view', 'condition', 'grade', 'sqft_above',
       'sqft_basement', 'yr_built', 'yr_renovated', 'zipcode', 'lat', 'long',
       'sqft_living15', 'sqft_lot15'],
      dtype='object')
Index(['id', 'date', 'bedrooms', 'bathrooms', 'sqft_living', 'sqft_lot',
       'floors', 'waterfront', 'view', 'condition', 'grade', 'sqft_above',
       'sqft_basement', 'yr_built', 'yr_renovated', 'zipcode', 'lat', 'long',
       'sqft_living15', 'sqft_lot15'],
      dtype='object')
price</code></pre>
</div>
</div>
</section>
<section id="결측치-확인-및-제거" class="level3">
<h3 class="anchored" data-anchor-id="결측치-확인-및-제거">결측치 확인 및 제거</h3>
<ul>
<li>train, test 데이터를 합쳐서 한번에 확인</li>
</ul>
<div id="26ca0d11" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 합치기</span></span>
<span id="cb11-2">df_chk_missing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat((data, test), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 향후 분할을 대비한 행 수 저장</span></span>
<span id="cb11-5">train_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(data)</span>
<span id="cb11-6">test_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(test)</span>
<span id="cb11-7"></span>
<span id="cb11-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(train_length, test_length)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>15035 6555</code></pre>
</div>
</div>
<section id="결측치-확인방법1pandas" class="level4">
<h4 class="anchored" data-anchor-id="결측치-확인방법1pandas">결측치 확인방법1(pandas)</h4>
<ul>
<li>isna()로 결측치를 확인</li>
</ul>
<div id="d7834677" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df_chk_missing.isna().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>id               0
date             0
bedrooms         0
bathrooms        0
sqft_living      0
sqft_lot         0
floors           0
waterfront       0
view             0
condition        0
grade            0
sqft_above       0
sqft_basement    0
yr_built         0
yr_renovated     0
zipcode          0
lat              0
long             0
sqft_living15    0
sqft_lot15       0
dtype: int64</code></pre>
</div>
</div>
</section>
<section id="결측치-확인방법2missingno" class="level4">
<h4 class="anchored" data-anchor-id="결측치-확인방법2missingno">결측치 확인방법2(missingno)</h4>
<ul>
<li>missingno 패키지로 컬럼별 결측치 시각화</li>
</ul>
<div id="704c8e19" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> missingno</span>
<span id="cb15-2"></span>
<span id="cb15-3">missingno.matrix(df_chk_missing)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/coach-ml-kaggle-20230506/index_files/figure-html/cell-8-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="결측치-확인방법3ydata_profiling" class="level4">
<h4 class="anchored" data-anchor-id="결측치-확인방법3ydata_profiling">결측치 확인방법3(ydata_profiling)</h4>
<ul>
<li>ydata_profiling 패키지로 결측치 및 다양한 값 확인 가능</li>
<li>렌더링 용량 문제로 실행결과는 이미지로 대체(RangeError: Maximum call stack size exceeded)</li>
</ul>
<div id="48fc58f2" class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ydata_profiling <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ProfileReport</span>
<span id="cb16-2"></span>
<span id="cb16-3">profile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ProfileReport(df_chk_missing, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Profiling Report"</span>)</span>
<span id="cb16-4">profile</span></code></pre></div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/coach-ml-kaggle-20230506/index_files/figure-html/f815fcd4-1-y_data_profileing_sample.png" class="img-fluid figure-img"></p>
<figcaption>실행결과 샘플</figcaption>
</figure>
</div>
<ul>
<li>결측치가 없으므로 다음 과정을 진행</li>
</ul>
</section>
</section>
<section id="불필요한-변수-제거-데이터-변환-등" class="level3">
<h3 class="anchored" data-anchor-id="불필요한-변수-제거-데이터-변환-등">불필요한 변수 제거, 데이터 변환 등</h3>
<section id="단순식별용-데이터-삭제" class="level4">
<h4 class="anchored" data-anchor-id="단순식별용-데이터-삭제">단순식별용 데이터 삭제</h4>
<ul>
<li>가격과 관계없는 단순식별용 데이터인 id 삭제</li>
</ul>
<div id="1172ccf8" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">main_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_chk_missing[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>][:train_length]</span>
<span id="cb17-2">test_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_chk_missing[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>][train_length:]</span>
<span id="cb17-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">del</span> df_chk_missing[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span>]</span></code></pre></div>
</div>
</section>
<section id="불필요한-데이터-삭제" class="level4">
<h4 class="anchored" data-anchor-id="불필요한-데이터-삭제">불필요한 데이터 삭제</h4>
<ul>
<li>날짜 뒤에 T00000과 같이 시간데이터(로 추정됨)가 있는데, 모두 T00000으로만 되어있으므로 삭제</li>
</ul>
<div id="d8004c60" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># T000000으로 되어있는 값 세기</span></span>
<span id="cb18-2">df_chk_missing[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.contains(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'T000000'</span>).value_counts()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>date
True    21590
Name: count, dtype: int64</code></pre>
</div>
</div>
<div id="49494527" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># apply로 lambda함수를 사용하여, date컬럼의 앞자리만 저장</span></span>
<span id="cb20-2">df_chk_missing[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_chk_missing[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x : <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(x[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]))</span>
<span id="cb20-3">df_chk_missing.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">date</th>
<th data-quarto-table-cell-role="th">bedrooms</th>
<th data-quarto-table-cell-role="th">bathrooms</th>
<th data-quarto-table-cell-role="th">sqft_living</th>
<th data-quarto-table-cell-role="th">sqft_lot</th>
<th data-quarto-table-cell-role="th">floors</th>
<th data-quarto-table-cell-role="th">waterfront</th>
<th data-quarto-table-cell-role="th">view</th>
<th data-quarto-table-cell-role="th">condition</th>
<th data-quarto-table-cell-role="th">grade</th>
<th data-quarto-table-cell-role="th">sqft_above</th>
<th data-quarto-table-cell-role="th">sqft_basement</th>
<th data-quarto-table-cell-role="th">yr_built</th>
<th data-quarto-table-cell-role="th">yr_renovated</th>
<th data-quarto-table-cell-role="th">zipcode</th>
<th data-quarto-table-cell-role="th">lat</th>
<th data-quarto-table-cell-role="th">long</th>
<th data-quarto-table-cell-role="th">sqft_living15</th>
<th data-quarto-table-cell-role="th">sqft_lot15</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>201410</td>
<td>3</td>
<td>1.00</td>
<td>1180</td>
<td>5650</td>
<td>1.0</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>7</td>
<td>1180</td>
<td>0</td>
<td>1955</td>
<td>0</td>
<td>98178</td>
<td>47.5112</td>
<td>-122.257</td>
<td>1340</td>
<td>5650</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>201502</td>
<td>2</td>
<td>1.00</td>
<td>770</td>
<td>10000</td>
<td>1.0</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>6</td>
<td>770</td>
<td>0</td>
<td>1933</td>
<td>0</td>
<td>98028</td>
<td>47.7379</td>
<td>-122.233</td>
<td>2720</td>
<td>8062</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>201502</td>
<td>3</td>
<td>2.00</td>
<td>1680</td>
<td>8080</td>
<td>1.0</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>8</td>
<td>1680</td>
<td>0</td>
<td>1987</td>
<td>0</td>
<td>98074</td>
<td>47.6168</td>
<td>-122.045</td>
<td>1800</td>
<td>7503</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>201406</td>
<td>3</td>
<td>2.25</td>
<td>1715</td>
<td>6819</td>
<td>2.0</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>7</td>
<td>1715</td>
<td>0</td>
<td>1995</td>
<td>0</td>
<td>98003</td>
<td>47.3097</td>
<td>-122.327</td>
<td>2238</td>
<td>6819</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>201501</td>
<td>3</td>
<td>1.50</td>
<td>1060</td>
<td>9711</td>
<td>1.0</td>
<td>0</td>
<td>0</td>
<td>3</td>
<td>7</td>
<td>1060</td>
<td>0</td>
<td>1963</td>
<td>0</td>
<td>98198</td>
<td>47.4095</td>
<td>-122.315</td>
<td>1650</td>
<td>9711</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="로그변환" class="level4">
<h4 class="anchored" data-anchor-id="로그변환">로그변환</h4>
<ul>
<li>치우친 분포를 정규분포에 가깝게 만들기</li>
</ul>
<section id="분포가-치우쳐져-있는-항목-찾기시각화" class="level5">
<h5 class="anchored" data-anchor-id="분포가-치우쳐져-있는-항목-찾기시각화">분포가 치우쳐져 있는 항목 찾기(시각화)</h5>
<div id="9cd20f17" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">row_plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb21-2">col_plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb21-3">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(row_plot, col_plot, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>)) </span>
<span id="cb21-4"></span>
<span id="cb21-5">columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_chk_missing.columns</span>
<span id="cb21-6">columns_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 첫 컬럼인 date(날짜)는 제외하기 위해 0이 아닌 1부터 시작</span></span>
<span id="cb21-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(row_plot):</span>
<span id="cb21-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(col_plot):</span>
<span id="cb21-9">        sns.kdeplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_chk_missing[columns[columns_idx]], ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax[row][col])</span>
<span id="cb21-10">        ax[row][col].set_title(columns[columns_idx])</span>
<span id="cb21-11">        columns_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb21-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> columns_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(columns) :</span>
<span id="cb21-13">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/coach-ml-kaggle-20230506/index_files/figure-html/cell-13-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<ul>
<li>아래의 항목들이 치우쳐져 있음
<ul>
<li>sqft_living</li>
<li>sqft_lot</li>
<li>waterfront (→유/무 지표로 0,1만 있는게 정상이므로 제외)</li>
<li>sqft_above</li>
<li>sqft_basement</li>
<li>sqft_living15</li>
<li>sqft_lot15</li>
</ul></li>
</ul>
<div id="74772982" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환대상 리스트에 저장</span></span>
<span id="cb22-2">skewed_columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sqft_living'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sqft_lot'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sqft_above'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sqft_basement'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sqft_living15'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sqft_lot15'</span>]</span>
<span id="cb22-3"></span>
<span id="cb22-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그래프로 그리기 (변환 전/후 그래프를 함께 그릴 예정이므로 plot의 수는 두배)</span></span>
<span id="cb22-5">row_plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb22-6">col_plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb22-7">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(row_plot, col_plot, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>)) </span>
<span id="cb22-8"></span>
<span id="cb22-9">columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> skewed_columns</span>
<span id="cb22-10">columns_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb22-11"></span>
<span id="cb22-12"></span>
<span id="cb22-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(row_plot):</span>
<span id="cb22-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로그변환 대상만 식별 후 진행</span></span>
<span id="cb22-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> columns[row] <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> skewed_columns:</span>
<span id="cb22-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기존 그래프 그리기</span></span>
<span id="cb22-17">        sns.kdeplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_chk_missing[columns[row]], ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax[row][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb22-18">        ax[row][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(columns[row])</span>
<span id="cb22-19"></span>
<span id="cb22-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 로그변환</span></span>
<span id="cb22-21">        df_chk_missing[columns[row]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.log1p(df_chk_missing[columns[row]])</span>
<span id="cb22-22"></span>
<span id="cb22-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 변환된 그래프 그리기</span></span>
<span id="cb22-24">        sns.kdeplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_chk_missing[columns[row]], ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax[row][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb22-25">        ax[row][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(columns[row]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_log'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://kr9268.github.io/posts/coach-ml-kaggle-20230506/index_files/figure-html/cell-14-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="train-test-데이터로-정리" class="level4">
<h4 class="anchored" data-anchor-id="train-test-데이터로-정리">train, test 데이터로 정리</h4>
<div id="72bcf9f1" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">preprocessed_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_chk_missing[:train_length].copy()</span>
<span id="cb23-2">preprocessed_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_chk_missing[train_length:].copy()</span>
<span id="cb23-3">price_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y.copy()</span>
<span id="cb23-4"></span>
<span id="cb23-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># date(날짜)의 타입을 int로 변경 (변경하지 않는 경우 object타입으로 인한 오류 발생)</span></span>
<span id="cb23-6">preprocessed_train[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocessed_train[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb23-7">preprocessed_test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocessed_test[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb23-8"></span>
<span id="cb23-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(preprocessed_train.shape)</span>
<span id="cb23-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(preprocessed_test.shape)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(15035, 19)
(6555, 19)</code></pre>
</div>
</div>
</section>
</section>
</section>
<section id="scikit-learn-등-관련-패키지-불러오기" class="level2">
<h2 class="anchored" data-anchor-id="scikit-learn-등-관련-패키지-불러오기">Scikit-learn 등 관련 패키지 불러오기</h2>
<ul>
<li>본래 사용하는 패키지는 모두 최상단에서 불러오는게 맞음!</li>
</ul>
<div id="17630aef" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.ensemble <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GradientBoostingRegressor</span>
<span id="cb25-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KFold, cross_val_score</span>
<span id="cb25-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> xgboost <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> xgb</span>
<span id="cb25-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> lightgbm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> lgb</span></code></pre></div>
</div>
<section id="모델-불러오고-cross-validation으로-모델성능-측청" class="level3">
<h3 class="anchored" data-anchor-id="모델-불러오고-cross-validation으로-모델성능-측청">모델 불러오고 Cross Validation으로 모델성능 측청</h3>
<div id="5fa4f06c" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">gboost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GradientBoostingRegressor(random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1210</span>)</span>
<span id="cb26-2">xgboost <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xgb.XGBRegressor(random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1210</span>)</span>
<span id="cb26-3">lightgbm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lgb.LGBMRegressor(random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1210</span>)</span>
<span id="cb26-4"></span>
<span id="cb26-5">model_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GradientBoosting'</span>:gboost,</span>
<span id="cb26-6">              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'XGBoost'</span>:xgboost,</span>
<span id="cb26-7">              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LigntGBM'</span>:lightgbm}</span>
<span id="cb26-8"></span>
<span id="cb26-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LightGBM의 메시지가 나오지 않도록 별도로 저장 후 출력</span></span>
<span id="cb26-10">model_cv_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb26-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> model <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> model_dict.keys():</span>
<span id="cb26-12">    model_cv_score[model] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(cross_val_score(model_dict[model], X<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>preprocessed_train, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>price_train))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001070 seconds.
You can set `force_col_wise=true` to remove the overhead.
[LightGBM] [Info] Total Bins 2296
[LightGBM] [Info] Number of data points in the train set: 12028, number of used features: 19
[LightGBM] [Info] Start training from score 540497.991270
[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000462 seconds.
You can set `force_col_wise=true` to remove the overhead.
[LightGBM] [Info] Total Bins 2327
[LightGBM] [Info] Number of data points in the train set: 12028, number of used features: 19
[LightGBM] [Info] Start training from score 542956.681826
[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000355 seconds.
You can set `force_col_wise=true` to remove the overhead.
[LightGBM] [Info] Total Bins 2331
[LightGBM] [Info] Number of data points in the train set: 12028, number of used features: 19
[LightGBM] [Info] Start training from score 543149.529265
[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000627 seconds.
You can set `force_row_wise=true` to remove the overhead.
And if memory is not enough, you can set `force_col_wise=true`.
[LightGBM] [Info] Total Bins 2332
[LightGBM] [Info] Number of data points in the train set: 12028, number of used features: 19
[LightGBM] [Info] Start training from score 542032.619305
[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000316 seconds.
You can set `force_col_wise=true` to remove the overhead.
[LightGBM] [Info] Total Bins 2298
[LightGBM] [Info] Number of data points in the train set: 12028, number of used features: 19
[LightGBM] [Info] Start training from score 534776.444047</code></pre>
</div>
</div>
<div id="f2d2cc36" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> model <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> model_dict.keys():</span>
<span id="cb28-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> : </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>model_cv_score[model]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>GradientBoosting : 0.8613647608814923
XGBoost : 0.8762617283884332
LigntGBM : 0.8818569800403846</code></pre>
</div>
</div>
</section>
<section id="모델학습-및-예측" class="level3">
<h3 class="anchored" data-anchor-id="모델학습-및-예측">모델학습 및 예측</h3>
<ul>
<li>Score가 가장 높았던 lightGBM으로 진행해보기</li>
</ul>
<div id="7d1a0715" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">model_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LigntGBM'</span>].fit(preprocessed_train.values, y)</span>
<span id="cb30-2">prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LigntGBM'</span>].predict(preprocessed_test.values)</span>
<span id="cb30-3">prediction</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000727 seconds.
You can set `force_col_wise=true` to remove the overhead.
[LightGBM] [Info] Total Bins 2338
[LightGBM] [Info] Number of data points in the train set: 15035, number of used features: 19
[LightGBM] [Info] Start training from score 540682.653143</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>array([1296687.09405506,  311847.90404507,  806735.28228208, ...,
       1726006.82963994,  395020.94053356,  333594.29000994])</code></pre>
</div>
</div>
</section>
<section id="제출용-dataframe-및-csv파일-생성" class="level3">
<h3 class="anchored" data-anchor-id="제출용-dataframe-및-csv파일-생성">제출용 DataFrame 및 csv파일 생성</h3>
<div id="92579a95" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">df_submission <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'id'</span> : test_id, </span>
<span id="cb33-2">                              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'price'</span> : prediction})</span>
<span id="cb33-3">df_submission</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">id</th>
<th data-quarto-table-cell-role="th">price</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>15208</td>
<td>1.296687e+06</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>15209</td>
<td>3.118479e+05</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>15210</td>
<td>8.067353e+05</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>15211</td>
<td>2.098083e+05</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>15212</td>
<td>4.343237e+05</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6550</td>
<td>21758</td>
<td>4.230647e+05</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">6551</td>
<td>21759</td>
<td>5.111171e+05</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6552</td>
<td>21760</td>
<td>1.726007e+06</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">6553</td>
<td>21761</td>
<td>3.950209e+05</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6554</td>
<td>21762</td>
<td>3.335943e+05</td>
</tr>
</tbody>
</table>

<p>6555 rows × 2 columns</p>
</div>
</div>
</div>
<div id="bff541a2" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">df_submission.to_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'submission.csv'</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
</div>
</section>
</section>
<section id="gridsearch" class="level2">
<h2 class="anchored" data-anchor-id="gridsearch">GridSearch</h2>
<section id="lightgbm에-grid-search-적용해보기" class="level3">
<h3 class="anchored" data-anchor-id="lightgbm에-grid-search-적용해보기">LightGBM에 Grid Search 적용해보기</h3>
<ul>
<li>fit 후 결과값 부연설명
<ul>
<li>5 folds : cv = 5</li>
<li>4 candidates : 2(max_depth) X 2(n_estimators)</li>
<li>20 fits : 5 folds X 4 candidates</li>
</ul></li>
</ul>
<div id="4b8796c8" class="cell">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GridSearchCV</span>
<span id="cb35-2"></span>
<span id="cb35-3">grid_param <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb35-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_estimators'</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>], <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#트리수</span></span>
<span id="cb35-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_depth'</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>], <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#트리깊이</span></span>
<span id="cb35-6">}</span>
<span id="cb35-7"></span>
<span id="cb35-8">grid_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GridSearchCV(lgb.LGBMRegressor(random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1210</span>), </span>
<span id="cb35-9">                          param_grid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>grid_param, </span>
<span id="cb35-10">                          scoring<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'neg_mean_squared_error'</span>,</span>
<span id="cb35-11">                           cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_jobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</div>
<div id="0234cec0" class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">grid_model.fit(preprocessed_train.values, y)</span></code></pre></div>
</div>
<div id="6e05acac" class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1">grid_model.cv_results_</span>
<span id="cb37-2">params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_model.cv_results_[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'params'</span>]</span>
<span id="cb37-3"></span>
<span id="cb37-4">df_grid_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(params)</span>
<span id="cb37-5">df_grid_result[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'score'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_model.cv_results_[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean_test_score'</span>]</span></code></pre></div>
</div>
<div id="19f3be96" class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">df_grid_result</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">max_depth</th>
<th data-quarto-table-cell-role="th">n_estimators</th>
<th data-quarto-table-cell-role="th">score</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>1</td>
<td>50</td>
<td>-4.787553e+10</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>1</td>
<td>100</td>
<td>-3.851269e+10</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>10</td>
<td>50</td>
<td>-1.723322e+10</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>10</td>
<td>100</td>
<td>-1.636420e+10</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<ul>
<li>GridSearch 기준 Score가 가장 좋은 파라메터로 진행해보기</li>
</ul>
<div id="adc1dff5" class="cell">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lgb.LGBMRegressor(max_depth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, n_estimators<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1210</span>)</span>
<span id="cb39-2">model.fit(preprocessed_train.values, y)</span>
<span id="cb39-3">prediction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(preprocessed_test.values)</span>
<span id="cb39-4">prediction</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[LightGBM] [Warning] Accuracy may be bad since you didn't explicitly set num_leaves OR 2^max_depth &gt; num_leaves. (num_leaves=31).
[LightGBM] [Warning] Accuracy may be bad since you didn't explicitly set num_leaves OR 2^max_depth &gt; num_leaves. (num_leaves=31).
[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000693 seconds.
You can set `force_row_wise=true` to remove the overhead.
And if memory is not enough, you can set `force_col_wise=true`.
[LightGBM] [Info] Total Bins 2338
[LightGBM] [Info] Number of data points in the train set: 15035, number of used features: 19
[LightGBM] [Info] Start training from score 540682.653143
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
[LightGBM] [Warning] Accuracy may be bad since you didn't explicitly set num_leaves OR 2^max_depth &gt; num_leaves. (num_leaves=31).</code></pre>
</div>
<div class="cell-output cell-output-display">
<pre><code>array([1291842.41370212,  314132.92290945,  817260.44452776, ...,
       1713971.79620206,  389405.58625426,  332109.32763046])</code></pre>
</div>
</div>


</section>
</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>파이썬</category>
  <category>머신러닝</category>
  <guid>https://kr9268.github.io/posts/coach-ml-kaggle-20230506/</guid>
  <pubDate>Sat, 06 May 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[Pytorch] MNIST 실습</title>
  <dc:creator>Kibok Park</dc:creator>
  <link>https://kr9268.github.io/posts/coach-ml-mnist-20230301/</link>
  <description><![CDATA[ 





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>파이토치로 MNIST 머신러닝 실습해본 코드 기록용으로 남깁니다.</p>
</section>
<section id="pytorch활용한-mnist-데이터셋-로딩" class="level2">
<h2 class="anchored" data-anchor-id="pytorch활용한-mnist-데이터셋-로딩">Pytorch활용한 MNIST 데이터셋 로딩</h2>
<div id="fig-polar" class="cell quarto-figure quarto-figure-center quarto-float anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<div class="sourceCode cell-code" id="fig-polar" style="background: #f1f3f5;"><pre class="sourceCode python cell code-with-copy"><code class="sourceCode python"><span id="fig-polar-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="fig-polar-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch.nn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nn</span>
<span id="fig-polar-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.utils.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DataLoader</span>
<span id="fig-polar-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision</span>
<span id="fig-polar-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> dset</span>
<span id="fig-polar-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision.transforms <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> transforms</span>
<span id="fig-polar-7"></span>
<span id="fig-polar-8">root <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./data'</span></span>
<span id="fig-polar-9">mnist_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dset.MNIST (root<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>root, train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>transforms.ToTensor(), download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span> )</span>
<span id="fig-polar-10">mnist_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dset.MNIST (root<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>root, train<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>transforms.ToTensor(), download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="fig-polar-11"></span>
<span id="fig-polar-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train용 / Test용 데이터셋</span></span>
<span id="fig-polar-13">train_loader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(mnist_train, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="fig-polar-14">test_loader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(mnist_test, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig quarto-uncaptioned" id="fig-polar-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1
</figcaption>
</figure>
</div>
</section>
<section id="학습준비가중치-초기화-등" class="level2">
<h2 class="anchored" data-anchor-id="학습준비가중치-초기화-등">학습준비(가중치 초기화 등)</h2>
<ul>
<li>MNIST의 크기 : 28 * 28</li>
<li>Loss : Cross Entropy</li>
<li>Optimizer - SGD(Stochastic Gradient Descent)</li>
<li>Learning rate = 0.1</li>
</ul>
<div id="db135b1a" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.device(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> torch.cuda.is_available() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 모델 구현 (28*28 = 784 / 0~9라서 10개 / 가중치 사용하므로 bias)</span></span>
<span id="cb1-4">linear <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.nn.Linear(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">784</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, bias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).to(device) </span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># weight init 가중치 초기화</span></span>
<span id="cb1-7">torch.nn.init.normal_(linear.weight)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loss fn - Cross Entropy Loss</span></span>
<span id="cb1-10">criterion <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.nn.CrossEntropyLoss().to(device)</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># optimizer - SGD</span></span>
<span id="cb1-13">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.SGD(linear.parameters(), lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span></code></pre></div>
</div>
</section>
<section id="모델-학습" class="level2">
<h2 class="anchored" data-anchor-id="모델-학습">모델 학습</h2>
<div id="683a020b" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">training_epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># training 반복 횟수</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> epoch <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(training_epochs):</span>
<span id="cb2-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, (imgs, labels) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(train_loader):</span>
<span id="cb2-5">    labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> labels.to(device)</span>
<span id="cb2-6">    imgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> imgs.view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>).to(device)</span>
<span id="cb2-7"></span>
<span id="cb2-8">    outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> linear(imgs) </span>
<span id="cb2-9">    loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> criterion(outputs, labels) </span>
<span id="cb2-10"></span>
<span id="cb2-11">    optimizer.zero_grad()<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># optimzier zero grad</span></span>
<span id="cb2-12"></span>
<span id="cb2-13">    loss.backward() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loss backward</span></span>
<span id="cb2-14">    optimizer.step() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># optimzier step</span></span>
<span id="cb2-15"></span>
<span id="cb2-16">    _,argmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(outputs, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-17">    accuracy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> argmax).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>().mean()</span>
<span id="cb2-18"></span>
<span id="cb2-19">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb2-20">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Epoch [</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">], Step [</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">], Loss: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{: .4f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, Accuracy: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{: .2f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">%'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(</span>
<span id="cb2-21">    epoch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, training_epochs, i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(train_loader), loss.item(), accuracy.item()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Epoch [1/20], Step [6000/6000], Loss:  0.0273, Accuracy:  100.00%
Epoch [2/20], Step [6000/6000], Loss:  0.0762, Accuracy:  100.00%
Epoch [3/20], Step [6000/6000], Loss:  0.5928, Accuracy:  80.00%
Epoch [4/20], Step [6000/6000], Loss:  0.2854, Accuracy:  90.00%
Epoch [5/20], Step [6000/6000], Loss:  0.1373, Accuracy:  90.00%
Epoch [6/20], Step [6000/6000], Loss:  0.0668, Accuracy:  100.00%
Epoch [7/20], Step [6000/6000], Loss:  0.0253, Accuracy:  100.00%
Epoch [8/20], Step [6000/6000], Loss:  0.0542, Accuracy:  100.00%
Epoch [9/20], Step [6000/6000], Loss:  0.9203, Accuracy:  80.00%
Epoch [10/20], Step [6000/6000], Loss:  0.1244, Accuracy:  90.00%
Epoch [11/20], Step [6000/6000], Loss:  0.6108, Accuracy:  90.00%
Epoch [12/20], Step [6000/6000], Loss:  0.1312, Accuracy:  100.00%
Epoch [13/20], Step [6000/6000], Loss:  0.0705, Accuracy:  100.00%
Epoch [14/20], Step [6000/6000], Loss:  1.6259, Accuracy:  70.00%
Epoch [15/20], Step [6000/6000], Loss:  0.0538, Accuracy:  100.00%
Epoch [16/20], Step [6000/6000], Loss:  0.2435, Accuracy:  80.00%
Epoch [17/20], Step [6000/6000], Loss:  0.0061, Accuracy:  100.00%
Epoch [18/20], Step [6000/6000], Loss:  0.1091, Accuracy:  100.00%
Epoch [19/20], Step [6000/6000], Loss:  0.0157, Accuracy:  100.00%
Epoch [20/20], Step [6000/6000], Loss:  0.1413, Accuracy:  90.00%</code></pre>
</div>
</div>
</section>
<section id="학습된-모델-테스트" class="level2">
<h2 class="anchored" data-anchor-id="학습된-모델-테스트">학습된 모델 테스트</h2>
<div id="1d05ac8c" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">linear.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()</span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb4-3">    correct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-4">    total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, (imgs, labels) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(test_loader):</span>
<span id="cb4-6">        imgs, labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> imgs.to(device), labels.to(device)</span>
<span id="cb4-7">        imgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> imgs.view(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>)</span>
<span id="cb4-8"></span>
<span id="cb4-9">        outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> linear(imgs) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 구현</span></span>
<span id="cb4-10"></span>
<span id="cb4-11">        _, argmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(outputs, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># max()를 통해 최종 출력이 가장 높은 class 선택</span></span>
<span id="cb4-12">        total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> imgs.size(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-13">        correct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> (labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> argmax). <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>().item()</span>
<span id="cb4-14"></span>
<span id="cb4-15">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Test accuracy for </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> images: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{: .2f}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">%'</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(total, correct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Test accuracy for 10000 images:  91.99%</code></pre>
</div>
</div>


</section>

<p><br><strong>Copyright © 2024 Kibok Park All rights reserved.</strong><br></p> ]]></description>
  <category>파이썬</category>
  <category>머신러닝</category>
  <guid>https://kr9268.github.io/posts/coach-ml-mnist-20230301/</guid>
  <pubDate>Sun, 19 Feb 2023 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
